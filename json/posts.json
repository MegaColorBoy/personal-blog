{"posts": [{"section": "travel", "title": "Exploring Europe", "link": "travel/posts/exploring-europe", "date": "December 31st, 2022", "date_alt": "31.12.2022", "year": "2022", "date_raw": "2022-12-31", "slug": "exploring-europe", "category": "Travel", "categories": [{"title": "Travel", "link": "/category/travel/"}], "summary": "Sharing about my experiences and the places that I explored in my short three-day trip to Europe.", "reading_time": "23 minutes read", "preview_image_url": "https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4414.JPG", "filename": "content/travel/01_2022_12_13_exploring-europe.md", "status": "active", "content": "<!-- A beautiful shot/video of Amsterdam -->\n\n<div class=\"photo-gallery layout-one\">\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4211.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4211.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4522.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4522.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4640.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4640.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4663.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4663.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4350.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4350.JPG\" class=\"photo lazy\"></div>\n  </a>\n</div>\n\n<p>I had the fortune to visit Europe for 3 days along with my colleagues for a short company vacation. Visiting Europe has been something that I wanted to do since I was a kid but never got the chance.</p>\n\n<p>Considering this is my first post about travel, which is quite unusual of me, I tried to give it more of a POV-style narration and aimed to give the reading audience a glimpse into what trip was like and sharing my experiences of my three-day trip to Europe.</p>\n\n<p>So, hope you'll enjoy reading it! \ud83d\ude03</p>\n\n<h2>Wednesday, November 30th 2022</h2>\n\n<p>Although, I had a half-day of work, I was filled with excitement and a bit sleepy because the previous night I was busy packing my bags and making sure that I have packed the necessary travel items and documents i.e. clothes, electronics, toiletries, passport and tickets.</p>\n\n<h3>Dubai \u2708 Amsterdam</h3>\n\n<iframe src=\"https://www.google.com/maps/embed?pb=!1m28!1m12!1m3!1d12459849.0478486!2d23.052850213576285!3d40.32114883112738!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!4m13!3e4!4m5!1s0x3e5f5d0693260e69%3A0xe695d4007a48eee9!2sDubai%20International%20Airport%20(DXB)%20-%20Dubai!3m2!1d25.2531745!2d55.3656728!4m5!1s0x47c5e12838ad418f%3A0xc172cb466c0e2c5d!2sSchiphol%20Airport%2C%20Evert%20van%20de%20Beekstraat%20202%2C%201118%20CP%20Schiphol%2C%20Netherlands!3m2!1d52.3094696!2d4.763802999999999!5e0!3m2!1sen!2sae!4v1672403267423!5m2!1sen!2sae\" width=\"600\" height=\"350\" style=\"border:0;\" allowfullscreen=\"\" loading=\"lazy\" referrerpolicy=\"no-referrer-when-downgrade\"></iframe>\n\n<p>It was around 14.35, my colleagues and I were united at the Transavia Airlines Check-In at Dubai International Airport Terminal 2. There was a lot of rush at the airport as it's the beginning of the four-day UAE National Day holidays, so I guess, a lot of people made plans for a short vacations.</p>\n\n<div class=\"photo-gallery layout-two\">\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day0/IMG_E4086.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day0/thumbs/IMG_E4086.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day0/IMG_4080.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day0/thumbs/IMG_4080.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day0/IMG_E4087.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day0/thumbs/IMG_E4087.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day0/IMG_4082.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day0/thumbs/IMG_4082.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day0/IMG_4094.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day0/thumbs/IMG_4094.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day0/IMG_E4095.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day0/thumbs/IMG_E4095.JPG\" class=\"photo lazy\"></div>\n  </a>\n</div>\n\n<p>Right after I checked in, we went through the security checkpoint and then, we had nothing else to do other than sitting at the benches or exploring at the Dubai Duty Free until we board the flight at 18.00.</p>\n\n<p>It's my first time travelling from Dubai International Airport Terminal 2 and it's a small aiport mostly used for domestic and budget flights and I found it quite convienient because you get to walk less \ud83e\udd2d.</p>\n\n<div class=\"photo-gallery layout-one\">\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day0/IMG_E4102.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day0/thumbs/IMG_E4102.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day0/IMG_E4111.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day0/thumbs/IMG_E4111.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day0/IMG_4113.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day0/thumbs/IMG_4113.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day0/IMG_E4110.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day0/thumbs/IMG_E4110.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day0/IMG_E4103.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day0/thumbs/IMG_E4103.JPG\" class=\"photo lazy\"></div>\n  </a>\n</div>\n\n<p>The flight was a medium-sized Boeing 737-800 and I love the engine sound of all Boeing airplanes. The duration of the flight was around 9 hours including 30 minute stopover at <strong>Budapest, Hungary</strong> for short fuel refuelling. Quite a long flight though.</p>\n\n<p>During the flight, I was standing to avoid my legs from becoming numb, listening to my offline Spotify playlist, sleeping for a while, re-watching <strong>Top Gun: Maverick</strong> and began reading the infamous <strong>Masters of Doom</strong> book that was about John Carmack and the development of <strong>Doom</strong>.</p>\n\n<h3>Arriving at Schiphol airport</h3>\n\n<iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2439.359826750356!2d4.761614315950288!3d52.30947285956208!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x47c5e12838ad418f%3A0xc172cb466c0e2c5d!2sSchiphol%20Airport!5e0!3m2!1sen!2sae!4v1672406591573!5m2!1sen!2sae\" width=\"600\" height=\"350\" style=\"border:0;\" allowfullscreen=\"\" loading=\"lazy\" referrerpolicy=\"no-referrer-when-downgrade\"></iframe>\n\n<p>It was around 23.30 local time when we landed at Schiphol Airport, Amsterdam, Netherlands via Transavia Airlines from Dubai, United Arab Emirates. It was cold but I still didn't feel the cold temperature yet.</p>\n\n<p>Ah, Amsterdam! The things that came to my mind when I landed there was the beautiful water canals, boathouses, windmills, tulips, the Red Light districts and yes, the legalization of marijuana. It's so legal that it's the first thing that struck my nose at the airport \ud83d\udc40. </p>\n\n<div class=\"photo-gallery layout-four\">\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4114.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4114.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4116.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4116.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4118.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4118.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4119.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4119.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4123.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4123.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4124.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4124.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4125.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4125.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4126.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4126.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4128.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4128.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4129.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4129.JPG\" class=\"photo lazy\"></div>\n  </a>\n</div>\n\n<p>The airport was pretty quiet as I was walking towards the Immigration Counter. The temperature was about 2&deg;C and at this point, I wasn't able to feel the freezing temperature as the airport had their heaters on.</p>\n\n<p>Since, it was during the less busy hours, the crowd at the immigration counter was less and it took about 10-15 minutes max to pass the checkpoint.</p>\n\n<p>Over the immigration counter, the officer inquired me about my visit to Amsterdam:</p>\n\n<blockquote>\n  <p>Officer: So, what's your purpose of visit?</p>\n  \n  <p>Me: Umm, first time to Europe and I'm here to explore Amsterdam.</p>\n  \n  <p>Officer: Oh, there's a lot to discover at Amsterdam and you won't be able to cover it within three days.</p>\n  \n  <p>Me: Haha, I guess so.</p>\n  \n  <p>Officer: Welcome to Amsterdam and enjoy your stay!</p>\n  \n  <p>Me: Thanks!</p>\n</blockquote>\n\n<p>Yes, you can't explore Amsterdam in just three days as there's a lot of discover but hey, since it's my first time, I didn't really mind as I was curious to explore as much as I could.</p>\n\n<p>Right after that, I went along with my team of 18 colleagues to claim my baggage and there was a slight delay on our arrival of baggage, so, we had to wait for about 20 minutes until our baggages arrived.</p>\n\n<!-- Pictures inside the plane -->\n\n<div class=\"photo-gallery layout-three\">\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4130.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4130.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4131.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4131.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4132.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4132.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4138.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4138.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4134.JPG\" data-fancybox=\"gallery\">    \n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4134.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4142.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4142.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4144.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4144.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4145.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4145.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4148.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4148.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4151.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4151.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4156.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4156.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4137.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4137.JPG\" class=\"photo lazy\"></div>\n  </a>\n</div>\n\n<p>Collected our baggages and off we go towards the railway station that's well integrated in the airport, got our train passes and boarded the train to Amsterdam Centraal Sloterdijk Station.</p>\n\n<p>Upon arriving to the station, we were confused on which way to go to the hotel and luckily, there was a local (who was also high on weed) who guided us towards the station exit.</p>\n\n<p>It is, at this point, I started feel the really cold temperature of Amsterdam while walking to the hotel, I mean, I'm used to experiencing extreme heat conditions but not cold, so that was different for me.</p>\n\n<h3>Reached the hotel</h3>\n\n<!-- Map of Mercure Hotel -->\n\n<iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2435.0714114289763!2d4.833435315952462!3d52.38725575381048!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x47c5e259070906d5%3A0x783ea30e5e340b10!2sHotel%20Mercure%20Amsterdam%20Sloterdijk%20Station!5e0!3m2!1sen!2sae!4v1672407240861!5m2!1sen!2sae\" width=\"600\" height=\"350\" style=\"border:0;\" allowfullscreen=\"\" loading=\"lazy\" referrerpolicy=\"no-referrer-when-downgrade\"></iframe>\n\n<p>We reached the hotel and the receptionist was high on cannabis and ended up mixing our room cards \ud83d\ude02. </p>\n\n<p>Once I reached the room, I got myself into my night-wear, cooked up some instant ramen with my colleague and went straight to bed.</p>\n\n<h2>Thursday, December 1st 2022</h2>\n\n<p>Woke up at 6.00 after a good rest and the skies were still dark because the sun rise was at 8.30. Along with my roommate, we took the elevator to the rooftop restaurant where breakfast was being served because the ramen we had last night wasn't really enough \ud83d\ude43.</p>\n\n<h3>Breakfast time!</h3>\n\n<!-- Breakfast photos -->\n\n<div class=\"photo-gallery layout-fourteen\">\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4164.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4164.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4169.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4169.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4171.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4171.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4172.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4172.JPG\" class=\"photo lazy\"></div>\n  </a>\n</div>\n\n<p>As I entered the rooftop restaurant, the lovely smell of bread and waffles just made me more famished and I was ready to get myself some good breakfast!</p>\n\n<p>At first, I was a bit skeptical on what would be served at the breakfast buffet as I was selective of what I could eat i.e. Halal foods or anything vegetarian but gladly, all of their menu items were informative enough to let the customer know if whether pork was used in their menu or not.</p>\n\n<p>This is what the breakfast buffet consisted of:</p>\n\n<ul>\n<li>Pancakes</li>\n<li>Waffles</li>\n<li>Bacon &amp; Sausages (Of course, not Halal)</li>\n<li>Scrambled Eggs</li>\n<li>Smoked Salmon</li>\n<li>Pickles &amp; Olives</li>\n<li>Fruits</li>\n<li>Cereals</li>\n<li>Pastries (Muffins, tarts &amp; danishes)</li>\n<li>Smoothies</li>\n<li>Juices</li>\n</ul>\n\n<p>Although, the breakfast served at the restaurant was good, they never really changed their buffet menu. Not complaining, just saying, you know.</p>\n\n<h3>Off to exploring Amsterdam!</h3>\n\n<iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2435.523676302802!2d4.898173415952282!3d52.379056454417096!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x47c609b714fba975%3A0x23c2c32da32fbc42!2sAmsterdam%20Centraal%20railway%20station%2C%20Stationsplein%2C%201012%20AB%20Amsterdam%2C%20Netherlands!5e0!3m2!1sen!2sae!4v1672410916438!5m2!1sen!2sae\" width=\"600\" height=\"350\" style=\"border:0;\" allowfullscreen=\"\" loading=\"lazy\" referrerpolicy=\"no-referrer-when-downgrade\"></iframe>\n\n<p>Right after the heavy breakfast, all of us assembled outside the hotel and began shooting some photos and videos and then we were off to Amsterdam Sloterdijk station to catch the train to Amsterdam Centraal Station.</p>\n\n<div class=\"photo-gallery layout-four\">\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4174.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4174.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4178.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4178.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4183.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4183.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4186.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4186.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4188.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4188.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4192.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4192.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4193.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4193.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4194.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4194.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4197.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4197.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4198.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4198.JPG\" class=\"photo lazy\"></div>\n  </a>\n</div>\n\n<p>The train stations at Amsterdam, Netherlands looked really different and for some reason, very photogenic, in comparison to the ones that I have used in Dubai, United Arab Emirates and I enjoyed taking some photographs of the station and along with my colleagues.</p>\n\n<p>The waiting period for the train was about 5-7 minutes and as soon as it reached the platform, we boarded the train.</p>\n\n<div class=\"photo-gallery layout-one reverse\">\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4206.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4206.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4207.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4207.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4208.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4208.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4209.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4209.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4210.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4210.JPG\" class=\"photo lazy\"></div>\n  </a>\n</div>\n\n<p>The train was warm, cozy and really quiet as many of the locals were busy getting ready for the day. I wasn't able to click many pictures inside the train as I was mesmerized by the beauty of the cityscapes of Amsterdam.</p>\n\n<div class=\"photo-gallery layout-nine\">\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4211.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4211.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4213.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4213.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4217.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4217.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4216.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4216.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4219.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4219.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4223.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4223.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4235.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4235.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4237.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4237.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4238.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4238.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4220.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4220.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4218.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4218.JPG\" class=\"photo lazy\"></div>\n  </a>\n</div>\n\n<p>Got off the train, exited the station and boy, the combination of the temperature, weather and the people moving around clicking pictures gave it an electrifying vibe. I also did come to know that there are a lot of pick-pocketing cases around the corner at Amsterdam but thankfully, we were safe and didn't face any such incidents during our trip.</p>\n\n<!-- Some photos of Amsterdam -->\n\n<div class=\"photo-gallery layout-eleven\">\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4242.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4242.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4243.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4243.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4245.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4245.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4247.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4247.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4259.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4259.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4260.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4260.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4261.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4261.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4263.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4263.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4270.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4270.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4275.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4275.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4282.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4282.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4285.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4285.JPG\" class=\"photo lazy\"></div>\n  </a>\n</div>\n\n<p>We began strolling around the streets, I was in awe of how good the transportation system was at Amsterdam. From my observation, the amount of vehicles I saw were less and I guess that's because the government encourages their citizens and residents to make use of the public transportation and cycles that are parked around. In fact, there's a dedicated cycle track for cyclists and I guess, you'll find more bicycles than the entire population of Amsterdam.</p>\n\n<!-- Some photos of Amsterdam -->\n\n<div class=\"photo-gallery layout-thirteen\">\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4294.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4294.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4297.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4297.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4298.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4298.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4292.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4292.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4291.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4291.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4289.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4289.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4288.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4288.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4290.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4290.JPG\" class=\"photo lazy\"></div>\n  </a>\n</div>\n\n<p>The city's Dutch Baroque architecture, the smell of well-brewed coffee and Holland fries and the sound of calming breeze while walking through the alleyways just like the locals was quite an experience, I'd say.</p>\n\n<div class=\"photo-gallery layout-six\">\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4300.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4300.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4311.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4311.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4305.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4305.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4306.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4306.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4308.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4308.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4301.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4301.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4307.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4307.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4313.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4313.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4316.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4316.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4319.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4319.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4299.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4299.JPG\" class=\"photo lazy\"></div>\n  </a>\n</div>\n\n<p>It was around 11.25 when the sunlight peaked which felt like the perfect time to walk past the canals and I was fortunate enough to not miss the opportunity of taking some breathtaking snaps of the serene-looking canals.</p>\n\n<div class=\"photo-gallery layout-eight\">\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4320.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4320.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4321.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4321.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4323.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4323.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4326.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4326.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4327.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4327.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4330.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4330.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4328.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4328.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4343.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4343.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4346.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4346.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4322.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4322.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4329.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4329.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4335.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4335.JPG\" class=\"photo lazy\"></div>\n  </a>\n</div>\n\n<p>We tried to visit Anne Frank's Museum but unfortunately, there was a long queue and the officers were basically asking us to leave as the bookings were full. So, we were back to exploring the city vibes again.</p>\n\n<div class=\"photo-gallery layout-sixteen\">\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4354.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4354.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4360.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4360.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4361.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4361.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4371.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4371.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4363.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4363.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4364.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4364.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4369.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4369.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4370.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4370.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4362.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4362.JPG\" class=\"photo lazy\"></div>\n  </a>\n</div>\n\n<p>Man, the water canals are just amazing. Can't get enough of them. On our way, we passed by the Rijksmuseum but none of us didn't plan on visiting it as many of them weren't interested.</p>\n\n<p>As we were walking by the Rijksmuseum, I remember seeing a lady with a beautiful voice singing to a large audience outside the museum. I regret for not recording it.</p>\n\n<!-- Food pics -->\n\n<div class=\"photo-gallery layout-ten\">\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4380.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4380.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4373.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4373.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4381.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4381.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4377.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4377.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4376.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4376.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4375.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4375.JPG\" class=\"photo lazy\"></div>\n  </a>\n</div>\n\n<p>Few meters away, we spotted an ice rink and a few food stalls, since we were hungry and parched, we decided to try out some of the local street food. </p>\n\n<p>So, I went for large size hotdog and a large size fries, which costed me about 15 euros, which is quite expensive but I guess it should be fine for the locals and residents over there.</p>\n\n<p>There were benches (filled with pigeons) near the eateries, so I took a seat and had my food. It was quite delicious and especially, I love the fries.</p>\n\n<div class=\"photo-gallery layout-thirteen\">\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4388.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4388.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4384.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4384.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4391.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4391.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4406.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4406.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4403.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4403.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4408.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4408.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4402.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4402.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4405.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4405.JPG\" class=\"photo lazy\"></div>\n  </a>\n</div>\n\n<p>The famous Van Gogh Museum was a few metres away from the food stalls and we all took some photos outside it. I didn't go inside as I tagged along with the rest of the crowd but however, a colleague visited it and told me that it was quite an experience to visit.</p>\n\n<p>From there, we went to visit the Heineken Beer Museum, which costed around 21 euros per person. I got two tokens to get myself some free drinks but I don't drink alcohol, so I gave one of it to my colleague and I used the remaining token to get myself an orange soda, which tasted like orange juice mixed with sparkling water.</p>\n\n<p>Honestly, about the museum, I wasn't really interested in it, it could be maybe because that I never drink beer, let alone, alcohol but I did see the rest of the bunch did enjoy their time.</p>\n\n<div class=\"photo-gallery layout-twelve\">\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4411.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4411.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4412.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4412.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4414.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4414.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4415.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4415.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4418.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4418.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4420.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4420.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/IMG_4422.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day1/thumbs/IMG_4422.JPG\" class=\"photo lazy\"></div>\n  </a>\n</div>\n\n<p>By now, the skies were getting darker and still the scene was quite beautiful. We decided to stroll around for food and some of them wanted to try out the menu at The Bulldog Cafe (which is known for serving cakes and coffee that's infused with cannabis). I went in along with them to give them some company but I really couldn't the handle the smell as it made me feel nauseous, so I decided to head outside and explore for some interesting eateries around the area until they were done.</p>\n\n<p>I found a lot of restaurants serving cuisines such as Turkish, Argentine, Indian, Chinese, Japanese and so on. There was a really good restaurant that served steak but was quite expensive (and of course, didn't really meet my budget), most of my colleagues went in there for dinner and I and two of my other colleagues walked to Burger King that was closer to the steak restaurant.</p>\n\n<p>At Burger king, I got myself a plant-based whopper burger and I was a bit confused if whether it was really plant-based because it really did taste like beef \ud83d\ude06.</p>\n\n<p>Right after dinner, we passed by the Red Light district but it really wasn't for me (and hey, I'm married!). However, I did witness some of the tourists making perverted gestures at the sex workers and I really felt bad for them especially the fact that they've got to endure it almost everyday makes it even more sad.</p>\n\n<p>At this point, my legs weren't able bear the pain of walking longer distances, so I decided to call it a day, went back to the hotel to get some good sleep and be prepared for the next adventure.</p>\n\n<h2>Friday, December 2nd 2022</h2>\n\n<div class=\"photo-gallery layout-five\">\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4425.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4425.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4449.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4449.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4429.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4429.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4445.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4445.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4424.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4424.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4447.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4447.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4440.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4440.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4439.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4439.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4450.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4450.JPG\" class=\"photo lazy\"></div>\n  </a>\n</div>\n\n<p>Woke up at 6.30, got ready to have breakfast and assembled with my colleagues at the reception because it's quite a fun day as we were off to visiting the Christmas Market at Brussels, Belgium, which was around 2.5 hours of road trip from Amsterdam, Netherlands.</p>\n\n<p>It was a Mercedes Benz Tourrider Coach Bus and given the really cold 2&deg;C temperature, the bus was quite comfy and warming.</p>\n\n<p>The long windmills, the green landscapes, the withered-out trees, the well-organized road signs along with the really cold weather really did give that \"Wintery-European\" feel while driving in the highway.</p>\n\n<p>In between, we stopped by a truck-stop for a short break, got myself some a nice large hot coffee (Not from Starbucks but from a supermarket that next to it \ud83d\ude1b) and resumed our travel to Brussels, Belgium.</p>\n\n<h3>Hallo, Belgi\u00eb!</h3>\n\n<iframe src=https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d80598.44841097394!2d4.305377701256357!3d50.85521141034697!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x47c3a4ed73c76867%3A0xc18b3a66787302a7!2sBrussels%2C%20Belgium!5e0!3m2!1sen!2sae!4v1672408979784!5m2!1sen!2sae\" width=\"600\" height=\"350\" style=\"border:0;\" allowfullscreen=\"\" loading=\"lazy\" referrerpolicy=\"no-referrer-when-downgrade\"></iframe>\n\n<p>Finally, at around 10.30, we reached the Centraal Bus Station at Brussels, Belgium and the driver had instructed us to get back to the station by 17.30.</p>\n\n<div class=\"photo-gallery layout-seven\">\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4463.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4463.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4465.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4465.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4459.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4459.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4458.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4458.JPG\" class=\"photo lazy\"></div>\n  </a>  \n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4464.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4464.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4462.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4462.JPG\" class=\"photo lazy\"></div>\n  </a>\n</div>\n\n<p>We decided to march towards the Christmas Market and boy, this place is just so photogenic. So, I was practicing my photography skills by taking some nice photos.</p>\n\n<!-- Photos here -->\n\n<div class=\"photo-gallery layout-fifteen\">\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4474.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4474.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4480.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4480.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4486.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4486.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4490.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4490.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4499.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4499.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4496.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4496.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4506.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4506.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4505.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4505.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4507.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4507.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4517.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4517.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4530.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4530.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4525.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4525.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4498.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4498.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4500.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4500.JPG\" class=\"photo lazy\"></div>\n  </a>\n</div>\n\n<p>Comparatively, the vibes at Brussels were much more livelier than at Amsterdam as there was a lot of tourists from various countries such as India, Pakistan, Saudi Arabia, United Arab Emirates and so on. In fact, I even met a nice old lady from Palestine who gave me a nice rose and I was delighted until she asked me to give her something in return, so I gave her around 5 euros but she was a sweet lady.</p>\n\n<iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2519.1561807790727!2d4.350246915909936!3d50.84679206660763!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x47c3c47f4614f1f1%3A0xb03c355d8fe2cfb6!2sGrand%20Place!5e0!3m2!1sen!2sae!4v1672409322570!5m2!1sen!2sae\" width=\"600\" height=\"350\" style=\"border:0;\" allowfullscreen=\"\" loading=\"lazy\" referrerpolicy=\"no-referrer-when-downgrade\"></iframe>\n\n<p>We strolled around La Grand Place and to our surprise, there was a couple getting married when we got there and it was nice seeing the couple waving at the the crowd while they were on top.</p>\n\n<p>As I had mentioned above, the city quite lively like there so many things going on at the same time. Belgium is quite famous for Waffles and Fries and my aim was to try them at least once before I leave.</p>\n\n<h3>The Christmas Market</h3>\n\n<iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2518.7846349675174!2d4.344603115910142!3d50.85367226610911!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x47c3c3bc61e78981%3A0x35b9900d9e64c2b0!2sChristmas%20Big%20Wheel!5e0!3m2!1sen!2sae!4v1672409177722!5m2!1sen!2sae\" width=\"600\" height=\"350\" style=\"border:0;\" allowfullscreen=\"\" loading=\"lazy\" referrerpolicy=\"no-referrer-when-downgrade\"></iframe>\n\n<p>At last, we reached the Christmas Market and for some reason, I had the same feeling when I watched Home Alone 2 when I was a kid. I mean, I don't celebrate Christmas but I can feel those vibes around and I really enjoyed that joyful atmosphere.</p>\n\n<div class=\"photo-gallery layout-one reverse\">\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4542.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4542.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4549.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4549.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4552.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4552.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4547.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4547.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4546.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4546.JPG\" class=\"photo lazy\"></div>\n  </a>\n</div>\n\n<p>At the market, I tried some really Belgian Waffles made by a nice French lady at a small stall. I tried without any syrup or whipped cream and it was absolutely scrumptious. The texture, the smell and the softness of it was quite amazing. Hands down to one of the best waffles I have ever tried.</p>\n\n<p>Unfortunately, I regret not being able to take photos of the food that I tried like:</p>\n\n<ul>\n<li>A delicious potato dish named \"Gratin Aux Truffes\" filled with some sort of thick cheese sauce and topped with caramelized onions and lots of mushrooms.</li>\n<li>Belgian fries with samuraisauce which felt like a mix of ketchup, mayonnaise and hot sauce.</li>\n<li>Fried anchovies with sour cream. Oh, this was really soothing.</li>\n<li>Caramelized pecan nuts. I got myself three packets as they were quite cheap and tasted really good.</li>\n</ul>\n\n<p>At this point, the temperature started to lower down and touched 1&deg;C and got windy too. It was super cold that I couldn't even feel my hands and decided to wear gloves on full-time.</p>\n\n<div class=\"photo-gallery layout-eleven reverse\">\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4575.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4575.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4569.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4569.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4560.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4560.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4557.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4557.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4565.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4565.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4567.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4567.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4574.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4574.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4571.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4571.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4570.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4570.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4554.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4554.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4563.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4563.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4568.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4568.JPG\" class=\"photo lazy\"></div>\n  </a>\n</div>\n\n<p>We decided to visit a beer tasting shop which about a kilometre by walking. I was busy taking photos while walking to the beer shop but don't worry, I don't drink, I just gave them some company and thought of browsing the internet for a while until they were done with it. But the vibe inside the shop was quite nice and warming.</p>\n\n<!-- FritzLand picture -->\n\n<iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2519.122231115288!2d4.3484664159099395!3d50.84742076656201!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x47c3c47898770fe1%3A0xdb2692f2b293f1c3!2sFritland!5e0!3m2!1sen!2sae!4v1672409412544!5m2!1sen!2sae\" width=\"600\" height=\"350\" style=\"border:0;\" allowfullscreen=\"\" loading=\"lazy\" referrerpolicy=\"no-referrer-when-downgrade\"></iframe>\n\n<p>All of us got hungry and we found a really nice shop named <strong>FritLand</strong> that sold really good chicken hotdogs and fries. So, we topped them off with some of that Samurai sauce and caramelized onions. The taste of those sandwiches were so addictive that I ended up gobbling like two of 'em \ud83d\ude02.</p>\n\n<p>I was hunting for a souvenir shop where I could some nice Belgian chocolates and I successfully purchased a bundle of six chocolate bars for about 15 euros. </p>\n\n<div class=\"photo-gallery layout-eight reverse\">\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4578.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4578.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4580.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4580.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4582.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4582.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4583.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4583.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4584.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4584.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4585.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4585.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4586.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4586.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4587.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4587.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4589.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4589.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4590.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4590.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4591.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4591.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/IMG_4588.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day2/thumbs/IMG_4588.JPG\" class=\"photo lazy\"></div>\n  </a>\n</div>\n\n<p>By then, the time was around 17.00 and all of us decided to reach the bus. It was dark and cold but more colorful at night. I just had to take photos despite my hand becoming numb.</p>\n\n<p>Around 17.35, we reached the bus, I was relieved as the heaters were on and I felt like a frozen chicken being thawed out in hot water.</p>\n\n<p>At around 21.00, we reached the hotel, some of them decided to hang around by the pubs and I decided to head back to the room as my legs were exhausted by thankfully, unlike the previous day, which was like 3x times the distance covered, I covered around 6.5KM of walking distance.</p>\n\n<p>That night, I decided to try some doner kebab and sharwarma via Uber Eats and watched a little bit of Godzilla (1992) which was dubbed in Dutch \ud83d\ude02 and right after that, I called it a day and went to sleep like a baby \ud83d\ude34.</p>\n\n<h2>Saturday, December 3rd 2022</h2>\n\n<p>In the early eerie dark hours around 5.30, I was awake and I thought of making some calls to my parents and wife to catch up on things and keep them updated about my trip.</p>\n\n<p>I went to have some breakfast in the hotel but turns out most of them weren't even awake yet as they were all exhausted with their late night hangouts.</p>\n\n<iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d9720.308647465745!2d4.81736814597658!3d52.47773859615012!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x47c5fcf7bec1145b%3A0x8b2f4837e2ca20fe!2sZaanse%20Schans%2C%20Zaandam%2C%20Netherlands!5e0!3m2!1sen!2sae!4v1672409501479!5m2!1sen!2sae\" width=\"600\" height=\"350\" style=\"border:0;\" allowfullscreen=\"\" loading=\"lazy\" referrerpolicy=\"no-referrer-when-downgrade\"></iframe>\n\n<p>On this day, we planned to visit a place named Zaanse Schans, which is about 45 minute ride by the public bus. Honestly, I never knew what this place was about until I looked it up on the internet and it was seemed quite interesting. </p>\n\n<div class=\"photo-gallery layout-four\">\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4598.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4598.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4599.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4599.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4600.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4600.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4601.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4601.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4602.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4602.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4603.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4603.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4604.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4604.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4606.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4606.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4605.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4605.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4607.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4607.JPG\" class=\"photo lazy\"></div>\n  </a>\n</div>\n\n<p>Initially, our plan was to take the train from Amsterdam Sloterdijk to a station that was closest to the village and from there, we would rent and ride bicycles to the village but unfortunately, the weather was too cold (0&deg;C) and windy that we could barely feel our hands and ears, thus we opted for Plan B i.e. to take a public bus from the Amsterdam Centraal that would take us directly to the spot.</p>\n\n<p>The public buses seemed quite familiar to the buses I have travelled in Dubai and as mentioned above, the trip was about 45 minutes with 10 to 12 stops in between. The bus was quite warm and the people were quite friendly and often greeted us in Dutch, English or French with a smile on their faces.</p>\n\n<h3>Discovering Zaanse Schans</h3>\n\n<!-- Bus stop  of zaanse -->\n\n<div class=\"photo-gallery layout-fifteen\">\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4610.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4610.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4616.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4616.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4618.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4618.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4640.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4640.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4635.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4635.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4632.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4632.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4624.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4624.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4629.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4629.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4626.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4626.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4636.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4636.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4631.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4631.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4621.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4621.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4634.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4634.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4630.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4630.JPG\" class=\"photo lazy\"></div>\n  </a>\n</div>\n\n<p>Alas, we reached the spot and wow, it looks really serene and calming. Leafless trees, golden maple leaves, Siberian ducks and huge windmills are what made the spot really unique.</p>\n\n<div class=\"photo-gallery layout-sixteen reverse\">\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4663.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4663.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4664.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4664.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4641.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4641.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4647.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4647.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4653.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4653.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4658.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4658.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4662.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4662.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4648.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4648.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4646.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4646.JPG\" class=\"photo lazy\"></div>\n  </a>\n</div>\n\n<p>There were a few coffee shops, souvenir shops and museums built into a small cottages, which was quite nice. There was a shop that sold warm hot chocolate and stroopwaffels, I bought myself a hot chocolate and some stroopwaffels. The hot chocolate was really needed to warm myself up for that cold weather.</p>\n\n<!-- Cheese factory photos -->\n\n<div class=\"photo-gallery layout-four\">\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4665.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4665.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4666.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4666.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4667.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4667.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4668.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4668.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4669.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4669.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4676.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4676.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4677.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4677.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4678.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4678.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4679.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4679.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4680.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4680.JPG\" class=\"photo lazy\"></div>\n  </a>\n</div>\n\n<p>As we were touring around, we spotted a cheese factory that was not selling different types of cheeses but you can also try samples of them. Again, really warm inside and I mean, unless you're lactose intolerant, who doesn't love cheese? Huh?</p>\n\n<!-- More windmill photos  -->\n\n<div class=\"photo-gallery layout-seventeen\">\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4681.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4681.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4688.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4688.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4682.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4682.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4686.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4686.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4691.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4691.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4692.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4692.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4714.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4714.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4713.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4713.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4704.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4704.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4712.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4712.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4710.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4710.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4697.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4697.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4702.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4702.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4703.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4703.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4711.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4711.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4694.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4694.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4705.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4705.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4683.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4683.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4687.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4687.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4698.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4698.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4695.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4695.JPG\" class=\"photo lazy\"></div>\n  </a>\n</div>\n\n<p>Right after that, we walked towards the windmills and it started to get really windy and I could feel my lips and ears getting numb due to cold wind. There was a souvenir shop underneath one of those windmills and I just went inside to explore and take some heat until I could move on again \ud83d\ude01.</p>\n\n<div class=\"photo-gallery layout-eighteen\">\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4717.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4717.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4718.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4718.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4722.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4722.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4721.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4721.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4723.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4723.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4724.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4724.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4725.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4725.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4727.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4727.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4728.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4728.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4730.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4730.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4731.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4731.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4732.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4732.JPG\" class=\"photo lazy\"></div>\n  </a>\n</div>\n\n<p>Some of us split up into groups of 4 and began exploring some parts of the village and I spotted this Wooden Shoe Museum and of course, it was free entry, so I went in to take some nice photos and learnt a lot about their history and gained an insight about their culture too.</p>\n\n<p>Right after that, it was around 13.30 and I was super hungry and needed to eat something warm. I went inside a nice cafe that served really good crepes with different toppings. I opted for the one that was topped with pineapples and goat cheese. It was hot and boy, it was really delicious. I wish could have more of that but it was quite expensive costing around 12 euros.</p>\n\n<p>We toured around for a bit, took some photos and then decided to head back to the Amsterdam Centraal Station by bus.</p>\n\n<h3>Back to Amsterdam Centraal</h3>\n\n<!-- me spinnning around video in centraal -->\n\n<div class=\"photo-gallery layout-eight\">\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4735.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4735.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4752.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4752.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4737.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4737.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4740.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4740.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4742.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4742.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4743.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4743.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4745.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4745.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4748.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4748.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4756.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4756.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4736.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4736.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4744.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4744.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4746.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4746.JPG\" class=\"photo lazy\"></div>\n  </a>\n</div>\n\n<p>Once we reached the station, some of us decided to split up for shopping, visiting a few museums and some decided to head back to the hotel to take some rest. I mean, it was a lot walking for the day, anyways.</p>\n\n<p>I opted to head back to the hotel to take some rest but a few of my colleagues asked me join them as they were going to shop for some souvenirs in the central city. So, I changed my minds and decided to tag along with them.</p>\n\n<p>It was around 16.30 and it looked like as if it was night time already but in my opinion, Amsterdam looks really beautiful at night and I decided some more photos as we were walking and hunting for good souvenir shops.</p>\n\n<div class=\"photo-gallery layout-twenty\">\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4761.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4761.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2435.7060342666996!2d4.893981715952152!3d52.37575015466177!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x47c609b87588f981%3A0x2f84f8fadb18ca7c!2sManneken%20Pis%20Damrak!5e0!3m2!1sen!2sae!4v1672410232387!5m2!1sen!2sae\" width=\"800\" height=\"600\" style=\"border:0;\" allowfullscreen=\"\" loading=\"lazy\" referrerpolicy=\"no-referrer-when-downgrade\"></iframe>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4760.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4760.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4759.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4759.JPG\" class=\"photo lazy\"></div>\n  </a>\n</div>\n\n<p>I passed by a shop named <strong>\"Manneken Pis\"</strong>, which claimed to serve the No.1 fries in Holland and I decided to try it out as my colleagues were busy looking for souvenirs. It's a weekend and there was such a long queue outside the shop but fast moving, so I bought a large sized fries topped with cheese and samuraisauce. It was delicious and one of the best fries I have ever had till date. I guess it did live up to it's name.</p>\n\n<!-- Photos of the city  -->\n\n<div class=\"photo-gallery layout-eighteen reverse\">\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4762.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4762.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4765.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4765.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4767.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4767.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4768.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4768.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4780.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4780.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4772.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4772.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4773.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4773.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4775.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4775.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4777.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4777.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4776.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4776.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4774.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4774.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4779.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4779.JPG\" class=\"photo lazy\"></div>\n  </a>\n</div>\n\n<p>Then, some of my colleagues suggested if we could go on a canal ride and asked if anyone was interested to join them and I decided to join them. It was about 25 minute walk from the food stall and as we were walking by, I decided to shoot some more photos of the bustling city.</p>\n\n<div class=\"photo-gallery layout-two reverse\">\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4785.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4785.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4784.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4784.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4781.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4781.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4782.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4782.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4783.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4783.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/IMG_4786.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day3/thumbs/IMG_4786.JPG\" class=\"photo lazy\"></div>\n  </a>\n</div>\n\n<p>By the time, we reached the canal station, the reservations were full and learnt that we should have booked it in advance of a week. Kind of disappointed, we decided to head back to the hotel by taking a local taxi back to Amsterdam Centraal Station.</p>\n\n<p>Upon reaching the station, it looked really nice and decided to take some photos before boarding the train to Sloterdijk. It was around 21.35 and I was hungry, so I stopped by the nearest grocery store and bought myself some instant ramen.</p>\n\n<p>I reached the hotel, got myself dressed up in my nightwear and warmed up the instant ramen and after sometime, I went to sleep for a few hours as we all have to catch our flight to Dubai that departs at 6.00.</p>\n\n<h2>Sunday, December 4th 2022</h2>\n\n<p>Woke up at 1.00, got myself dressed up and all of us assembled at the reception to check-out our rooms and waited for our Uber ride to take us to Schiphol airport. On this day, The weather was -1&deg;C but luckily, we couldn't really feel it much as we were indoors most of the time.</p>\n\n<h3>Amsterdam \u2708 Dubai</h3>\n\n<p><iframe src=\"https://www.google.com/maps/embed?pb=!1m28!1m12!1m3!1d12797899.923994329!2d21.075311151076292!3d38.45331018708112!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!4m13!3e4!4m5!1s0x47c5e12838ad418f%3A0xc172cb466c0e2c5d!2sSchiphol%20Airport%2C%20Evert%20van%20de%20Beekstraat%20202%2C%201118%20CP%20Schiphol%2C%20Netherlands!3m2!1d52.3094696!2d4.763802999999999!4m5!1s0x3e5f5d0693260e69%3A0xe695d4007a48eee9!2sDubai%20International%20Airport%20(DXB)%20-%20Dubai!3m2!1d25.2531745!2d55.3656728!5e0!3m2!1sen!2sae!4v1672403349570!5m2!1sen!2sae\" width=\"600\" height=\"350\" style=\"border:0;\" allowfullscreen=\"\" loading=\"lazy\" referrerpolicy=\"no-referrer-when-downgrade\"></iframe></p>\n\n<p>We reached the airport at around 1.45 and waited for some of our colleagues to join us and the gates opened up at 2.00 and all of us checked in our luggages, went through the immigration and security checks and then all of us headed towards the waiting area until the gates opened up.</p>\n\n<!-- Airport pics -->\n\n<div class=\"photo-gallery layout-five\">\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day4/IMG_4787.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day4/thumbs/IMG_4787.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day4/IMG_4788.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day4/thumbs/IMG_4788.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day4/IMG_4789.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day4/thumbs/IMG_4789.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day4/IMG_4790.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day4/thumbs/IMG_4790.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day4/IMG_4791.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day4/thumbs/IMG_4791.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day4/IMG_4792.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day4/thumbs/IMG_4792.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day4/IMG_4793.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day4/thumbs/IMG_4793.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day4/IMG_4794.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day4/thumbs/IMG_4794.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day4/IMG_4795.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day4/thumbs/IMG_4795.JPG\" class=\"photo lazy\"></div>\n  </a>\n</div>\n\n<p>I decided to sit down and re-watch my all-time favorite Michael Mann's <strong>Heat (1995)</strong> and I still get goosebumps by watching the electrifying performances of both Robert De Niro and Al Pacino. You should watch this classic if you still haven't.</p>\n\n<p>The gates opened up at around 5.20 and all of us waited in the long queue and boarded the plane at around 6.00.</p>\n\n<h3>Goodbye, Amsterdam!</h3>\n\n<!-- flight pics/takeoff -->\n\n<div class=\"photo-gallery layout-one\">\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day4/IMG_4796.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day4/thumbs/IMG_4796.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day4/IMG_4804.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day4/thumbs/IMG_4804.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day4/IMG_4814.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day4/thumbs/IMG_4814.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day4/IMG_4806.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day4/thumbs/IMG_4806.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day4/IMG_4812.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day4/thumbs/IMG_4812.JPG\" class=\"photo lazy\"></div>\n  </a>\n</div>\n\n<p>Albeit being tired, I was quite awake and decided to take some photos while taking-off and mid-air of the journey.</p>\n\n<p>After eating some stroopwaffels and instant ramen on the flight, I continued to take some rest until we touch down at Dubai, United Arab Emirates.</p>\n\n<h3>Back to Dubai</h3>\n\n<!-- landing video -->\n\n<div class=\"photo-gallery layout-nineteen reverse\">\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day4/IMG_4820.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day4/thumbs/IMG_4820.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day4/IMG_4818.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day4/thumbs/IMG_4818.JPG\" class=\"photo lazy\"></div>\n  </a>\n  <a href=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day4/IMG_4816.JPG\" data-fancybox=\"gallery\">\n    <div data-src=\"https://res.cloudinary.com/dajwxxago/image/upload/v1672488741/europetrip/day4/thumbs/IMG_4816.JPG\" class=\"photo lazy\"></div>\n  </a>\n</div>\n\n<p>The ending scene from Chris Nolan's <strong>Inception</strong> was running in my mind and that's when I realized that our trip has come to an end.</p>\n\n<p>Honestly, what really made this trip really special were the colleagues and the fun memories we had while exploring with each other at Amsterdam, Netherlands and Brussels, Belgium.</p>\n\n<p>At the airport, I was stopped by Dubai Customs officials as they felt that I might be carrying food items that contained marijuana. Thankfully, I never did carry any such items and they cleared me off.</p>\n\n<p>Later, we picked up our baggages, said our goodbyes and parted ways to home. Once I reached home, I was happy and committed to myself that I should blog my experiences about this trip or else, I might forget about it \ud83d\ude02.</p>\n\n<p>If you've come this far, thank you so much for reading this post and hopefully, you've enjoyed reading and had a glimpse of Europe through my POV-style narration.</p>\n\n<p>Vaarwel mijn vriend! \ud83d\udc4b</p>\n", "index": 1}, {"section": "writings", "title": "Trying out the Redragon K552 Kumara RGB Mechanical Keyboard", "link": "writings/posts/trying-out-the-redragon-k552-kumara-rgb-mechanical-keyboard", "date": "November 27th, 2022", "date_alt": "27.11.2022", "year": "2022", "date_raw": "2022-11-27", "slug": "trying-out-the-redragon-k552-kumara-rgb-mechanical-keyboard", "category": "Productivity + Tech", "categories": [{"title": "Productivity", "link": "/category/productivity/"}, {"title": "Tech", "link": "/category/tech/"}], "summary": "My experiences using a mechanical keyboard for the first time.", "reading_time": "2 minutes read", "preview_image_url": "", "filename": "content/writings/77_2022_11_27_trying-out-the-redragon-k552-kumara-rgb-mechanical-keyboard.md", "status": "active", "content": "<figure>\n    <img src=\"/static/images/redragon-k552-kumara.jpeg\" />\n    <figcaption>Redragon K552 Kumara RGB Keyboard</figcaption>\n</figure>\n\n<p>Yes, I finally did it and bought myself a mechanical keyboard after tirelessly scrolling through Amazon and YouTube for a good keyboard that doesn't hurt my pocket in the long run.</p>\n\n<h2>What does it feel like?</h2>\n\n<p>Got it delivered yesterday and as I unboxed it, I noticed that the build quality is strong and it's quite a heavy keyboard that has around 18 RGB modes to spice things up a bit.</p>\n\n<p>I got the one with the Outemu Red Switches (More like a Cherry MX Red clones) and since it's a linear switch, the typing experience is buttery smooth and not at all noisy. This should be good for typing in office environments or gamers who like to be fast while playing their favorite games.</p>\n\n<p>Currently, I have one issue with it i.e. that keyboard is a bit high and it kind of tires my wrists after typing for longer sessions but I guess, it can be fixed with a wrist rest (Maybe, a nice wooden one \ud83d\udc40).</p>\n\n<p>On my first try, the keys seemed a bit fast for me as I'm not really used to typing on linear switches, let alone, on a mechanical keyboard. But as of writing this article, I got my speed back up and I have been able to achieve around 75-80WPM.</p>\n\n<h2>Conclusion</h2>\n\n<p>Apart from that, I'm quite happy about this purchase and would definitely hope that it lasts longer until I get another mechanical keyboard.</p>\n\n<p>If you are looking to buy this keyboard, I'd recommend you to give a shot and see it for yourself because I feel that every programmer deserves to type on a good keyboard.</p>\n\n<p>Stay tuned for more content.</p>\n", "index": 77}, {"section": "writings", "title": "Learning C# 10 and .NET Core 6", "link": "writings/posts/learning-c-10-and-net-core-6", "date": "November 27th, 2022", "date_alt": "27.11.2022", "year": "2022", "date_raw": "2022-11-27", "slug": "learning-c-10-and-net-core-6", "category": "Learning + Programming", "categories": [{"title": "Learning", "link": "/category/learning/"}, {"title": "Programming", "link": "/category/programming/"}], "summary": "Getting back into the old roots again.", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/writings/76_2022_11_27_learning-c-10-and-net-core-6.md", "status": "active", "content": "<p>To those who haven't been following me a lot, I used to build games on Unity 3D and build desktop applications on .NET and C# during my university days.</p>\n\n<p>Ever since I discovered PHP and Laravel, I never went back to .NET and now after taking a look at the <a href=\"https://www.techempower.com/benchmarks/#section=data-r21\">Fortune benchmarks</a> for .NET Core 6 vs Laravel, I decided to take some time out to learn it again.</p>\n\n<p>I started two weeks ago and the learning curve seemed quite familiar due to previous development experiences. I don't know if it's me but I felt like Laravel might have borrowed a few concepts from .NET Core Framework but hey, everyone needs some sort of inspiration, right?</p>\n\n<p>Unlike .NET, Laravel is usually and still is a \"batteries included\" type of framework and that helps you get the job done. However, from what I have researched, applications built on .NET seems to be more performant than applications built on Laravel.</p>\n\n<h2>So, what's the current progress?</h2>\n\n<p>Well, I haven't touched the ASP.MVC part yet as I'm geting myself familiar with the coding conventions, static typing (yes, it does take sometime to get used to) by writing some test console-based applications and solving Project Euler problems.</p>\n\n<p>Hopefully, I'll be able to share about what I have learnt using the framework on this blog by either building new applications or rewriting some of my Laravel projects.</p>\n\n<p>Stay tuned for more!</p>\n", "index": 76}, {"section": "til", "title": "Temporarily disable IPV6 protocol on Ubuntu", "link": "til/posts/temporarily-disable-ipv6-protocol-on-ubuntu", "date": "November 27th, 2022", "date_alt": "27.11.2022", "year": "2022", "date_raw": "2022-11-27", "slug": "temporarily-disable-ipv6-protocol-on-ubuntu", "category": "DevOps + Linux + Ubuntu", "categories": [{"title": "DevOps", "link": "/category/devops/"}, {"title": "Linux", "link": "/category/linux/"}, {"title": "Ubuntu", "link": "/category/ubuntu/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/132_2022_11_27_temporarily-disable-ipv6-protocol-on-ubuntu.md", "status": "active", "content": "<p>Few days ago, I resolved an issue that I faced on an Ubuntu server that was related to SMTP not working, as a result, the server was always throwing a <code>504 Gateway Timeout</code> error.</p>\n\n<p>During troubleshooting, I found out that <code>telnet smtp.office365.com 587</code> was not giving any response and thought that the port was blocked on the client's network but no, it wasn't.</p>\n\n<p>I did a little digging and learnt that it could be due to the fact that SMTP traffic over IPV6 might be blocked on the client's network.</p>\n\n<p>So, I tried executing the following commands to disable IPV6 temporarily:</p>\n\n<pre><code>sudo sysctl -w net.ipv6.conf.all.disable_ipv6=1\nsudo sysctl -w net.ipv6.conf.default.disable_ipv6=1\n</code></pre>\n\n<p>And voila, the mails were going and SMTP traffic was working over IPV4.</p>\n\n<p>If you want to enable it again, try the following:</p>\n\n<pre><code>sudo sysctl -w net.ipv6.conf.all.disable_ipv6=0\nsudo sysctl -w net.ipv6.conf.default.disable_ipv6=0\n</code></pre>\n\n<p>Hope you found this tip useful!</p>\n", "index": 132}, {"section": "til", "title": "View list of services in Linux", "link": "til/posts/view-list-of-services-in-linux", "date": "November 27th, 2022", "date_alt": "27.11.2022", "year": "2022", "date_raw": "2022-11-27", "slug": "view-list-of-services-in-linux", "category": "Linux + DevOps", "categories": [{"title": "Linux", "link": "/category/linux/"}, {"title": "DevOps", "link": "/category/devops/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/131_2022_11_27_view-list-of-services-in-linux.md", "status": "active", "content": "<p>If you wanted to see a list of services available on your Linux server/desktop, try the following command:</p>\n\n<pre><code>systemctl list-unit-files --type=service\n</code></pre>\n\n<p>Upon executing this command, you'll be able to see a list of services along with their statuses i.e whether the service is enabled or disabled.</p>\n\n<p>This can come in handy if you want to know the status of a specific service like <code>nginx</code>:</p>\n\n<pre><code>systemctl list-unit-files --type=service | grep \"nginx\"\n</code></pre>\n\n<p>Hope you found this tip useful.</p>\n", "index": 131}, {"section": "writings", "title": "Containerize your Laravel application for Development", "link": "writings/posts/containerize-your-laravel-application-for-development", "date": "October 23rd, 2022", "date_alt": "23.10.2022", "year": "2022", "date_raw": "2022-10-23", "slug": "containerize-your-laravel-application-for-development", "category": "Tutorial + Docker + DevOps + Laravel", "categories": [{"title": "Tutorial", "link": "/category/tutorial/"}, {"title": "Docker", "link": "/category/docker/"}, {"title": "DevOps", "link": "/category/devops/"}, {"title": "Laravel", "link": "/category/laravel/"}], "summary": "A short tutorial on how to containerize your Laravel application and use it for testing and development purposes.", "reading_time": "4 minutes read", "preview_image_url": "", "filename": "content/writings/75_2022_10_23_containerize-your-laravel-application-for-development.md", "status": "active", "content": "<p>Since I started exploring Docker containers during my spare time, I learnt how to containerize a Laravel application using Docker Compose.</p>\n\n<p>In this guide, I'll show you how to containerize your application and by the end of this tutorial, you'll have your application running on four separate service containers:</p>\n\n<ul>\n<li>App service running <code>php7.4-fpm</code>.</li>\n<li>A database service running <code>mysql-80</code>.</li>\n<li>An NGINX service.</li>\n<li>A phpMyAdmin service for you to view and manage your database.</li>\n</ul>\n\n<h2>Prerequisites</h2>\n\n<ul>\n<li>You need to have Docker and Docker Compose installed on your system</li>\n<li>A non-root user with sudo privileges (If you are using any UNIX-based environment).</li>\n<li>An existing working Laravel project.</li>\n</ul>\n\n<p>I tried this on my personal laptop that runs on Fedora Workstation 36 and hopefully, it should work on Windows and macOS as well. If you are a Windows user, I would recommend you to try WSL2 with Ubuntu installed in it.</p>\n\n<h2>Configure your app service</h2>\n\n<p>First, you need to create a Dockerfile for your app service in your project's root directory:</p>\n\n<pre><code>touch Dockerfile\nvim Dockerfile\n</code></pre>\n\n<p>In this tutorial, I'll be using PHP7.4 but you can use any version that you need. Here you go:</p>\n\n<pre><code>FROM php:7.4-fpm\n\n# Arguments defined in docker-compose.yml\nARG user\nARG uid \n\n# Install system dependencies\nRUN apt-get update &amp;&amp; apt-get install -y \\\n    git \\\n    curl \\\n    libpng-dev \\\n    libonig-dev \\\n    libxml2-dev \\\n    zip \\\n    unzip\n\n# Clear cache\nRUN apt-get clean &amp;&amp; rm -rf /var/lib/apt/lists/*\n\n# Install PHP extensions\nRUN docker-php-ext-install pdo_mysql mbstring exif pcntl bcmath gd\n\n# Get latest Composer\nCOPY --from=composer:latest /usr/bin/composer /usr/bin/composer\n\n# Create system user to run Composer and Artisan Commands\nRUN useradd -G www-data,root -u $uid -d /home/$user $user\nRUN mkdir -p /home/$user/.composer &amp;&amp; \\\n    chown -R $user:$user /home/$user\n\n# Set working directory\nWORKDIR /var/www\n\nUSER $user\n</code></pre>\n\n<p>So, what's happening in the configuration above is that, it pulls a PHP7.4-FPM image from Docker Hub. Next, it'll define the user of the service and install all the necessary dependencies that are given above and set the working directory to <code>/var/www/</code>. The last step will change to the newly created user, which would make sure that you are using the service as a normal user.</p>\n\n<p>Again, if you are a bit playful, try configuring it to however you want it and see if it works.</p>\n\n<h2>Set up NGINX and MySQL</h2>\n\n<p>I have been following some tutorials and I liked the idea of creating dedicated directories to organize your files related to configuring each service container.</p>\n\n<p>Create a directory named <code>.docker</code> in your project's root directory:</p>\n\n<pre><code>mkdir -p .docker\n</code></pre>\n\n<h3>NGINX</h3>\n\n<p>Go to <code>.docker</code> directory and create <code>nginx</code> directory:</p>\n\n<pre><code>mkdir -p nginx\n</code></pre>\n\n<p>Now let's set up the NGINX service by creating a <code>.conf</code> file:</p>\n\n<pre><code>touch myservice.conf\n</code></pre>\n\n<p>Now, copy the following configuration to your <code>.conf</code> file:</p>\n\n<pre><code>server {\n    listen 80;\n    index index.php index.html;\n    error_log  /var/log/nginx/error.log;\n    access_log /var/log/nginx/access.log;\n    root /var/www/public;\n    location ~ \\.php$ {\n        try_files $uri =404;\n        fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n        fastcgi_pass app:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n        fastcgi_param PATH_INFO $fastcgi_path_info;\n    }\n    location / {\n        try_files $uri $uri/ /index.php?$query_string;\n        gzip_static on;\n    }\n}\n</code></pre>\n\n<h3>MySQL</h3>\n\n<p>Since this is a Laravel application, you can skip this step by running migrations and seeding your database or you can try creating a directory inside the <code>.docker</code> folder to store your MySQL related configuration:</p>\n\n<pre><code>mkdir -p mysql\n</code></pre>\n\n<p>Once created, create a file named <code>init_db.sql</code> that would contain your entire database dump to be seeded once you run your docker service.</p>\n\n<h2>Set up multiple containers using Docker Compose</h2>\n\n<p>This the configuration I have used to create four separate services, please take a look and feel free to modify it based on your requirements.</p>\n\n<p>In this configuration, all services will share a bridge network named <code>yourapp</code> which is defined at the bottom of this configuration.</p>\n\n<p>Here is the configuration:</p>\n\n<pre><code>version: '3.8'\nservices:\n  # PHP Service\n  app:\n    build:\n      args:\n        user: username\n        uid: 1000\n      context: ./\n      dockerfile: Dockerfile\n    image: yourapp \n    container_name: yourapp-app\n    restart: unless-stopped\n    working_dir: /var/www/\n    volumes:\n      - ./:/var/www\n    networks:\n      - yourapp\n\n  # MySQL Service\n  db: \n    image: mysql:8.0\n    container_name: yourapp-db\n    restart: unless-stopped\n    environment:\n      MYSQL_DATABASE: ${DB_DATABASE}\n      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}\n      MYSQL_PASSWORD: ${DB_PASSWORD}\n      MYSQL_USER: ${DB_USERNAME}\n      SERVICE_TAGS: dev \n      SERVICE_NAME: mysql\n    volumes:\n      - ./.docker/mysql:/docker-entrypoint-initdb.d\n    healthcheck:\n      test: mysqladmin ping -h 127.0.0.1 -u ${DB_USERNAME} --password=${DB_PASSWORD}\n      interval: 5s\n      retries: 10\n    networks:\n      - yourapp\n\n  # NGINX Service\n  nginx:\n    image: nginx:alpine\n    container_name: yourapp-nginx\n    restart: unless-stopped\n    ports:\n      - 8000:80\n    volumes:\n      - ./:/var/www\n      - ./.docker/nginx:/etc/nginx/conf.d/\n    networks:\n      - yourapp\n\n  # phpMyAdmin service\n  phpmyadmin:\n    image: phpmyadmin/phpmyadmin:5\n    ports:\n      - 8080:80\n    environment:\n      PMA_HOST: db\n    depends_on:\n      db: \n        condition: service_healthy\n    networks:\n      - yourapp\n\nnetworks:\n  yourapp:\n    driver: bridge\n\n</code></pre>\n\n<h2>Configure your application</h2>\n\n<p>Open your current <code>.env</code> file of your laravel project and just add the necessary database configuration:</p>\n\n<pre><code>DB_HOST=yourapp-db\nDB_PORT=3306\nDB_DATABASE=your_database_name\nDB_USERNAME=your_database_user_name\nDB_PASSWORD=your_database_password\n</code></pre>\n\n<h2>Build the application image</h2>\n\n<p>After you are done with configuring, run the following command to build your application image:</p>\n\n<pre><code>docker-compose build yourapp\n</code></pre>\n\n<p>Depending on your network speed, it might take a few minutes to build your image.</p>\n\n<h2>Run the application</h2>\n\n<p>Once the build is complete, execute the following command:</p>\n\n<pre><code>docker-compose up -d\n</code></pre>\n\n<p>The following command will run your containers in the background. To display your information about the state of your docker services:</p>\n\n<pre><code>docker-compose ps\n</code></pre>\n\n<p>Install your application's dependencies:</p>\n\n<pre><code>docker-compose exec yourapp rm -rf vendor composer.lock\ndocker-compose exec yourapp composer install\n</code></pre>\n\n<p>And then run the following commands to run your Laravel application:</p>\n\n<pre><code>docker-compose exec yourapp php artisan key:generate\ndocker-compose exec yourapp php artisan config:clear\ndocker-compose exec yourapp php artisan cache:clear\ndocker-compose exec yourapp php artisan view:clear\ndocker-compose exec yourapp php artisan route:clear\ndocker-compose exec yourapp php artisan storage:link \n\n</code></pre>\n\n<p>Now, you can go to your browser, type your <code>http://localhost:8000</code> to access your application.</p>\n\n<h2>Conclusion</h2>\n\n<p>If you've come to this part, give yourself a pat in the back!</p>\n\n<p>From now onwards, you don't really need to install and set up a local web server and database to run and test your application.</p>\n\n<p>Furthermore, you'll be having a disposable environment in your hand, which means you can easily replicate and distribute it to other developers in your team, so that no one says \"It works on my machine and not on yours!\"</p>\n\n<p>Hope you liked this tutorial!</p>\n", "index": 75}, {"section": "til", "title": "Install Docker on Fedora 35/36", "link": "til/posts/install-docker-on-fedora-3536", "date": "October 1st, 2022", "date_alt": "01.10.2022", "year": "2022", "date_raw": "2022-10-01", "slug": "install-docker-on-fedora-3536", "category": "DevOps + Linux + Docker", "categories": [{"title": "DevOps", "link": "/category/devops/"}, {"title": "Linux", "link": "/category/linux/"}, {"title": "Docker", "link": "/category/docker/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/129_2022_10_01_install-docker-on-fedora-3536.md", "status": "active", "content": "<p>Recently, I started to play around with Docker and I thought of installing on my personal laptop which runs Fedora 36 workstation.</p>\n\n<p>If you have Fedora and want to know how to install it, here it is:</p>\n\n<h2>Install Docker Engine</h2>\n\n<p>First, add the official Docker repositories to your Fedora OS:</p>\n\n<pre><code>sudo dnf install dnf-plugins-core -y\nsudo dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo\n</code></pre>\n\n<p>Then, you can run the following command to install Docker and it's dependencies:</p>\n\n<pre><code>sudo dnf install docker-ce docker-ce-cli containerd.io\n</code></pre>\n\n<p>During installation, you'll be prompted to import the GPG key in order to install Docker on your system. So, press <kbd>Y</kbd> to proceed with the installation.</p>\n\n<p>Next, enable and start the docker service:</p>\n\n<pre><code>sudo systemctl enable docker\nsudo systemctl start docker\n</code></pre>\n\n<p>That's it you are done. You can try running the following command to see if it's installed properly on your system:</p>\n\n<pre><code>sudo docker run hello-world\n</code></pre>\n\n<p>If it works fine, you should be seeing a \"Hello from Docker!\" message which means that the installation appears to be working fine.</p>\n\n<p>Hope you found this tutorial useful!</p>\n", "index": 129}, {"section": "til", "title": "Resolve permission error while SSH-ing to AWS EC2 instance from a Linux machine", "link": "til/posts/resolve-permission-error-while-sshing-to-aws-ec2-instance-from-a-linux-machine", "date": "September 24th, 2022", "date_alt": "24.09.2022", "year": "2022", "date_raw": "2022-09-24", "slug": "resolve-permission-error-while-sshing-to-aws-ec2-instance-from-a-linux-machine", "category": "AWS + DevOps + SSH", "categories": [{"title": "AWS", "link": "/category/aws/"}, {"title": "DevOps", "link": "/category/devops/"}, {"title": "SSH", "link": "/category/ssh/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/127_2022_09_24_resolve-permission-error-while-sshing-into-aws-ec2-instance.md", "status": "active", "content": "<p>If you are someone who's trying to access a AWS EC2 instance via SSH using a private key from a linux machine, you might have or will come across this error:</p>\n\n<pre><code>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nPermissions 0644 for 'your-aws-private-key.pem' are too open.\nIt is recommended that your private key files are NOT accessible by others.\nThis private key will be ignored.\nbad permissions: ignore key: your-aws-private-key.pem\nPermission denied (publickey).\n</code></pre>\n\n<h2>Why am I getting this?</h2>\n\n<p>From what I have read, EC2 instances will simply not accept a private key that are publicly visible to others especially if it's somewhere stored in your Desktop or Downloads folder.</p>\n\n<p>So basically, your private key should be accessible to others.</p>\n\n<h2>Oh, how can I fix it?</h2>\n\n<p>It's pretty straightforward, you just have to make sure that the private key is <strong>read-only</strong> like this:</p>\n\n<pre><code>chmod 400 your-aws-private-key.pem\n</code></pre>\n\n<p>After that, try connecting again and it should work fine!</p>\n\n<p>Hope you found this tip useful!</p>\n", "index": 127}, {"section": "til", "title": "Install PFX certificate on a Linux server", "link": "til/posts/install-pfx-certificate-on-a-linux-server", "date": "September 24th, 2022", "date_alt": "24.09.2022", "year": "2022", "date_raw": "2022-09-24", "slug": "install-pfx-certificate-on-a-linux-server", "category": "DevOps + Linux", "categories": [{"title": "DevOps", "link": "/category/devops/"}, {"title": "Linux", "link": "/category/linux/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/128_2022_09_24_install-pfx-certificate-on-a-linux-server.md", "status": "active", "content": "<p>I would consider this as an extended post to my <a href=\"https://www.megacolorboy.com/til/posts/extract-private-key-and-certificate-from-pfx-file/\">previous post</a> that I had written six months ago.</p>\n\n<p>A PFX Certificate usually contains the following in PKCS#12 format:</p>\n\n<ul>\n<li>The actual certificate.</li>\n<li>The private key to the certificate.</li>\n<li>The Intermediate authority certificate that ensures the trustworthiness of the certificate.</li>\n</ul>\n\n<p>To extract all those files, here are the steps that I have documented:</p>\n\n<div class=\"post-notification warning\">\n    <h3><i class=\"ph-warning-light\"></i> Note</h3>\n    <p>If the .PFX file prompts you for a passphrase, please check with your project manager or client regarding this information.</p>\n</div>\n\n<h2>Extract the Encrypted Private Key</h2>\n\n<pre><code>openssl pkcs12 -in &lt;filename.pfx&gt; -nocerts -out encrypted.key\n</code></pre>\n\n<h2>Extract RSA Private Key</h2>\n\n<pre><code>openssl rsa -in encrypted.key -out private.key\n</code></pre>\n\n<h2>Extract Certificate</h2>\n\n<pre><code>openssl pkcs12 -in &lt;filename.pfx&gt; -clcerts -nokeys -out certificate.crt\n</code></pre>\n\n<h2>Extract Combined Chain Certificate (Optional)</h2>\n\n<pre><code>openssl pkcs12 -in &lt;filename.pfx&gt; -cacerts -nokeys -chain | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' &gt; combined_chain_certificate.crt\n</code></pre>\n\n<p>Once you are done extracting all the required files, you can add the certificates like this:</p>\n\n<h3>Apache configuration:</h3>\n\n<pre><code>SSLCertificateFile /path/to/certificate.crt\nSSLCertificateKeyFile /path/to/private.key\n\n# Optional, if you have it, else skip.\nSSLCertificateChainFile /path/to/combined_chain_certificate.crt\n</code></pre>\n\n<p>Test if it works:</p>\n\n<pre><code>apachectl configtest\nsystemctl restart httpd\n</code></pre>\n\n<h3>Nginx configuration:</h3>\n\n<pre><code># If you don't have a combined chain certificate:\nssl_certificate /path/to/certificate.crt;\nssl_certificate_key /path/to/private.key;\n\n# If you have a combined chain certificate:\nssl_certificate /path/to/combined_chain_certificate.crt\nssl_certificate_key /path/to/private.key;\n</code></pre>\n\n<p>Test if it works:</p>\n\n<pre><code>nginx -t\nsystemctl restart nginx\n</code></pre>\n\n<p>Hope you found this tip useful.</p>\n", "index": 128}, {"section": "til", "title": "Install Microsoft SQL Server Driver for PHP on Amazon Linux 2", "link": "til/posts/install-microsoft-sql-server-driver-for-php-on-amazon-linux-2", "date": "September 18th, 2022", "date_alt": "18.09.2022", "year": "2022", "date_raw": "2022-09-18", "slug": "install-microsoft-sql-server-driver-for-php-on-amazon-linux-2", "category": "DevOps + PHP + AWS", "categories": [{"title": "DevOps", "link": "/category/devops/"}, {"title": "PHP", "link": "/category/php/"}, {"title": "AWS", "link": "/category/aws/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/126_2022_09_18_install-microsoft-sql-server-driver-for-php-on-amazon-linux.md", "status": "active", "content": "<p>Recently, I tried to install Microsoft SQL Server driver for PHP on Amazon Linux and searching on how-to do was really annoying.</p>\n\n<p>I read a few articles on StackOverflow and found some samples on GitHub Gists and thought of sharing on how I installed it.</p>\n\n<h2>Prerequisites</h2>\n\n<ol>\n<li>Amazon Linux 2 installed.</li>\n<li>Ensure the ports 80 and 443 are open on your instance.</li>\n<li>PHP &gt;= v5.6 and the following extensions: <code>php-devel</code>, <code>php-pear</code>, <code>php-pdo</code>, and <code>php-xml</code>.</li>\n<li>Know-how on using the terminal.</li>\n</ol>\n\n<h2>Installation steps</h2>\n\n<p>These are the commands used to install the SQL Server driver:</p>\n\n<pre><code>sudo su\nsudo yum-config-manager --add-repo https://packages.microsoft.com/config/rhel/7/prod.repo\nsudo yum update\nsudo ACCEPT_EULA=Y yum install -y msodbcsql mssql-tools unixODBC-devel re2c gcc-c++ gcc\nsudo pecl install sqlsrv\nsudo pecl install pdo_sqlsrv\n</code></pre>\n\n<h2>Modify php.ini</h2>\n\n<p>You can either to go to your <code>php.ini</code> file and add the <code>extension=sqlsrv</code> extension or add it like this:</p>\n\n<pre><code>echo \"extension=sqlsrv\" &gt;&gt; `php --ini | grep \"Loaded Configuration\" | sed -e \"s|.*:\\s*||\"`\necho \"extension=pdo_sqlsrv\" &gt;&gt; /etc/php.d/30-pdo_sqlsrv.ini\n</code></pre>\n\n<h2>Restart the service</h2>\n\n<p>Ensure that the server can connect and restart the service:</p>\n\n<pre><code>sudo setsebool -P httpd_can_network_connect_db 1\nsudo systemctl restart httpd &amp;&amp; sudo apachectl restart\n</code></pre>\n\n<p>Next, run the following the command to see that both <code>pdo_sqlsrv</code> and <code>sqlsrv</code> are installed:</p>\n\n<pre><code>php -m | grep \"sqlsrv\"`\n</code></pre>\n\n<h2>Test if the driver works</h2>\n\n<p>Create a <code>test.php</code> file in your root directory and copy-paste this snippet to test if it works:</p>\n\n<pre><code>&lt;?php\nerror_reporting(E_ALL);\nini_set('display_errors', 1);\n\n$serverName = \"YOUR_DB_HOST\";\n$connectionOptions = array(\n    \"Database\" =&gt; \"YOUR_DB_NAME\",\n    \"Uid\" =&gt; \"YOUR_DB_USER\",\n    \"PWD\" =&gt; \"YOUR_DB_PASSWORD\"\n);\n\n$conn = sqlsrv_connect($serverName, $connectionOptions);\n\nif($conn === false ) {\n    print \"Connected successfully.\"; \n} else {\n    print \"Error while connecting to server.\";\n}\n?&gt;\n</code></pre>\n\n<p>Hope you found this tip useful!</p>\n", "index": 126}, {"section": "writings", "title": "My thoughts on using Visual Studio Code", "link": "writings/posts/my-thoughts-on-using-visual-studio-code", "date": "September 17th, 2022", "date_alt": "17.09.2022", "year": "2022", "date_raw": "2022-09-17", "slug": "my-thoughts-on-using-visual-studio-code", "category": "Productivity", "categories": [{"title": "Productivity", "link": "/category/productivity/"}], "summary": "My experiences on what made me like using Visual Studio Code.", "reading_time": "3 minutes read", "preview_image_url": "", "filename": "content/writings/74_2022_09_17_my-thoughts-on-using-visual-studio-code.md", "status": "active", "content": "<p>Ever since my university days, I've always used Sublime Text for any sort of text editing and programming tasks, in general.</p>\n\n<p>Despite the annoying \"Subscription\" dialog box, I like it because it's lightweight, simple and had nice keybindings that made it much more productive.</p>\n\n<p>This week, I thought of taking Visual Studio Code for a drive, not because many developers are using it but personally, I wanted to know if it can be better than Sublime Text.</p>\n\n<p>The answer is yes, it is and here's what I have experienced so far.</p>\n\n<h2>Portability</h2>\n\n<p>What I like at first is that, it's cross-platform and has support for different operating systems in various architectures. At work, I use Windows 10 and at home, I use Fedora 35 Workstation and it runs fine on both operating systems.</p>\n\n<h2>Intellisense, Intellisense, Intellisense...</h2>\n\n<p>Intellisense is a term used by Microsoft that includes various features like: code completion, code hinting, method parameter information and more. By default, the editor supports Intellisense for JavaScript, TypeScript, HTML and CSS. But if you install different programming language extensions like Python, PHP, Golang and so on, you'll be able to configure your editor to have a much more richer experience.</p>\n\n<p>At work, I write PHP code and use Laravel framework to develop web applications, I installed the following extensions to make my coding experience much more productive:</p>\n\n<ol>\n<li>PHP Intelephense (bmewburn.vscode-intelephense-client)</li>\n<li>phpfmt (kokororin.vscode-phpfmt)</li>\n<li>Laravel Snippets (onecentlin.laravel-blade)</li>\n</ol>\n\n<h2>Sublime Text and Vim Keybindings</h2>\n\n<p>If you've never used Vim, please go ahead and try. I believe that every programmer should try using VIM instead of fearing the keybindings (like <code>:q</code>) as they were developed for a <a href=\"https://betterprogramming.pub/why-you-should-learn-vim-keybindings-even-if-you-dont-use-vim-6563c5357b64?gi=92b77d015592\">reason</a>.</p>\n\n<p>But unlike Vim, Sublime Text keybindings are quite fun especially when you want to duplicate a line of code, indent lines of code, matching multiple instances of the same keyword and modifying them with multiple cursors at the same time.</p>\n\n<p>Try installing these extensions and see if you like them:</p>\n\n<ol>\n<li>Vim Emulation for Visual Studio Code (vscodevim.vim)</li>\n<li>Sublime Text Keymap and Settings Importer (ms-vscode.sublime-keybindings)</li>\n</ol>\n\n<h2>Integrated Terminal</h2>\n\n<p>You can use different type of shells like Windows Powershell, Command Prompt, Git Bash and much more. Besides IMO, I found that using the integrated terminal was quite productive as I didn't have to switch windows in between.</p>\n\n<h2>Looks minimal</h2>\n\n<p>When it comes to UI/UX, the word <strong>minimalism</strong> is often subjective but I guess Microsoft embraced the principles of minimalism for this editor.</p>\n\n<h2>Lots of extensions and great support</h2>\n\n<p>Thanks to the open source community, there are hundreds and thousands of extensions out there. By installing various extensions, you can make it your own editor and that part fascinates me.</p>\n\n<p>Besides, it's developed by Microsoft, so it definitely has a strong support and community out there.</p>\n\n<h2>Conclusion</h2>\n\n<p>I guess the simplicity and flexibility of this editor is what made it more powerful amongst the developer community.</p>\n\n<p>Now, I'm not going to say that it's a flawless editor, just like every other pieces of software, it does have it's cons. However, I decided to try out Visual Studio Code for a while and see how it goes for me.</p>\n\n<p>If it doesn't then maybe I might write a post about why I didn't like using it, in the future.</p>\n\n<p>Hope you liked reading this article.</p>\n", "index": 74}, {"section": "til", "title": "Logging client IP addresses on Apache server", "link": "til/posts/logging-client-ip-addresses-on-apache-server", "date": "August 18th, 2022", "date_alt": "18.08.2022", "year": "2022", "date_raw": "2022-08-18", "slug": "logging-client-ip-addresses-on-apache-server", "category": "DevOps + Apache", "categories": [{"title": "DevOps", "link": "/category/devops/"}, {"title": "Apache", "link": "/category/apache/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/125_2022_09_18_logging-client-ip-address-on-apache-server-logs.md", "status": "active", "content": "<p>If you want to log the actual client IP address, you need to extract the <code>X-Forward-For</code> header from the request and in order to do that, you need to make a tiny edit in your <code>httpd.conf</code> file.</p>\n\n<ol>\n<li>Go to <code>/etc/apache2/conf</code> or <code>/etc/httpd/conf</code> and open <code>httpd.conf</code> file.</li>\n<li>Search for the string that starts with: <code>LogFormat \"%h %l %u %t \\\"%r\\\" %&gt;s %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" combined</code>.</li>\n<li>Modify the <code>%h</code> to <code>%{X-Forwarded-For}i</code>. Now, it should look like this: <code>LogFormat \"%{X-Forwarded-For}i %l %u %t \\\"%r\\\" %&gt;s %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" combined</code>.</li>\n<li>Test the config to ensure that there are no typos by typing: <code>apachectl configtest</code>.</li>\n<li>Save and restart the service by typing: <code>systemctl restart httpd</code> or <code>systemctl restart apache2</code>.</li>\n<li>In your terminal, type <code>tail -f /var/log/httpd/access.log</code> and you'll be seeing the client IP being logged in your logs.</li>\n</ol>\n\n<p>Hope you found this tip useful!</p>\n", "index": 125}, {"section": "til", "title": "Using IIFE in JavaScript", "link": "til/posts/using-iife-in-javascript", "date": "August 10th, 2022", "date_alt": "10.08.2022", "year": "2022", "date_raw": "2022-08-10", "slug": "using-iife-in-javascript", "category": "JavaScript", "categories": [{"title": "JavaScript", "link": "/category/javascript/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/124_2022_08_10_using-iife-in-javascript.md", "status": "active", "content": "<p>IIFE a.k.a Immediately-Invoked Function Expression &mdash; is a way to execute functions as soon as the function is created.</p>\n\n<p>Using IIFE, you can easily isolate declared variables away from the global scope.</p>\n\n<p>This is how the syntax would look like:</p>\n\n<pre><code>// ES5 Standard\nlet foo = (function(){\n    let message = \"Hello world\"\n    console.log(message);\n})();\n</code></pre>\n\n<p>They can be defined with arrow functions as well:</p>\n\n<pre><code>// ES6 Standard\nlet foo = (() =&gt; {\n    let message = \"Hello world\"\n    console.log(message);\n})();\n</code></pre>\n\n<p>According to <strong>MDN Docs</strong>, it's a design pattern a.k.a Self-Executing Anonymous Function. There are two parts to this:</p>\n\n<ol>\n<li><p>The function that's enclosed within the Grouping Operator <code>()</code>, which would prevent it from polluting the global space and access to the variables within it's scope.</p></li>\n<li><p>The <code>();</code> will create the Immediately Invoked Function Expression on-the-fly.</p></li>\n</ol>\n\n<h2>When to use it?</h2>\n\n<p>There are many interesting cases such as if you are following the <a href=\"https://www.patterns.dev/posts/classic-design-patterns/\">Module Pattern</a> especially if you want to avoid polluting the global namespace or just that you don't want your code to interfere with other code thus ensures code safety.</p>\n\n<h2>Readings</h2>\n\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Glossary/IIFE\">IIFE - MDN Web Docs Glossary</a></li>\n</ul>\n", "index": 124}, {"section": "blogmarks", "title": "9th August 2022 &mdash; Blogmarks", "link": "blogmarks/posts/9th-august-2022", "date": "August 9th, 2022", "date_alt": "09.08.2022", "year": "2022", "date_raw": "2022-08-09", "slug": "9th-august-2022", "category": "Blogmarks", "categories": [{"title": "Blogmarks", "link": "/category/blogmarks/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/blogmarks/04_2022_08_10_9th-august-2022.md", "status": "active", "content": "<ul>\n<li><a href=\"https://charlieharrington.com/library/\">Charlie Harlington's Library</a> &mdash; The library makes use of a Read-Only API for static datasets that doesn't require you to code. To know how it works, <a href=\"https://charlieharrington.com/sql-powered-reading-list/\">click here</a> for a quick read.</li>\n<li><blockquote>Companies amass coordination power by having good ideas, executing them using more good ideas, and capturing a big part of the resulting value created (that is, when they\u2019re not extracting value out of monopoly controls over markets). &mdash; <cite><a href=\"https://thesephist.com/posts/legacy/\">Build Unix, Not Uber by The Sephist</a></cite></blockquote></li>\n<li><a href=\"https://quentin.delcourt.be/blog/software-engineering-books-to-read-and-reread/index.html\">Software engineering books to read and unread</a> &mdash; Useful book recommendations by <a href=\"https://quentin.delcourt.be\">Quentin Delcourt</a> that are timeless.</li>\n</ul>\n", "index": 4}, {"section": "blogmarks", "title": "7th August 2022 &mdash; Blogmarks", "link": "blogmarks/posts/7th-august-2022", "date": "August 7th, 2022", "date_alt": "07.08.2022", "year": "2022", "date_raw": "2022-08-07", "slug": "7th-august-2022", "category": "Blogmarks", "categories": [{"title": "Blogmarks", "link": "/category/blogmarks/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/blogmarks/03_2022_08_10_7th-august-2022.md", "status": "active", "content": "<ul>\n<li><a href=\"https://github.com/WerWolv/ImHex\">ImHex</a> &mdash; A Hex Editor for Reverse Engineers, Programmers and people who value their retinas when working at 3 AM.</li>\n<li><a href=\"https://www.youtube.com/c/Bisqwit/videos\">Bisqwit</a> &mdash; Found this cool programmer on YouTube who writes game emulators and 3D renderers from scratch. Inspiring guy!</li>\n<li><a href=\"https://browser.engineering\">Web Browser Engineering</a> &mdash; I came across this site recently and it was quite intriguing. I really wanted to get my hands-on this tutorial and learn more about Web Browsers. Thank you <a href=\"https://pavpanchekha.com\">Pavel Panchekha</a> for this!</li>\n</ul>\n", "index": 3}, {"section": "blogmarks", "title": "25th July 2022 &mdash; Blogmarks", "link": "blogmarks/posts/25th-july-2022", "date": "July 25th, 2022", "date_alt": "25.07.2022", "year": "2022", "date_raw": "2022-07-25", "slug": "25th-july-2022", "category": "Blogmarks", "categories": [{"title": "Blogmarks", "link": "/category/blogmarks/"}], "summary": "A curated list of interesting reading during this week.", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/blogmarks/02_2022_07_25_25th-july-2022.md", "status": "active", "content": "<ul>\n<li><a href=\"https://beej.us/guide\">Beej's Network Guide</a> &mdash; Beej has updated the classic Linux Network Programming Guide. Used to read back in my university days. Time to read it again \ud83e\udd14</li>\n<li><a href=\"https://qubes-os.org/intro\">Qubes OS</a> &mdash; A free open-source, security-oriented operating system. Quite interesting. I guess, it's targeted towards the paranoid \ud83e\udd2b</li>\n<li><blockquote>Every line of code is written without a reason, maintained out of weakness, and deleted by chance. &mdash; <cite><a href=\"https://programmingisterrible.com/post/139222674273/how-to-write-disposable-code-in-large-systems\">Jean-Paul Sartre's Programming in ANSI C</a></cite></blockquote></li>\n</ul>\n", "index": 2}, {"section": "writings", "title": "Built a new generative art pattern generator", "link": "writings/posts/built-a-new-generative-art-pattern-generator", "date": "July 24th, 2022", "date_alt": "24.07.2022", "year": "2022", "date_raw": "2022-07-24", "slug": "built-a-new-generative-art-pattern-generator", "category": "Update + Generative Art + CSS + JavaScript", "categories": [{"title": "Update", "link": "/category/update/"}, {"title": "Generative Art", "link": "/category/generative-art/"}, {"title": "CSS", "link": "/category/css/"}, {"title": "JavaScript", "link": "/category/javascript/"}], "summary": "Thought of giving a colorful touch to the site.", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/writings/73_2022_07_24_built-a-new-generative-art-pattern-generator.md", "status": "active", "content": "<p>Ten days ago, I launched a new makeover for the blog and I felt that it needed a little bit of a colorful yet unique touch.</p>\n\n<p>Recently, I started playing around with the concept of Generative Art and have been studying a lot of about various patterns like:</p>\n\n<ul>\n<li>Bauhaus</li>\n<li>Truchet Tiles</li>\n<li>Piet Mondrian</li>\n</ul>\n\n<p>So, I thought of writing a new pattern generator using CSS and JavaScript that would assign each article a unique, colorful pattern. Though, it's not yet quite complete, I would consider it to be an experimental feature to see if it goes well with the site.</p>\n\n<p>What do you think about it? Does it look good? What kind of patterns should I add to my generator?</p>\n\n<p>Interested on how it's implemented? Have a look at the <a href=\"/static/js/art.js\">source code</a>.</p>\n\n<p>Hope you found this article to be inspiring!</p>\n", "index": 73}, {"section": "til", "title": "Download a webpage along with it's assets using wget", "link": "til/posts/download-a-webpage-along-with-its-assets-using-wget", "date": "July 17th, 2022", "date_alt": "17.07.2022", "year": "2022", "date_raw": "2022-07-17", "slug": "download-a-webpage-along-with-its-assets-using-wget", "category": "wget + Linux", "categories": [{"title": "wget", "link": "/category/wget/"}, {"title": "Linux", "link": "/category/linux/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/123_2022_07_17_download-a-webpage-along-with-its-assets-using-wget.md", "status": "active", "content": "<p>I wanted to download a webpage along with it's assets and scripts, I tried using Chrome's <strong>Save as...</strong> option but it wasn't working as expected.</p>\n\n<p>I did a little googling and thought of using <code>wget</code> to do the job and it worked. Here's the command I used:</p>\n\n<pre><code>wget -p -k -H --nd https://www.example.com\n</code></pre>\n\n<p>Let's see what do those flags mean:</p>\n\n<ul>\n<li><code>-p</code>: Downloads all the necessary files to properly display the downloaded HTML page.</li>\n<li><code>-k</code>: After the download is complete, it converts the links in the document to make them suitable for local viewing.</li>\n<li><code>-H</code>: This would download files that spans different hosts.</li>\n<li><code>--nd</code>: While retrieving files recursively, it will not create a hierarchy of directories and downloads the files into a single directory instead.</li>\n</ul>\n\n<p>If you open <code>index.html</code> directly on the browser, the assets might be broken as the <code>-k</code> flag doesn't seem to make the assets relative to the root directory. In order to view it, you can view it on a localhost server like WAMP, XAMPP or if you are using Python, you can type <code>python -m http.server</code> and view your downloaded file.</p>\n\n<p>Might be a bit messy but gets the job done.</p>\n", "index": 123}, {"section": "blogmarks", "title": "16th July 2022 &mdash; Blogmarks", "link": "blogmarks/posts/16th-july-2022", "date": "July 16th, 2022", "date_alt": "16.07.2022", "year": "2022", "date_raw": "2022-07-16", "slug": "16th-july-2022", "category": "Blogmarks", "categories": [{"title": "Blogmarks", "link": "/category/blogmarks/"}], "summary": "A curated list of interesting reading during this week.", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/blogmarks/01_2022_07_16_16th-july-2022.md", "status": "active", "content": "<ul>\n<li><a href=\"https://bearblog.dev\">Bear Blog</a> &mdash; A privacy-first, no-nonsense, super-fast blogging platform. Not really needed for me but quite an interesting platform.</li>\n<li><blockquote>Becoming a good engineer is about collecting experience. Each project, even small ones, is a chance to add new techniques and tools to your toolbox. Where this delivers even more value is when you can solve problems by pairing techniques learned on one project with tools learned working on another. It all adds up. &mdash; <cite><a href=\"https://addyosmani.com/blog/software-engineering-soft-parts/\">Addy Osmani</a></cite></blockquote></li>\n<li><a href=\"https://cohost.org/blackle/post/42994-contraption\">Interactive Mechanical Contraption in pure CSS</a> &mdash; Believe it or not, it's unreal. It doesn't even look like it's done using CSS. Love it! \u2764\ufe0f</li>\n<li><a href=\"https://defensivecss.dev\">Defensive CSS</a> &mdash; I came across this site two days ago. I like how Ahmad Shadeed describes different CSS patterns in detail.</li>\n</ul>\n", "index": 1}, {"section": "writings", "title": "A new makeover for 2022", "link": "writings/posts/a-new-makeover-for-2022", "date": "July 14th, 2022", "date_alt": "14.07.2022", "year": "2022", "date_raw": "2022-07-14", "slug": "a-new-makeover-for-2022", "category": "Update", "categories": [{"title": "Update", "link": "/category/update/"}], "summary": "Function over fashion. Minimal. Scraped out the redundant and added some new features.", "reading_time": "2 minutes read", "preview_image_url": "", "filename": "content/writings/72_2022_07_14_a-new-makeover-for-2022.md", "status": "active", "content": "<p>I have been reading a lot of articles and blogs than writing these days, thanks to my hectic schedule, I barely get the time to work on my blog.</p>\n\n<p>Initially, I thought of porting my blog to Django or Hugo but I decided to tune up my blog engine by adding new features like Tags/Categories and Archives, optimizing the time-taken to convert Markdown to HTML files and making it more flexible for the future.</p>\n\n<p>Also, I revamped the entire blog's layout by writing a new theme and making it a bit more responsive than it previously was. However, I retained the colors and the fonts used. Thank you <a href=\"https://rsms.me\">Rasmus</a> for the amazing <a href=\"https://rsms.me/inter\">Inter</a> font \u2764.</p>\n\n<h2>Still got some work to do</h2>\n\n<p>Yes, new layout and all but there's still few left in pending and hopefully, I'd complete it by the end of July 2022. But here's what's left:</p>\n\n<ul>\n<li>Thanks to <a href=\"https://simonwillison.net\">Simon Willison's Blog</a>, I took the idea of <strong>Blogmarks</strong> and it's basically a collection of articles and quotes that I find interesting and would share it here.</li>\n<li>Planning to move all project/widget based posts to a section called \"Projects\", which would also have a different layout.</li>\n<li>Book reviews and a new resume template</li>\n<li>Dark theme with a better color palette (I wasn't happy with the color scheme that I wrote previously.)</li>\n</ul>\n\n<h2>Wait, where's megacolorboy?</h2>\n\n<p>For the time being, I thought of removing my username \"megacolorboy\" from the Masthead for the sake of professionalism and hey, I ain't a kid no more, so time to grow up, you know?</p>\n\n<p>I'd like to thank my beautiful wife for letting me work on my passion even though it might annoy her at times, I love her for that \u2764!</p>\n\n<p>Hope you like the new makeover!</p>\n", "index": 72}, {"section": "til", "title": "Extract private key and certificate from .pfx file", "link": "til/posts/extract-private-key-and-certificate-from-pfx-file", "date": "March 12th, 2022", "date_alt": "12.03.2022", "year": "2022", "date_raw": "2022-03-12", "slug": "extract-private-key-and-certificate-from-pfx-file", "category": "DevOps", "categories": [{"title": "DevOps", "link": "/category/devops/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/122_2022_03_12_extract-private-key-and-certificate-from-pfx-file.md", "status": "active", "content": "<p>Ever wondered what's a <code>.pfx</code> file? It's just a combination of both private key and the certificate and this file is usually used in Microsoft IIS Servers.</p>\n\n<p>However, you can't use this file in Linux servers as both private key and the certificate are supposed to be individual files.</p>\n\n<p>Here's how you can extract both private key and certificate files:</p>\n\n<pre><code>openssl pkcs12 -in file.pfx -nocerts -out privatekey.pem -nodes\nopenssl pkcs12 -in file.pfx -nokeys -out certificate.crt\n</code></pre>\n\n<p>Hope this tip helps you out!</p>\n", "index": 122}, {"section": "til", "title": "Install NGINX and PHP on Windows", "link": "til/posts/install-nginx-and-php-on-windows", "date": "February 27th, 2022", "date_alt": "27.02.2022", "year": "2022", "date_raw": "2022-02-27", "slug": "install-nginx-and-php-on-windows", "category": "Tutorial", "categories": [{"title": "Tutorial", "link": "/category/tutorial/"}], "summary": "", "reading_time": "3 minutes read", "preview_image_url": "", "filename": "content/til/121_2022_02_27_install-nginx-and-php-on-windows.md", "status": "active", "content": "<p>Thought of writing a small tutorial on how to install NGINX and PHP on Windows. You can also use this as a reference if you wanted to install them on Windows Server too.</p>\n\n<div class=\"post-notification warning\">\n    <h3><i class=\"ph-warning-light\"></i> Note</h3>\n    <p>This tutorial won't teach you how to configure both PHP and NGINX configurations as there are a lot of tutorials focusing on that topic.</p>\n</div>\n\n<h2>Setting up NGINX</h2>\n\n<ol>\n<li>Download <a href=\"http://nginx.org/en/docs/windows.html\">NGINX for Windows</a></li>\n<li>Go to <code>C:/</code> directory and create a folder named <code>C:/nginx</code>.</li>\n<li>Unzip the downloaded <code>.zip</code> file in <code>C:/nginx</code> directory.</li>\n<li>Go to <code>C:/nginx</code> and create two new folders named <code>sites-available</code> and <code>sites-enabled</code>.</li>\n<li>To test, if it's working, double-click on <code>C:/nginx/nginx.exe</code> and type <code>localhost</code> in the browser. You should be able to see a Welcome page.</li>\n<li>Kill the NGINX process from Task Manager.</li>\n</ol>\n\n<h2>Setting up PHP</h2>\n\n<ol>\n<li>Download <a href=\"https://windows.php.net/downloads/releases/php-8.1.1-nts-Win32-vs16-x64.zip\">PHP 8.1 for Windows</a>.</li>\n<li>Go to <code>C:/</code> directory and create a folder named <code>C:/php</code> or if you wanted to have multiple versions, <code>C:/php8.1</code>.</li>\n<li>Unzip the downloaded <code>.zip</code> file in <code>C:/php</code> directory.</li>\n<li>Add PHP to your system environment variables by adding the path <code>C:/php</code></li>\n<li>Open Command Prompt and type <code>php -v</code>. You see should be able to see the version if it's installed correctly.</li>\n</ol>\n\n<h2>Run NGINX and PHP as separate services</h2>\n\n<p>Generally, it's good practice to run both PHP and NGINX as background services or else, you might have to start the processes manually every time the server goes down.</p>\n\n<p>As I was looking for a way to do that, I stumbled upon this post on <a href=\"https://stackoverflow.com/questions/40846356/run-nginx-as-windows-service\">StackOverflow</a> and it was quite helpful.</p>\n\n<h3>Install NSSM Service Manager</h3>\n\n<p>NSSM Service Manager is a free open-source alternative that helps you create a service with the help of GUI. Below are the steps that I followed:</p>\n\n<ol>\n<li>Download <a href=\"https://nssm.cc/download\">NSSM Service Manager</a></li>\n<li>Go to <code>C:/</code> directory and create a folder named <code>C:/nssm</code>.</li>\n<li>Unzip the downloaded <code>.zip</code> file in <code>C:/nssm</code> directory.</li>\n</ol>\n\n<h3>Install NGINX as a service</h3>\n\n<ol>\n<li>Open Command Prompt as an Administrator.</li>\n<li>Go to <code>C:/nssm/win64/</code> directory.</li>\n<li>Type <code>nssm install nginx</code></li>\n<li>Define the path of the <code>nginx.exe</code> file.</li>\n<li>Click on <code>Install Service</code>.</li>\n<li>Press <code>Win+R</code> and type <code>services.msc</code>.</li>\n<li>Look for <code>nginx</code> and start the service.</li>\n<li>Open your browser and type <code>localhost</code> to see if it's working correctly.</li>\n</ol>\n\n<h3>Install PHP as a service</h3>\n\n<ol>\n<li>Open Command Prompt as an Administrator.</li>\n<li>Go to <code>C:/nssm/win64/</code> directory.</li>\n<li>Type <code>nssm install php</code></li>\n<li>Define the path of the <code>php-cgi.exe</code> file.</li>\n<li>Add the arguments: <code>-b 127.0.0.1:9000</code></li>\n<li>Click on <code>Install Service</code>.</li>\n<li>Press <code>Win+R</code> and type <code>services.msc</code>.</li>\n<li>Look for <code>php</code> and start the service.</li>\n</ol>\n\n<h3>Test to see if it works!</h3>\n\n<p>Before you proceed with the following steps, ensure that you include the <code>*.conf</code> files from the <code>sites-enabled</code> folder in your <code>nginx.conf</code> file.</p>\n\n<p>Add the line <code>include \"C:/nginx/sites-enabled/*.conf\";</code> in your <code>nginx.conf</code> file and follow the steps below:</p>\n\n<ol>\n<li>Go to <code>C:/nginx/sites-available</code> directory and create <code>example.com.conf</code>.</li>\n<li>Go to <code>C:/nginx/html</code> and create directory.</li>\n<li>Refer to the <a href=\"#nginx-config\">sample configuration</a> provided and make the necessary changes.</li>\n<li>To enable the site, you have to create a symlink: <code>mklink \"C:\\nginx\\sites-available\\example.com.conf\" \"C:\\nginx\\sites-enabled\\example.com.conf\"</code>.</li>\n<li>Ensure the configuration doesn't have any errors by typing <code>nginx -t</code> in <code>C:/nginx</code> directory.</li>\n<li>Restart the NSSM service.</li>\n<li>Add an entry in your hosts file: <code>127.0.0.1 example.com</code>.</li>\n<li>And you're done!</li>\n</ol>\n\n<div class=\"post-notification warning\">\n    <h3><i class=\"ph-warning-light\"></i> Tip</h3>\n    <p>If you get a \"Connection Refused\" or error that is similar to that, it's most probably due to firewall or maybe the PHP service isn't running.</p>\n</div>\n\n<h3>Useful commands while using NSSM</h3>\n\n<pre><code># Start a service\nnssm start \"servicename\" \n\n# Restart a service\nnssm restart \"servicename\" \n\n# Stop a service\nnssm stop \"servicename\" \n\n# Install a service\nnssm install \"servicename\" \n\n# Remove/Uninstall a service\nnssm remove \"servicename\" \n</code></pre>\n\n<h3>Sample NGINX Virtual Host Configuration</h3>\n\n<pre><code>server {\n\n    # Your Domain Name\n    listen 80;\n    server_name example.com;\n\n    autoindex off;\n    add_header X-Frame-Options \"SAMEORIGIN\";\n    add_header Strict-Transport-Security \"max-age=31536000; includeSubDomains\" always;\n    add_header X-Content-Type-Options \"nosniff\";\n    add_header X-XSS-Protection \"1; mode=block\";\n    add_header Access-Control-Allow-Origin *;\n\n    if (!-e $request_filename) {\n        rewrite  ^/[_0-9a-zA-Z-]+(/wp-(content|admin|includes).*) $1 break;\n        rewrite  ^/[_0-9a-zA-Z-]+(/.*\\.php)$ $1 break;\n    }\n\n    # Uncomment these lines if SSL is provided\n    #==========================\n    #listen 443 ssl;\n    #ssl_certificate your-ssl.pem;\n    #ssl_certificate_key your-ssl.key;\n    #ssl_protocols TLSv1 TLSv1.1 TLSv1.2; \n    #ssl_prefer_server_ciphers on;\n    #ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';\n    #==========================\n\n    # Log files for Debugging\n    access_log logs/example-access.log;\n    error_log logs/example-error.log;\n\n    # Directory\n    root \"C:/nginx/html/example.com\";\n    index index.php index.html index.htm;\n\n    location / {\n        try_files $uri $uri/ /index.php?$query_string;\n    }\n\n    location ~ /\\.(?!well-known).* {\n        deny all;\n        access_log off;\n        log_not_found off;\n    }\n\n    # Deny yaml, twig, markdown, ini file access\n    location ~* /.+\\.(markdown|md|twig|yaml|yml|ini)$ {\n        deny all;\n        access_log off;\n        log_not_found off;\n    }\n\n    # PHP-FPM Configuration Nginx\n    location ~ \\.php$ {\n        fastcgi_pass   127.0.0.1:9000;\n        fastcgi_index  index.php;\n        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;\n        include        fastcgi_params;\n    }\n}\n</code></pre>\n\n<h2>Conclusion</h2>\n\n<p>If you've gotten this far, give yourself a pat in the back.</p>\n\n<p>Hope you've found this tutorial useful and please share it with your friends and colleagues if they really need it!</p>\n", "index": 121}, {"section": "writings", "title": "I switched to Fedora 35", "link": "writings/posts/i-switched-to-fedora-35", "date": "February 20th, 2022", "date_alt": "20.02.2022", "year": "2022", "date_raw": "2022-02-20", "slug": "i-switched-to-fedora-35", "category": "Productivity", "categories": [{"title": "Productivity", "link": "/category/productivity/"}], "summary": "Switched from Void Linux to Fedora 35", "reading_time": "2 minutes read", "preview_image_url": "", "filename": "content/writings/69_2022_02_20_i-switched-to-fedora-35.md", "status": "active", "content": "<p>Yes, I distro-hopped again but I guess it's a meaningful decision.</p>\n\n<p>I was using Void Linux with an <code>i3wm</code> tiling manager setup to see if it would improve my programming productivity.</p>\n\n<p>I've got to say that <code>i3wm</code> is an amazing tiling manager and if you are into tiling windows, this should be something worth of your time.</p>\n\n<p>On the other hand, I thought of trying out Void Linux because I was tired of Ubuntu and it's bloat, whereas Void Linux is quite minimal and lightweight.</p>\n\n<h2>Then, why leave it?</h2>\n\n<p>It has a good package manager that is similar to Arch's AUR repository but the lack of documentation and updates made me feel that there's barely contributions for it.</p>\n\n<p>I had issues using docker and virtualbox in it, often giving me compatibility issues at times, which left me frustrated.</p>\n\n<h2>Hello, Fedora!</h2>\n\n<p>When I decided to distro-hop, I had to give myself some time and research as to which distro would really suit me as a programmer and that would just work out of the box.</p>\n\n<p>I wanted something that:</p>\n\n<ul>\n<li>is developer-oriented.</li>\n<li>stable but bleeding-edge.</li>\n<li>just works out-of-the-box.</li>\n<li>has a minimal and clean looking interface.</li>\n</ul>\n\n<p>That's when Fedora came into the picture and according to what I have researched especially on forums like Reddit, it's directed towards programmers and sysadmins.</p>\n\n<p>Another sellout point for me was RedHat because I use CentOS at my workplace to configure and deploy web applications.</p>\n\n<p>RedHat developers are really dedicated and ensure that they push the stable yet bleeding-edge releases.</p>\n\n<p>The installation process was smooth and the new Gnome 41 is a bliss.</p>\n\n<p>I didn't want to use <code>i3wm</code> this time because I felt that I always tiled multiple terminal windows, so I thought I would replace that with <code>tmux</code> instead. And besides, I don't really want to spend a lot of time tinkering each and every part of my UI, I'd rather spend that time writing code that solves problems instead.</p>\n\n<p>Let's see how long Fedora would last!</p>\n\n<p>Until next time, then!</p>\n", "index": 69}, {"section": "til", "title": "Count the number of matches of a pattern in VIM", "link": "til/posts/count-the-number-of-matches-of-a-pattern-in-vim", "date": "January 16th, 2022", "date_alt": "16.01.2022", "year": "2022", "date_raw": "2022-01-16", "slug": "count-the-number-of-matches-of-a-pattern-in-vim", "category": "VIM", "categories": [{"title": "VIM", "link": "/category/vim/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/118_2022_01_16_count-the-number-of-matches-of-a-pattern-in-vim.md", "status": "active", "content": "<p>You can the count the number of matches of a pattern by using the <code>n</code> flag while using the substitute command. Try the following command:</p>\n\n<pre><code>:%s/something//gn\n</code></pre>\n\n<p>If you want to know on how many lines it matches, just omit the <code>g</code> flag:</p>\n\n<pre><code>:%s/something//n\n</code></pre>\n\n<p>Hope this tip helped you out!</p>\n", "index": 118}, {"section": "til", "title": "Count the number of word occurences in a text file using grep", "link": "til/posts/count-the-number-of-word-occurences-in-a-text-file-using-grep", "date": "January 16th, 2022", "date_alt": "16.01.2022", "year": "2022", "date_raw": "2022-01-16", "slug": "count-the-number-of-word-occurences-in-a-text-file-using-grep", "category": "Terminal", "categories": [{"title": "Terminal", "link": "/category/terminal/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/119_2022_01_16_count-the-number-of-word-occurences-in-a-text-file-using-grep.md", "status": "active", "content": "<p>If you are using a GUI based application like Microsoft Word of Google Docs, it would be easier for you to know the number of word occurences in a file. But what if you are in a terminal? That's where both <code>grep</code> and <code>wc</code> comes handy tools.</p>\n\n<p>Let's say you have the following text:</p>\n\n<pre><code>The European languages are members of the same family. Their separate existence is a myth. For science, music, sport, etc, Europe uses the same vocabulary.\n</code></pre>\n\n<p>Now, you can use the <code>grep</code> and <code>wc</code> tool to count the number of times <code>\"the\"</code> appears in the file:</p>\n\n<pre><code>grep -o -i \"the\" file.txt | wc -l\n</code></pre>\n\n<p>Hope this helps you out!</p>\n", "index": 119}, {"section": "til", "title": "Install MariaDB 10.3 on Void Linux", "link": "til/posts/install-mariadb-103-on-void-linux", "date": "January 16th, 2022", "date_alt": "16.01.2022", "year": "2022", "date_raw": "2022-01-16", "slug": "install-mariadb-103-on-void-linux", "category": "Databases", "categories": [{"title": "Databases", "link": "/category/databases/"}], "summary": "", "reading_time": "2 minutes read", "preview_image_url": "", "filename": "content/til/120_2022_01_16_install-mariadb-103-on-void-linux.md", "status": "active", "content": "<p>I tried to find a proper guide on how to install MySQL 8.0 on Void Linux but I couldn't really find any. So, I thought of installing MariaDB 10.3 on my laptop instead.</p>\n\n<p>Don't worry about using MariaDB as it meets the same standard enterprised requirements as MySQL. The only difference is that MySQL belongs to Oracle and MariaDB is for people who wanted to get out of Oracle's hands.</p>\n\n<p>Anyway, let's get started.</p>\n\n<h2>Prerequisites</h2>\n\n<ul>\n<li>Need to have root privileges in order to install packages.</li>\n<li>Basic know-how of Void Linux and it's <code>xbps</code> package manager.</li>\n</ul>\n\n<p>Alright, go ahead and follow these steps one-by-one:</p>\n\n<h3>1. Install MariaDB</h3>\n\n<p>Type the following command to install the package:</p>\n\n<pre><code>sudo xbps-install -S mariadb\n</code></pre>\n\n<h3>2. Initialize MySQL data directory</h3>\n\n<p>The following command will initialize a MariaDB data directory and create system tables in the MySQL database, if they are not present.</p>\n\n<pre><code>mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql\n</code></pre>\n\n<p>The options used:</p>\n\n<ul>\n<li><code>--user</code>: The login user name to use for running the <code>mysqld</code> process.</li>\n<li><code>--basedir</code> The path to the MariaDB installation directory.</li>\n<li><code>--datadir</code>: The path to the MariaDB directory.</li>\n</ul>\n\n<p>To know more about it, you can refer to <a href=\"https://mariadb.com/kb/en/mysql_install_db/\">MariaDB's documentation</a>.</p>\n\n<h3>3. Enable MySQL service</h3>\n\n<p>If you are used to Ubuntu or CentOS, enabling services in Void Linux is a bit different but quite simple. Once a process is symlinked, it will start on boot and restarts if it stops unless you stop the service deliberately.</p>\n\n<p>Type the following command to enable the <code>mysqld</code> service:</p>\n\n<pre><code>sudo ln -s /etc/sv/mysqld /var/service/mysqld\n</code></pre>\n\n<h3>4. Start MySQL service</h3>\n\n<p>Type the following command to start the <code>mysqld</code> service:</p>\n\n<pre><code>sudo sv start mysqld\n</code></pre>\n\n<p>To confirm, if the service is running, type the following:</p>\n\n<pre><code>sudo sv status mysqld\n</code></pre>\n\n<p>And you'll see something like this:</p>\n\n<pre><code>run: mysqld: (pid 15136) 1116s; run: log: (pid 15025) 1172s\n</code></pre>\n\n<h3><a id=\"secure-mysql-installation\"></a> 5. Secure MySQL installation</h3>\n\n<p>It's recommended to secure your installation, so type the following command:</p>\n\n<pre><code>sudo mysql_secure_installation\n</code></pre>\n\n<p>Once the command is executed, you'll be prompted with a few questions, respond according to your needs and you're done!</p>\n\n<h3>6. Test MariaDB connection</h3>\n\n<p>Now, all you have to do is, try to log in to your database by typing the following:</p>\n\n<pre><code>mysql -u root -p\n</code></pre>\n\n<p>Once executed, it would prompt you for your password (which you must have set in the <a href=\"#secure-mysql-installation\">previous step</a> and if you are able to log in, you are good to go!</p>\n\n<p>Hope this guide helps you out!</p>\n", "index": 120}, {"section": "writings", "title": "Is SELinux complicated?", "link": "writings/posts/is-selinux-complicated", "date": "December 25th, 2021", "date_alt": "25.12.2021", "year": "2021", "date_raw": "2021-12-25", "slug": "is-selinux-complicated", "category": "DevOps", "categories": [{"title": "DevOps", "link": "/category/devops/"}], "summary": "If you turn off SELinux for a living, try this.", "reading_time": "2 minutes read", "preview_image_url": "", "filename": "content/writings/67_2021_12_25_is-selinux-complicated.md", "status": "active", "content": "<p>This might look a rant post but hear me out, okay?</p>\n\n<p>Ever deployed an application on CentOS and tried to figure out why it isn't working when it's caused due to some permission issue by SELinux enabled?</p>\n\n<p>Yeah, I know how annoying that is. So, whenever I go on StackOverflow, many people suggest to completely turn it off.</p>\n\n<p>Well, it might be tempting to type <code>sudo setenforce 0</code> (which sets SELinux to Permissive mode), I wouldn't really recommend you to edit the SELinux config and disable it completely.</p>\n\n<p>I recently read a blog post on CentOS's official blog and I'd like to quote them for asking this:</p>\n\n<blockquote>\n  <p>But why do articles feel the need to outright deactivate SELinux rather than help readers work through any problems they might have? Is SELinux that hard?</p>\n</blockquote>\n\n<p>Good question. Is it really that hard or is it because we don't really understand it? I think it's the latter.</p>\n\n<h2>But why so?</h2>\n\n<p>I guess, as users, we really need some sort of user interface to receive feedback because not everyone is really good at the terminal and most importantly, not good at memorizing options and flag combinations.</p>\n\n<p>Here's a sample error that I would face sometimes while deploying a Laravel web application on CentOS 7:</p>\n\n<pre><code>[Mon May 16 11:39:32.996441 2016] [:error] [pid 2434] [client XXX.XXX.XXX.XXX:8080] PHP Fatal error:  Uncaught UnexpectedValueException: The stream or file \"/var/www/html/MYSITE/storage/logs/laravel.log\" could not be opened: failed to open stream: Permission denied in /var/www/html/MYSITE/bootstrap/cache/compiled.php:13701\nStack trace:\n#0 /var/www/html/MYSITE/bootstrap/cache/compiled.php(13635): Monolog\\\\Handler\\\\StreamHandler-&gt;write(Array)\n#1 /var/www/html/MYSITE/bootstrap/cache/compiled.php(13396): Monolog\\\\Handler\\\\AbstractProcessingHandler-&gt;handle(Array)\n#2 /var/www/html/MYSITE/bootstrap/cache/compiled.php(13494): Monolog\\\\Logger-&gt;addRecord(400, Object(Symfony\\\\Component\\\\Debug\\\\Exception\\\\FatalErrorException), Array)\n#3 /var/www/html/MYSITE/bootstrap/cache/compiled.php(13189): Monolog\\\\Logger-&gt;error(Object(Symfony\\\\Component\\\\Debug\\\\Exception\\\\FatalErrorException), Array)\n#4 /var/www/html/MYSITE/bootstrap/cache/compiled.php(13160): Illuminate\\\\Log\\\\Writer-&gt;writeLog('error', Object(Symfony\\\\Component\\\\Debug\\\\Exception\\\\FatalErrorException), Array)\n# in /var/www/html/MYSITE/bootstrap/cache/compiled.php on line 13701\n</code></pre>\n\n<p>By looking at this error, you do understand it's permission-related but it doesn't really indicate that it's an SELinux problem because there could be thousands of reasons why there could be such an error. And of course, when I look it up on Google, I do find many people facing the same issue due to SELinux being enabled.</p>\n\n<p>Instead of disabling it completely, I would try doing this:</p>\n\n<pre><code>chcon -R -t httpd_sys_rw_content_t storage\n</code></pre>\n\n<p>And off goes the error and the application didn't give any permission-related issues again.</p>\n\n<p>Is it worth disabling SELinux? No. </p>\n\n<p>But does SELinux have an issue of being user friendly? I guess, yes.</p>\n\n<p>I'm just like you, sometimes, I do switch off SELinux at times when it's critical to deploy the application so that I can leave home early but that's not really a good practice.</p>\n\n<h2>Conclusion</h2>\n\n<p>I do wish that the open source developers of SELinux could do something to make much more friendlier to use? Or maybe, some way that let's the user know what to do instead of letting the user <code>chmod</code>-ing and <code>chown</code>-ing files and directories endlessly. Or worse, completely disabling SELinux!</p>\n\n<p>Hope you found this article interesting!</p>\n\n<p>Stay tuned for more.</p>\n", "index": 67}, {"section": "writings", "title": "On learning new technologies", "link": "writings/posts/on-learning-new-technologies", "date": "December 24th, 2021", "date_alt": "24.12.2021", "year": "2021", "date_raw": "2021-12-24", "slug": "on-learning-new-technologies", "category": "Productivity", "categories": [{"title": "Productivity", "link": "/category/productivity/"}], "summary": "Sharing my tips on how I learn new technologies at work and home nowadays.", "reading_time": "3 minutes read", "preview_image_url": "", "filename": "content/writings/66_2021_12_12_on-learning-new-technologies.md", "status": "active", "content": "<p>If you're a programmer, you already know that it's quite a daunting task to keep up with the latest stream of technologies:</p>\n\n<ul>\n<li>Frameworks</li>\n<li>Libraries</li>\n<li>Programming Languages</li>\n<li>Programming Paradigms</li>\n</ul>\n\n<p>And there's never an end to it, it's just an ever-growing thing.</p>\n\n<p>So, whenever I'm walking or commuting, sometimes, these questions pop up in my head:</p>\n\n<ol>\n<li>How can I learn something new without wasting my free-time?</li>\n<li>How can I learn all of the existing technologies out there? Is it possible?</li>\n</ol>\n\n<p>Well, it's technically impossible for me to know about everything &mdash; in and out. Computer Science is such a broad field and has a lot of branches and sub-branches.</p>\n\n<p>However, you can learn a piece of technology just enough to know that it exists and know when to learn more about it when the time arises.</p>\n\n<h2>Don't try to learn everything out there</h2>\n\n<p>In my years of developing web applications, I have seen two types of programmers:</p>\n\n<ol>\n<li>One who has deep knowledge of a particular technology</li>\n<li>An all-rounder but also not-so-deep knowledge about multiple technologies</li>\n</ol>\n\n<p>Where do I fall ? Personally, I feel that I belong to the latter kind because I believe that spending a lot of time trying to specialize or being an expert in one technology is just too time-consuming and given the fact that everyday there's a new framework or programming language released out there, it's better to put yourself in the middle ground.</p>\n\n<p>Why you ask? Here's why:</p>\n\n<ol>\n<li>Technology dies fast. For example, there was a time when jQuery used to be really popular amongst the Front End Developers but today, most of them move towards libraries like ReactJS, VueJS and NextJS to build their projects and sooner or later, another framework will come out to replace ReactJS and become the next thing.</li>\n<li>I don't think most of the technologies out there are relevant to the problem that you are trying to solve. Like why do I need to look into an API about geospatial analytics unless I'm trying to build an application that needs such a requirement, you get it right?</li>\n</ol>\n\n<p>Basically, trying to learn every single piece of technology out there, it's just basically wasting time.</p>\n\n<h2>Ways and source of learning new stuff</h2>\n\n<p>Whenever I wanted to learn a new programming language, I would often go to <a href=\"https://projecteuler.net\">Project Euler</a> to flex my skills and that would help me learn more about it's features. Recently, I started <a href=\"https://leetcode.org\">LeetCode</a> and <a href=\"#\">Advent of Code - 2021</a>. It's quite interesting solving these challenges as it helps you to learn more about the technology and feels good after solving a problem.</p>\n\n<p>The next thing I would recommend is following a tech news feed like <a href=\"https://news.ycombinator.com\">Hacker News</a> but it can get quite addicting and distracting at times. Another good source of information are weekly newsletters. If you don't really know which one to follow, here's a <a href=\"https://github.com/zudochkin/awesome-newsletters\">repository</a> filled with <strong>Awesome Newsletters</strong> that spans various areas like DevOps, Front end, Back end and Data Science. Try signing up on one of them and see how it goes.</p>\n\n<h2>Time is costly, use it wisely</h2>\n\n<p>The brain can only do so much in about 9 to 10 hours a day and in order for you to be efficient and productive in learning new stuff, try the following:</p>\n\n<ol>\n<li>Spend an hour learning, reading or practicing a new tool.</li>\n<li>Interesting stuff but not needed yet? Try bookmarking or make a note of it, so that you can revisit it again.</li>\n<li>If it fits your needs and project requirements, then go ahead and learn it!</li>\n</ol>\n\n<p>If you found this article useful, please share it with your friends and colleagues.</p>\n\n<p>Stay tuned for more!</p>\n", "index": 66}, {"section": "til", "title": "How to create an ISO image from CDs/DVDs?", "link": "til/posts/how-to-create-an-iso-image-from-cdsdvds", "date": "October 23rd, 2021", "date_alt": "23.10.2021", "year": "2021", "date_raw": "2021-10-23", "slug": "how-to-create-an-iso-image-from-cdsdvds", "category": "Linux", "categories": [{"title": "Linux", "link": "/category/linux/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/117_2021_10_23_how-to-create-an-iso-image-from-cdsdvds.md", "status": "active", "content": "<p>I used to create ISO images using DAEMON Tools but I wanted to try something different and see if there's a way to create it using the Linux CLI.</p>\n\n<p>Turns out, you can do in just a single line using the <code>dd</code> utility like so:</p>\n\n<pre><code>dd if=/dev/cdrom of=/path/to/your/directory/image.iso\n</code></pre>\n\n<p>The <code>if</code> stands for input file and <code>of</code> stands for output file.</p>\n\n<p>Looks like, I don't have to use DAEMON Tools for stuff like this, I guess.</p>\n\n<p>Hope you found this tip useful!</p>\n", "index": 117}, {"section": "til", "title": "Truncate a file using redirection in Linux", "link": "til/posts/truncate-a-file-using-redirection-in-linux", "date": "October 2nd, 2021", "date_alt": "02.10.2021", "year": "2021", "date_raw": "2021-10-02", "slug": "truncate-a-file-using-redirection-in-linux", "category": "Linux", "categories": [{"title": "Linux", "link": "/category/linux/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/115_2021_10_02_truncate-a-file-using-redirection-in-linux.md", "status": "active", "content": "<p>Simply put, sometimes, there are situations in where you just want to clear the contents of a file without deleting it.</p>\n\n<p>This could be for many reasons like to avoid permission related issues, or maybe the file could be having useless logs that amasses to a size that measures in GBs.</p>\n\n<p>So, the easiest solution is to clear it away from a terminal is by shell redirection like so:</p>\n\n<pre><code>:&gt; filename\n</code></pre>\n\n<p>Let me break down the command here:</p>\n\n<ul>\n<li>The <code>:</code> symbol means <code>true</code> and doesn't produce any output.</li>\n<li>The '>' symbol is used for redirecting the output of the preceding command (in this case, it's empty!)</li>\n<li><code>filename</code> is the file that you want to truncate. If it doesn't exist, the file will be created.</li>\n</ul>\n\n<p>Alternatively, you can do the same by using the <code>cat</code> command to output the contents of the <code>/dev/null</code> device (which only contains a EOL character) to empty a file:</p>\n\n<pre><code>cat /dev/null &gt; filename\n</code></pre>\n\n<p>Hope this comes in handy!</p>\n", "index": 115}, {"section": "til", "title": "How to identify which Linux distribution is running in your system?", "link": "til/posts/how-to-identify-which-linux-distribution-is-running-in-your-system", "date": "October 2nd, 2021", "date_alt": "02.10.2021", "year": "2021", "date_raw": "2021-10-02", "slug": "how-to-identify-which-linux-distribution-is-running-in-your-system", "category": "Linux", "categories": [{"title": "Linux", "link": "/category/linux/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/116_2021_10_02_how-to-identify-which-linux-distribution-is-running.md", "status": "active", "content": "<p>If you've read my <a href=\"/til/posts/check-ubuntu-version/\">earlier post</a>, I was using Ubuntu, at that time, and I thought that was how you identify which distro is running in your system but using <code>lsb_release -a</code> is not always going to work as some distributions may not have it installed.</p>\n\n<p>Try the following command to identify the distribution you are running in your system:</p>\n\n<pre><code>cat /etc/os-release\n</code></pre>\n\n<p>And you'll get the following output:</p>\n\n<pre><code>NAME=\"XXXX\"\nID=\"XXXX\"\nDISTRIB_ID=\"XXXX\"\nPRETTY_NAME=\"XXXX\"\n</code></pre>\n\n<p>Hope this helps you out!</p>\n", "index": 116}, {"section": "til", "title": "Display list of files with their extension and file sizes", "link": "til/posts/display-list-of-files-with-their-extension-and-file-sizes", "date": "September 20th, 2021", "date_alt": "20.09.2021", "year": "2021", "date_raw": "2021-09-20", "slug": "display-list-of-files-with-their-extension-and-file-sizes", "category": "Linux", "categories": [{"title": "Linux", "link": "/category/linux/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/114_2021_09_20_display-list-of-files-with-their-extension-and-file-sizes.md", "status": "active", "content": "<p>Last month, I was trying to free up some space in my company servers and I realized that there were a lot of <code>.zip</code> files taking up a lot of space.</p>\n\n<p>So, I wrote the following command to list files by their extension:</p>\n\n<pre><code>find . -iname \\*.extension -exec du -sh {} \\; &amp;gt; file-list.txt\n</code></pre>\n\n<p>And later to determine which files are the largest, I executed this command to sort the list by file size:</p>\n\n<pre><code>sort -rh file-list.txt &gt; newfile.txt\n</code></pre>\n\n<p>Hope this tip helps you too! &#x1F604;</p>\n", "index": 114}, {"section": "writings", "title": "Dark/Light mode with CSS and JavaScript", "link": "writings/posts/darklight-mode-with-css-and-javascript", "date": "September 9th, 2021", "date_alt": "09.09.2021", "year": "2021", "date_raw": "2021-09-09", "slug": "darklight-mode-with-css-and-javascript", "category": "Tutorial", "categories": [{"title": "Tutorial", "link": "/category/tutorial/"}], "summary": "A simple guide on how to implement a dark/light theme switcher with CSS and JavaScript", "reading_time": "2 minutes read", "preview_image_url": "", "filename": "content/writings/64_2021_07_23_darklight-mode-with-css-and-javascript.md", "status": "active", "content": "<p>It's quite common these days that many websites let their users to decide their preferred color scheme(s). Giving this sort of customizability offers good user experience.</p>\n\n<p>In this article, I'll provide a simple step-by-step guide on how to implement a dark/light theme switcher with HTML, CSS and JavaScript.</p>\n\n<div class=\"post-notification warning\">\n    <h3>Prerequisites</h3>\n    <p>This article assumes that the reader has a basic know-how on HTML, CSS, JavaScript and basic knowledge on using the command-line.</p>\n</div>\n\n<h2>Using CSS variables</h2>\n\n<p>I always wanted to implement one for this website too and I thought of making use of CSS variables as I found it to be quite straight forward and I don't have to worry too much about browser support.</p>\n\n<p>Try adding the below CSS to your stylesheet:</p>\n\n<pre><code>    :root {\n        --background-color: white;\n        --font-color: black;\n        --accent-color: red;\n        --alt-background-color: black;\n        --alt-font-color: white;\n        --alt-accent-color: yellow;\n    }\n\n    html {\n        background-color: var(--background-color);\n        color: var(--font-color);\n    }\n\n    a {\n        color: var(--accent-color);\n    }\n\n    html[data-theme=\"dark\"] {\n        background-color: var(--alt-background-color);\n        color: var(--alt-font-color);\n    }\n\n    html[data-theme=\"dark\"] a {\n        color: var(--alt-accent-color);\n    }\n   \n</code></pre>\n\n<p>The <code>:root</code> selector contains a set of default values and in this case, these are just different colors, kind of like how we initialize variables in other programming languages.</p>\n\n<p>For example, whenever the <code>data-theme</code> attribute is set to <code>dark</code>, the default values will be overidden by the <code>html[data-theme=\"dark\"]</code> CSS rule for the theme to take effect.</p>\n\n<p>Really, it's that simple!</p>\n\n<h2>Add some markup</h2>\n\n<p>That depends on what you really want to have in your website but for this tutorial, you can just place a simple button somewhere in your navigation bar or anywhere you like:</p>\n\n<pre><code>&lt;button class=\"themeSwitcher\"&gt;Dark/Light&lt;/button&gt;\n</code></pre>\n\n<h2>Toggle between light and dark themes</h2>\n\n<p>Yes, we are getting there and you just have to write a simple logic that checks if whether the current theme is dark or light based on the class used on the <code>&lt;body&gt;</code> element.</p>\n\n<pre><code>$('.themeSwitcher').on('click', function(){\n    switch($('body').attr('data-theme')){\n        case \"dark\":\n            $('body').attr('data-theme', 'dark');\n            break;\n\n        case \"light\":\n        default:\n            $('body').attr('data-theme', '');\n            break;\n    }\n});\n</code></pre>\n\n<h3>Save user's preference in their browser</h3>\n\n<p>If your button works as expected, good! Now, once you refresh the page, the background would return to it's default mode but that's not what we wanted, right?</p>\n\n<p>But why does it return instead of staying dark? Because your \"preference\" is not stored in your browser.</p>\n\n<p>Modify your code to store your preferences in your browser:</p>\n\n<pre><code>&lt;script&gt;\n$('.themeSwitcher').on('click', function(){\n    switch($('body').attr('data-theme')){\n        case \"dark\":\n            $('body').attr('data-theme', 'dark');\n            localStorage.setItem(\"theme\", \"dark\");\n            break;\n\n        case \"light\":\n        default:\n            $('body').attr('data-theme', '');\n            localStorage.setItem(\"theme\", \"\");\n            break;\n    }\n});\n&lt;/script&gt;\n</code></pre>\n\n<p>This should work fine but you'll want to avoid the \"flickering\" issue while changing themes or refreshing the page, in order to do that, make sure that you check the user preference before the page is completely loaded:</p>\n\n<pre><code>&lt;script&gt;\n    if(localStorage.theme){\n        document.documentElement.setAttribute('data-theme', localStorage.getItem(\"theme\"));\n    }\n&lt;/script&gt;\n</code></pre>\n\n<h2>Conclusion</h2>\n\n<p>Well, if you've noticed, I wrote a simple theme switcher for my blog too. Try it out and you can inspect the code to see how it works.</p>\n\n<p>Hope you enjoyed this article!</p>\n\n<p>Stay tuned for more!</p>\n", "index": 64}, {"section": "til", "title": "View your wget progress even after closing your SSH session", "link": "til/posts/view-your-wget-progress-even-after-closing-your-ssh-session", "date": "August 13th, 2021", "date_alt": "13.08.2021", "year": "2021", "date_raw": "2021-08-13", "slug": "view-your-wget-progress-even-after-closing-your-ssh-session", "category": "DevOps + wget", "categories": [{"title": "DevOps", "link": "/category/devops/"}, {"title": "wget", "link": "/category/wget/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/110_2021_08_13_view-your-wget-progress-even-after-closing-your-ssh-session.md", "status": "active", "content": "<p>Few days back, I ran a <code>wget</code> command to download a file and accidentally closed the SSH client.</p>\n\n<p>I logged in again and checked the list of active processes and thankfully, the <code>wget</code> process was still running except that I wasn't able to know the current progress of it.</p>\n\n<p>So, I did a little research and found a way to view the progress, so I tried the following command:</p>\n\n<pre><code>tail -f wget_log\n</code></pre>\n\n<p>And, I was able to view it's current download progress again.</p>\n\n<p>Hope this helps you out!</p>\n", "index": 110}, {"section": "til", "title": "How to use GitHub Personal Access Token to authenticate your git commits?", "link": "til/posts/how-to-use-github-personal-access-token-to-authenticate-your-git-commits", "date": "August 13th, 2021", "date_alt": "13.08.2021", "year": "2021", "date_raw": "2021-08-13", "slug": "how-to-use-github-personal-access-token-to-authenticate-your-git-commits", "category": "Git", "categories": [{"title": "Git", "link": "/category/git/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/112_2021_08_13_how-to-use-github-personal-access-token-to-authenticate-your-git-commits.md", "status": "active", "content": "<p>On November 2020, GitHub had announced that they would no longer accept basic username/password to authenticate git commits and it would be deprecated by Mid 2021.</p>\n\n<p>Instead, they recommend you to authenticate your git commits using a Personal Access Token from your GitHub account.</p>\n\n<h2>Generate a personal access token</h2>\n\n<ol>\n<li>Unset your credentials from your remote repository: <code>git config --local --unset credential.helper</code></li>\n<li>Login to your GitHub account and go to <em>Settings</em> </li>\n<li>Then navigate to <em>Developer Settings -> Personal Access Tokens</em></li>\n<li>Click on <em>Generate new token</em></li>\n<li>Give a name to your Personal Access Token and the necessary permissions required.</li>\n<li>Once done, hit on <em>Generate token</em></li>\n<li>The token will be shown once, so make sure to copy it and store it somewhere that you can remember.</li>\n</ol>\n\n<h2>Update your remote repository</h2>\n\n<p>Once you've generated a token, you just have to update your remote repository by following the below steps:</p>\n\n<h3>1. Update remote repository URL</h3>\n\n<pre><code>git remote set-url origin https://&amp;lt;your_access_token&amp;gt;@github.com/&amp;lt;your_git_repo_url&amp;gt;\n</code></pre>\n\n<h3>2. Just git pull once</h3>\n\n<p>Now, just perform <code>git pull</code> operation once and you should be good:</p>\n\n<pre><code>git pull https://&amp;lt;your_access_token&amp;gt;@github.com/&amp;lt;your_git_repo_url&amp;gt;\n</code></pre>\n\n<p>Hope this helps you out!</p>\n", "index": 112}, {"section": "til", "title": "How to fetch a JSON object from an array of JSON objects by property value?", "link": "til/posts/how-to-fetch-a-json-object-from-an-array-of-json-objects-by-property-value", "date": "August 13th, 2021", "date_alt": "13.08.2021", "year": "2021", "date_raw": "2021-08-13", "slug": "how-to-fetch-a-json-object-from-an-array-of-json-objects-by-property-value", "category": "JavaScript", "categories": [{"title": "JavaScript", "link": "/category/javascript/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/113_2021_08_13_how-to-fetch-a-json-object-from-an-array-of-json-objects-by-property-value.md", "status": "active", "content": "<p>Say, for example, you have an array of JSON objects that contains the following data:</p>\n\n<pre><code>var arrOfObjects = [\n    {\n        name: \"John Doe\",\n        age: 20,\n        email: \"john.doe@email.com\"\n    },\n    {\n        name: \"Bob Smith\",\n        age: 56,\n        email: \"bob.smith@email.com\"\n    },\n];\n</code></pre>\n\n<p>Hmm, that's pretty basic but how will get the information of \"Bob Smith\" using his email? Well, that's where the <code>Array.find()</code> method comes into the picture.</p>\n\n<p>Try reading the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\">Mozilla Documentation</a> on <code>Array.prototype.find()</code> and implement the following:</p>\n\n<pre><code>var key = \"email\";\nvar valueToFind = \"bob.smith@email.com\";\nvar result = arrOfObjects.find(obj =&amp;gt; {\n    return obj[key] == value;\n});\n\n//This should give you the record of Bob Smith.\nconsole.log(result) \n</code></pre>\n\n<p>This works fine on all browsers except <strong>Internet Explorer</strong> (I mean, it sucks anyways!), which is okay!</p>\n\n<p>Hope you found this useful!</p>\n", "index": 113}, {"section": "til", "title": "How to update values of a column from one table to another?", "link": "til/posts/how-to-update-values-of-a-column-from-one-table-to-another", "date": "August 13th, 2021", "date_alt": "13.08.2021", "year": "2021", "date_raw": "2021-08-13", "slug": "how-to-update-values-of-a-column-from-one-table-to-another", "category": "MySQL", "categories": [{"title": "MySQL", "link": "/category/mysql/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/111_2021_08_13_how-to-update-values-of-a-column-from-one-table-to-another.md", "status": "active", "content": "<p>Sometimes, I come across situations where I would need to update a newly added in a pivot table and this query does come in handy:</p>\n\n<pre><code>UPDATE table_a INNER JOIN table_b ON table_b.col_x = table_a.col_x SET table_a.col_y = table_b.col_y;\n</code></pre>\n\n<p>Hope you found this useful too!</p>\n", "index": 111}, {"section": "til", "title": "How to switch between integrated terminal and editor in Visual Studio Code?", "link": "til/posts/how-to-switch-between-integrated-terminal-and-editor-in-visual-studio-code", "date": "July 21st, 2021", "date_alt": "21.07.2021", "year": "2021", "date_raw": "2021-07-21", "slug": "how-to-switch-between-integrated-terminal-and-editor-in-visual-studio-code", "category": "VSCode", "categories": [{"title": "VSCode", "link": "/category/vscode/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/109_2021_07_21_how-to-switch-between-integrated-terminal-and-editor-in-visual-studio-code.md", "status": "active", "content": "<p>While, I'm trying to adjust myself to using Visual Studio Code, I found it quite annoying that there isn't a shortcut to switch focus between the editor and the integrated terminal. For a guy, like me, who makes use of the keyboard all the time, that's pretty important.</p>\n\n<p>I did some research and found a way on how to do it. Just type <code>Ctrl+Shift+P</code> and type <code>Open Keyboard Shortcuts</code> and add these lines:</p>\n\n<pre><code>[\n    {\"key\": \"ctrl+`\", \"command\":\"workbench.action.terminal.focus\"},\n    {\"key\": \"ctrl+`\", \"command\":\"workbench.action.focusActiveEditorGroup\", \"when\": \"terminalFocus\"},\n]\n</code></pre>\n\n<p>Save the file and now, you'll be able to switch between the two by pressing <code>Ctrl+`</code> keys.</p>\n\n<p>Hope you found this tip useful!</p>\n", "index": 109}, {"section": "til", "title": "Redirect from HTTP to HTTPS in Apache VirtualHosts", "link": "til/posts/redirect-from-http-to-https-in-apache-virtualhosts", "date": "July 9th, 2021", "date_alt": "09.07.2021", "year": "2021", "date_raw": "2021-07-09", "slug": "redirect-from-http-to-https-in-apache-virtualhosts", "category": "DevOps", "categories": [{"title": "DevOps", "link": "/category/devops/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/107_2021_07_09_redirect-from-http-to-https-in-apache-virtualhosts.md", "status": "active", "content": "<p>Here's a simple technique on how I learned to redirect a site from HTTP to HTTPS automatically using Apache's VirtualHost configuration.</p>\n\n<p>Go to your configuration file or <code>000-default.conf</code> and modify your configuration to something like this:</p>\n\n<pre><code>&lt;VirtualHost *:80&gt;\n    ServerName your.domain.com\n    Redirect permanent / https://your.domain.com/\n&lt;/VirtualHost&gt;\n\n&lt;VirtualHost *:443&gt;\n    ServerName your.domain.com\n    SSLEngine On\n    # insert code here...\n&lt;/VirtualHost&gt;\n</code></pre>\n\n<p>Save the file and check if the configuration is correct before your restart the server:</p>\n\n<pre><code>sudo apachectl configtest\n</code></pre>\n\n<p>If you get the message, <code>Syntax OK</code>, then go ahead and restart the server:</p>\n\n<pre><code>sudo systemctl restart apache2\n</code></pre>\n\n<p>Now, your visitors will be redirected from HTTP to HTTPS automatically!</p>\n\n<p>Hope you found this tip useful!</p>\n", "index": 107}, {"section": "til", "title": "Quick Search for file in your workspace in Visual Studio Code", "link": "til/posts/quick-search-for-file-in-your-workspace-in-visual-studio-code", "date": "July 9th, 2021", "date_alt": "09.07.2021", "year": "2021", "date_raw": "2021-07-09", "slug": "quick-search-for-file-in-your-workspace-in-visual-studio-code", "category": "VSCode", "categories": [{"title": "VSCode", "link": "/category/vscode/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/108_2021_07_09_quick-search-for-file-in-your-workspace-in-visual-studio-code.md", "status": "active", "content": "<p>Recently, started using Visual Studio Code as I'm yet figure out a way to install Sublime Text on Void Linux (using it as my current daily driver).</p>\n\n<p>I'm always used to looking for my files using keyboard shortcuts in Sublime Text and I was kind of surprised this feature isn't enabled by default in Visual Studio Code.</p>\n\n<p>Anyway, after a little digging, I found out that adding this line to your <code>settings.json</code> file would allow you to look for files in your workspace:</p>\n\n<pre><code>\"search.useIgnoreFiles\": false\n</code></pre>\n\n<p>And, now try <code>Ctrl+P</code> and you'll be able to search for your file(s) easily.</p>\n\n<p>Hope you found this tip useful!</p>\n", "index": 108}, {"section": "til", "title": "How to install Composer manually?", "link": "til/posts/how-to-install-composer-manually", "date": "July 3rd, 2021", "date_alt": "03.07.2021", "year": "2021", "date_raw": "2021-07-03", "slug": "how-to-install-composer-manually", "category": "Tooling", "categories": [{"title": "Tooling", "link": "/category/tooling/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/104_2021_07_03_how-to-install-composer-manually.md", "status": "active", "content": "<p>You may wonder <strong>\"why not install Composer via apt or yum package manager?\"</strong> and yes, it can be installed that way too.</p>\n\n<p>But what if you are using old composer packages or you wanted to skip the checks done during the interactive installation routine, this could be the way for you.</p>\n\n<p>I wouldn't really call it an advanced technique or something but if you know what you're doing, then you should be in the right direction.</p>\n\n<p>The below snippet will show you how to install it manually:</p>\n\n<pre><code>wget \"https://getcomposer.org/download/VERSION_X.X.X/composer.phar\"\nsudo mv composer.phar /usr/local/bin/composer\nsudo chmod a+x /usr/local/bin/composer\n</code></pre>\n\n<h2>Yes, that's it!</h2>\n\n<p>By placing Composer in the <code>/usr/local/bin</code> directory, it will be accessible from any directory within the system and you can run it globally.</p>\n\n<p>To check if you've installed it correctly, just do the following:</p>\n\n<pre><code>composer -V\n</code></pre>\n\n<p>Hope you found this tip useful!</p>\n", "index": 104}, {"section": "til", "title": "Prevent VIM from creating swapfiles", "link": "til/posts/prevent-vim-from-creating-swapfiles", "date": "July 3rd, 2021", "date_alt": "03.07.2021", "year": "2021", "date_raw": "2021-07-03", "slug": "prevent-vim-from-creating-swapfiles", "category": "VIM", "categories": [{"title": "VIM", "link": "/category/vim/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/105_2021_07_03_prevent-vim-from-creating-swapfiles.md", "status": "active", "content": "<p>I like VIM and use it regularly to write and edit code on a daily basis but I always find the creation of <code>.swp</code> files really annoying.</p>\n\n<p>If you find them annoying too, you disable them temporarily in the editor, like this:</p>\n\n<pre><code>:set noswapfile\n</code></pre>\n\n<p>Or if you want to disable it permanently, just add this line in your <code>.vimrc</code> file:</p>\n\n<pre><code>set noswapfile\n</code></pre>\n\n<p>Don't get me wrong, I'm not saying that you should dislike <code>.swp</code> files because if the editor crashes or your computer/server crashes in midway, those files can save your progress.</p>\n\n<p>Hope you found this tip useful!</p>\n", "index": 105}, {"section": "til", "title": "How to setup rsync with passwordless SSH on UNIX/Linux?", "link": "til/posts/how-to-setup-rsync-with-passwordless-ssh-on-unixlinux", "date": "July 3rd, 2021", "date_alt": "03.07.2021", "year": "2021", "date_raw": "2021-07-03", "slug": "how-to-setup-rsync-with-passwordless-ssh-on-unixlinux", "category": "DevOps", "categories": [{"title": "DevOps", "link": "/category/devops/"}], "summary": "", "reading_time": "2 minutes read", "preview_image_url": "", "filename": "content/til/106_2021_07_03_how-to-setup-rsync-with-ssh-on-unixlinux-without-password.md", "status": "active", "content": "<p>Tired of ensuring if whether each file in every server is synced? Planning on doing automated backups? If so, then this technique should come in handy for you.</p>\n\n<p>Interested? Then follow the steps below:</p>\n\n<h2>Check if rsync over SSH works</h2>\n\n<p>Before you start, please ensure that you can <code>rsync</code> to your intended server over <code>ssh</code> using a password.\nWith the following example, you can just send a simple file over to the intended server and see if it works or not:</p>\n\n<pre><code>rsync -avz -e ssh test.txt username@REMOTE_SERVER_IP_OR_DOMAIN:/path/to/folder/\n</code></pre>\n\n<p>Once you execute this command on the terminal, it'll prompt you for a password on the remote server, if it does, then it works.</p>\n\n<h2>Generate SSH Keys</h2>\n\n<p>If you want to do a passwordless SSH, you need to generate public and private SSH keys on the local server by typing the following command on the terminal:</p>\n\n<pre><code>ssh-keygen\nEnter passphrase (empty for no passphrase):\nEnter same passphrase again:\n</code></pre>\n\n<p>If you're prompted to enter a passphrase, just hit <code>Enter</code> and proceed until the key is generated. Once the keys are generated, they'll be in the <code>~/.ssh</code> directory on your local server.</p>\n\n<h2>Copy public key to remote server</h2>\n\n<p>Using <code>ssh-copy-id</code>, you can copy the public key to the remote server:</p>\n\n<pre><code>ssh-copy-id -i ~/.ssh/id_rsa.pub REMOTE_SERVER_IP_OR_DOMAIN\n</code></pre>\n\n<p>Once executed, you'll be prompted to enter the password of the account on the remote server and if successful, the public key will be copied to the remote server and will be stored in it's appropriate location.</p>\n\n<h2>Perform Rsync over passwordless SSH</h2>\n\n<p>If you've come this far, then you should be able to SSH to the remote server without entering the password:</p>\n\n<pre><code>ssh REMOTE_SERVER_IP_OR_DOMAIN\n</code></pre>\n\n<p>If it works, then perform the <code>rsync</code> operation again <a href=\"#rsync-operation\">(above)</a> and this time, it shouldn't prompt you to enter any password.</p>\n\n<p>Hope you liked reading this short article!</p>\n", "index": 106}, {"section": "til", "title": "Render a simple RGB colored image in C++", "link": "til/posts/render-a-simple-rgb-colored-image-in-c", "date": "June 11th, 2021", "date_alt": "11.06.2021", "year": "2021", "date_raw": "2021-06-11", "slug": "render-a-simple-rgb-colored-image-in-c", "category": "Graphics", "categories": [{"title": "Graphics", "link": "/category/graphics/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/103_2021_06_11_render-a-simple-rgb-colored-image-in-c.md", "status": "active", "content": "<p><img src=\"../../../static/til_images/rgb-colored-spectrum.png\" style=\"width: 500px; height: 300px;\" /></p>\n\n<p>Recently, I started reading a book called <a href=\"https://graphicscodex.courses.nvidia.com/app.html\">The Graphics Codex</a>, it's an amazing book about Computer Graphics covering a lot of content and I find it quite resourceful. I wanted to build my own toy raytracer for the sake of exploring, so that's why I started to refresh my graphics coding knowledge a bit.</p>\n\n<p>Just like any graphics renderer, in order to view your image. you must be able to write your image to a file, right?</p>\n\n<p>Below, I wrote a really simple code to generate the entire RGB colored spectrum from top to bottom:</p>\n\n<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main() {\n    const int width = 800;\n    const int height = 800;\n\n    std::cout &lt;&lt; \"P3\\n\" &lt;&lt; width &lt;&lt; \" \" &lt;&lt; height &lt;&lt; \"\\n255\\n\";\n\n    for(int j=height-1; j&gt;=0; j--) {\n        for(int i=0; i&lt;width; i++) {\n            auto r = double(i) / (width-1);\n            auto g = double(j) / (height-1);\n            auto b = 0.25;\n\n            int ir = static_cast&lt;int&gt;(255.999 * r);\n            int ig = static_cast&lt;int&gt;(255.999 * g);\n            int ib = static_cast&lt;int&gt;(255.999 * b);\n\n            std::cout &lt;&lt; ir &lt;&lt; \" \" &lt;&lt; ig &lt;&lt; \" \" &lt;&lt; ib &lt;&lt; \"\\n\";\n        }\n    }\n}\n</code></pre>\n\n<p>You can generate it by simply creating an executable like this:</p>\n\n<pre><code>g++ -o pixels pixels.cpp\n</code></pre>\n\n<p>Now, when you execute it by typing <code>./pixels</code>, you'll get a list of numbers that's pretty much a combination and permutation of RGB color values.</p>\n\n<p>Lastly, to generate a colored image, like the one above, just redirect the output to an image format, in this example, I used PPM image format:</p>\n\n<pre><code>./pixels &gt; image.ppm &amp;&amp; xdg-open image.ppm\n</code></pre>\n\n<p>And that's it, you have generated your own colored image! &#x1F601;</p>\n\n<p>Hope you found this useful!</p>\n", "index": 103}, {"section": "writings", "title": "One year of writing TIL articles", "link": "writings/posts/one-year-of-writing-til-articles", "date": "June 4th, 2021", "date_alt": "04.06.2021", "year": "2021", "date_raw": "2021-06-04", "slug": "one-year-of-writing-til-articles", "category": "Self-reflection", "categories": [{"title": "Self-reflection", "link": "/category/selfreflection/"}], "summary": "A little self-reflection on how writing TIL articles has improved my productivity and learning.", "reading_time": "2 minutes read", "preview_image_url": "", "filename": "content/writings/63_2021_06_04_one-year-of-writing-til-articles.md", "status": "active", "content": "<p>Last year, around this time, I was working from home due to the COVID-19 restrictions placed by the UAE Government.</p>\n\n<p>During this time, I noticed that I ran out of ideas for my blog and didn't even get time to maintain it for a long time.</p>\n\n<p>Then, I came across <a href=\"https://github.com/jbranchaud/til\">Josh Branchaud's TIL collection</a>, which inspired me to start my own TIL section in my blog. At first, I had the idea of merging it with my main blog but then, I thought of keeping it separate and well, fast-forward to a year now, it's been one of the most productive platforms for writing short articles based on whatever I have learnt or solved.</p>\n\n<p>As for those of you who might not know, TIL a.k.a stands for <strong>Today I Learned</strong> and what I really liked about it is that there isn't any barrier that stops you from writing a short article and that was the one thing that motivated me to write something on my blog.</p>\n\n<h2>Has it helped it you?</h2>\n\n<p>Yes, it did help me in two ways.</p>\n\n<p>Professionally, it has motivated me to learn more about my field and share my knowledge about whatever I learned while solving a particular problem or a tip that I found useful. The idea was likened to a personal StackOverflow repository that I would often revisit to refresh my memory.</p>\n\n<p>Personally, it helped me reflect my values as a programmer and made me realize that there's a lot of things to learn out there and it's pretty much endless as there's always something to learn every single day. And yes, it helped me improve my writing abilities too.</p>\n\n<p>Although, this article resides in a what I would call it as a \"Technical blog\", I guess, this applies to everyone who wants to refresh their writing productivity and help them get started back on the tracks again.</p>\n\n<p>Hope you liked reading this article.</p>\n\n<p>Stay tuned for more!</p>\n", "index": 63}, {"section": "writings", "title": "Understanding SPF, DKIM and DMARC protocols", "link": "writings/posts/understanding-spf-dkim-and-dmarc-protocols", "date": "April 10th, 2021", "date_alt": "10.04.2021", "year": "2021", "date_raw": "2021-04-10", "slug": "understanding-spf-dkim-and-dmarc-protocols", "category": "Email + Security", "categories": [{"title": "Email", "link": "/category/email/"}, {"title": "Security", "link": "/category/security/"}], "summary": "An insight into the three main email security protocols that protects your email from malicious attackers.", "reading_time": "7 minutes read", "preview_image_url": "", "filename": "content/writings/62_2021_04_09_understanding-spf-dkim-and-dmarc-protocols.md", "status": "active", "content": "<p>Today, email spam is one of the most common cyberattacks conducted by people with malicious intent intending to steal your passwords and personal credentials, leading users to phishing sites to steal bank account details, identity theft and so on.</p>\n\n<p>Because of this, ISPs and email providers such as Gmail and Office 365 are taking anti-spam measures by enforcing stricter protocols in the type of emails that they receive, so it's good to implement those protocols and ensure that your email gets delivered and not delayed or worse, rejected by the mail servers.</p>\n\n<h2>So, what are those protocols?</h2>\n\n<p><a href=\"#spf-record\">SPF</a>, <a href=\"#dkim-record\">DKIM</a> and <a href=\"#dmarc-record\">DMARC</a> are the three main secure protocols used to authenticate your mail server and this will prove the ISPs and other mail service providers that the mail being sent is legitimate and authorized.</p>\n\n<h2><a id=\"spf-record\"></a> What is SPF?</h2>\n\n<p>It's an acronym for <strong>Sender Policy Framework</strong>. SPF is nothing but a DNS TXT record that specifies the server(s) and IP addresses that are allowed to send email from a specific domain.</p>\n\n<p>Assuming you are the sender, just think of sending a postcard to your friend in which you add your address as well, so that your friend knows who the recipient is and he/she would most likely open it because they trust it.</p>\n\n<p>But in technical terms, the actual recipient is not the user but rather the mail server that receives the mail.</p>\n\n<h3>Create an SPF record</h3>\n\n<p>An SPF record is a very simple string and it can be easily created. However, there are a few parts to it:</p>\n\n<ol>\n<li>Version of SPF used.</li>\n<li>IP addresses that are authorized to send emails.</li>\n<li>Third party domain(s) that are authorized to send emails.</li>\n<li>An ending tag named \"all\" which tells the receiving server on what policy to apply if the sending server is not a part of the SPF record.</li>\n</ol>\n\n<p>So, let's what does it look like and what each part of it does:</p>\n\n<pre><code>v=spf1 ip4:111.111.111.111 include:example-domain.com -all\n</code></pre>\n\n<p><code>v=spf1</code> states the SPF version being implemented. Currently, there's no any other version at this point. So, it should always stay as this version until another version is released.</p>\n\n<p><code>ip4:111.111.111.111</code> is the IP address of the mail server/domain that's authorized to send emails for that domain. You can use multiple IP addresses and can be listed individually like this <code>ip4:111.111.111.111 ip4:222.222.222.222</code> or through a <a href=\"https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\">CIDR</a> like <code>ip4:111.111.111.0/20</code>. If both IPv4 and IPv6 addresses are being used by mail server, make sure that both of those addresses are being listed.</p>\n\n<p><code>include:example-domain.com</code> is a secondary domain that's authorized to send emails on behalf of the primary mail domain(s) listed. Just like the previous rule above, you can add multiple secondary domains but bear in mind that only a maximum of 10 domains are allowed for any sending domain.</p>\n\n<p><code>-all</code> is a tag that instructs the receiving server on how to handle messages from a domain that isn't a part of the SPF record. There are some options and they are all dictated by a single character that precedes the <code>all</code> keyword. The options are:</p>\n\n<ul>\n<li><code>-all</code> means hard fail. The receiving server should reject the email if the sender domain is not authorized.</li>\n<li><code>~all</code> means soft fail. The receiving server can flag it as a possible spam if the sender domain is not authorized. </li>\n<li><code>+all</code> means authorized. The receiving server allows the email even if the sender domain is not authorized. Now, this is not recommended and please do not use this option.</li>\n</ul>\n\n<h2><a id=\"dkim-record\"></a> What is DKIM?</h2>\n\n<p>It's an acronym for <strong>DomainKeys Identified Mail</strong> a.k.a Email signing. Just like <a href=\"#spf-record\">SPF</a>, DKIM is also a simple DNS TXT record that tells the receiving server that the mail is certified which allows to build a trust between both the sending and receiving servers.</p>\n\n<p>To handle this trust, DKIM makes uses of an RSA cryptographic algorithm to create a pair of <strong>public</strong> and <strong>private</strong> encryption keys. The private key will remain on the server (i.e. the mail server) whereas the public key is placed in your DNS records.</p>\n\n<h2>How to create a DKIM record?</h2>\n\n<p>Depending on your mail provider, it can be easily generated by tools provided by them and once generated, it can be copy-pasted to the DNS records.</p>\n\n<p>This is how a typical DKIM record would look like:</p>\n\n<pre><code>v=DKIM1; k=rsa;\np=iHeFQ+7rCiSQs3DPjR2eUSZSv4i/Kp+sipRfVH7BGf+SxcwOkX7X8R1RVObMQsFcbIxnrq7Ba2QCf0YZlL9iqJf32V+baDI8IykuDztuoNUF2Kk0pawZkbSPNHYRtLxV2CTOtc+x4eIeSeYptaiu7g7GupekLZ2DE1ODHhuP4I=\n</code></pre>\n\n<p>Regardless of how it's being generated, this is what each part of the header means:</p>\n\n<p><code>v=DKIM1</code> is the DKIM protocol version used.</p>\n\n<p><code>p=</code> is the Base64 encoded public key generated.</p>\n\n<p><code>k=</code> is the mechanism used to decode the DKIM signature. The encryption key is usually based on <code>rsa-sha1</code> or <code>rsa-sha256</code> signing algorithm.</p>\n\n<p>You can use DMARC analyzer's <a href=\"https://dmarcanalyzer.com/dkim/dkim-checker\">DKIM checker</a> to check if your DKIM record is valid.</p>\n\n<h2><a id=\"dmarc-record\"></a> What is DMARC?</h2>\n\n<p>It's an acronym for <strong>Domain-based Message Authentication, Reporting and Conformance</strong>. This protocol is built around SPF and DKIM and it ensures the following:</p>\n\n<ol>\n<li>Verifies that the sender's email is protected by SPF and DKIM protocols.</li>\n<li>Instructs the receiving mail server on what to do if the authentication fails.</li>\n<li>Provides a way for the receiving server to send a report to the sender about the DMARC evaluation i.e. whether it passed or failed.</li>\n</ol>\n\n<p>If you have come this far in the article, you might have understood why both <a href=\"#spf-record\">SPF</a> and <a href=\"#dkim-record\">DKIM</a> were explained and why they are quite necessary.</p>\n\n<h2>How to create a DMARC record?</h2>\n\n<p>Once you have both SPF and DKIM records in place, then it's easy to create your DMARC record. There are many sites and I would recommend you to try MXToolbox's <a href=\"https://mxtoolbox.com/DMARCRecordGenerator.aspx\">DMARC Record Generator</a>.</p>\n\n<p>This is how a DMARC record would look like:</p>\n\n<pre><code>v=DMARC1; p=none; fo=1; rua=mailto:address@example.com;\n</code></pre>\n\n<p>And here's what each part of the header translates to:</p>\n\n<p><code>v</code> is the version tag, similar to the SPF record. It should always be <code>DMARC1</code> in the record.</p>\n\n<p><code>p</code> is the policy tag. <code>none</code> means to not do anything to the email, <code>quarantine</code> means to flag it as spam and <code>reject</code> means to reject the email.</p>\n\n<p><code>fo</code> is the tag that lets the receiving servers know that failed messages must be returned to the sender or not. There are four values for this tag:</p>\n\n<ul>\n<li><code>0</code>: Generate a report if both DKIM and SPF produce a \"Pass\" result.</li>\n<li><code>1</code>: Generate a report if both DKIM and SPF produce a result other than \"Pass\".</li>\n<li><code>d</code>: Generate a report if the email had failed the DKIM evaluation.</li>\n<li><code>s</code>: Generate a report if the email had failed the SPF evaluation.</li>\n</ul>\n\n<p>It's actually recommended to use <code>fo=1</code> which can help you look for any email delivery issues.</p>\n\n<p><code>rua</code> tells the receiving server on where to send the aggregate reports. This could provide insights into the health of the email server and can help identify any malicious activities.</p>\n\n<p>There are many optional tags that can be used but these are the tags are most commonly used by default.</p>\n\n<h2>Conclusion</h2>\n\n<p>With the increase in spam emails, it's good to take such preventive measures to ensure that you are following best practices and doing your part to prevent malicious emails and other security related issues.</p>\n\n<p>If you want to read more about these protocols, you can read the following links recommended below:</p>\n\n<ul>\n<li><a href=\"https://dmarcanalyzer.com/spf/\">Sender Policy Framework (SPF)</a></li>\n<li><a href=\"https://dkim.org\">DomainKeys Identified Mail</a></li>\n<li><a href=\"https://dmarc.org\">Domain-based Message Authentication, Reporting and Conformance</a></li>\n</ul>\n\n<p>Hope you liked reading this article! &#x1F604;</p>\n", "index": 62}, {"section": "til", "title": "Find directories created within a date range", "link": "til/posts/find-directories-created-within-a-date-range", "date": "April 10th, 2021", "date_alt": "10.04.2021", "year": "2021", "date_raw": "2021-04-10", "slug": "find-directories-created-within-a-date-range", "category": "UNIX", "categories": [{"title": "UNIX", "link": "/category/unix/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/96_2021_04_10_find-directories-created-within-a-date-range.md", "status": "active", "content": "<p>Executing these commands helps me create a sorted list of files/directories created within a specific date range:</p>\n\n<pre><code>touch -t 202104100000 start\ntouch -t 202104150000 stop\nfind . -type d -maxdepth 1 -newer start \\! -newer stop | sort &gt;&gt; directories.txt\n</code></pre>\n\n<p>Someday, these commands shall come in handy, bud! &#x1F60E;</p>\n", "index": 96}, {"section": "til", "title": "Perform Git operations using path directory", "link": "til/posts/perform-git-operations-using-path-directory", "date": "April 10th, 2021", "date_alt": "10.04.2021", "year": "2021", "date_raw": "2021-04-10", "slug": "perform-git-operations-using-path-directory", "category": "Git", "categories": [{"title": "Git", "link": "/category/git/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/93_2021_04_10_perform-git-operations-using-path-directory.md", "status": "active", "content": "<p>The <code>-C</code> flag means the path of the directory and using this flag, you can perform any Git operations outside the project's directory without having to enter the directory all the time:</p>\n\n<pre><code>git -C /path/to/directory &lt;command&gt;\n</code></pre>\n\n<p>Hope this tip helps you out!</p>\n", "index": 93}, {"section": "til", "title": "Exclude directories while searching for a pattern in files", "link": "til/posts/exclude-directories-while-searching-for-a-pattern-in-files", "date": "April 10th, 2021", "date_alt": "10.04.2021", "year": "2021", "date_raw": "2021-04-10", "slug": "exclude-directories-while-searching-for-a-pattern-in-files", "category": "UNIX", "categories": [{"title": "UNIX", "link": "/category/unix/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/101_2021_04_10_exclude-directories-while-searching-for-a-pattern-in-files.md", "status": "active", "content": "<p>Looking for a specific text pattern in a directory but wanted to avoid some paths? Here's a quick command that you can try:</p>\n\n<pre><code>grep -R --exclude-dir=path/to/directory 'some pattern' /path/to/search\n</code></pre>\n\n<p>Hope this helps you out!</p>\n", "index": 101}, {"section": "til", "title": "Fetch selected files from your remote repository", "link": "til/posts/fetch-selected-files-from-your-remote-repository", "date": "April 10th, 2021", "date_alt": "10.04.2021", "year": "2021", "date_raw": "2021-04-10", "slug": "fetch-selected-files-from-your-remote-repository", "category": "Git", "categories": [{"title": "Git", "link": "/category/git/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/98_2021_04_10_fetch-selected-files-from-your-remote-repository.md", "status": "active", "content": "<p>Wanted to fetch a specific file from your Git repository except that the repository doesn't exist in your local machine?</p>\n\n<p>Try this out:</p>\n\n<pre><code>git init\ngit remote add origin &amp;lt;your_repo_link&amp;gt;.git\ngit fetch\ngit checkout &amp;lt;your_branch_name&amp;gt; -- &amp;lt;/path/to/file&amp;gt;\n</code></pre>\n\n<p>After executing these commands, you should be able to see the selected directory/file in your project directory.</p>\n\n<p>Hope you found this useful!</p>\n", "index": 98}, {"section": "til", "title": "Find directories older than a specific date and sorted by size", "link": "til/posts/find-directories-older-than-a-specific-date-and-sorted-by-size", "date": "April 10th, 2021", "date_alt": "10.04.2021", "year": "2021", "date_raw": "2021-04-10", "slug": "find-directories-older-than-a-specific-date-and-sorted-by-size", "category": "UNIX", "categories": [{"title": "UNIX", "link": "/category/unix/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/91_2021_04_10_find-directories-older-than-a-specific-date-and-sorted-by-size.md", "status": "active", "content": "<p>Wanted to see which directories were created on an older date along with their sizes? Try this:</p>\n\n<pre><code>find . -type d -maxdepth 1 ! -newermt \"2021-04-10\" -exec du -sh {} \\; | sort -h &gt;&gt; oldprojectsizes.txt\n</code></pre>\n\n<p>Hope you found this tip useful!</p>\n", "index": 91}, {"section": "til", "title": "How to change the character encoding of a file via Terminal?", "link": "til/posts/how-to-change-the-character-encoding-of-a-file-via-terminal", "date": "April 10th, 2021", "date_alt": "10.04.2021", "year": "2021", "date_raw": "2021-04-10", "slug": "how-to-change-the-character-encoding-of-a-file-via-terminal", "category": "UNIX", "categories": [{"title": "UNIX", "link": "/category/unix/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/95_2021_04_10_how-to-change-the-character-encoding-of-a-file-via-terminal.md", "status": "active", "content": "<p>Sometimes, I face character encoding issues while making minor edits via a SFTP console connected to a Linux server. I found a quick hack to change the file encoding using <code>vim</code> on the command line.</p>\n\n<p>In this example, I'm changing the encoding of the file to <code>unix</code>:</p>\n\n<pre><code>vim $filename +\"set ff=unix\" +wq\n</code></pre>\n\n<p>Hope you found this helpful!</p>\n", "index": 95}, {"section": "til", "title": "How to perform mysqldump without a password prompt?", "link": "til/posts/how-to-perform-mysqldump-without-a-password-prompt", "date": "April 10th, 2021", "date_alt": "10.04.2021", "year": "2021", "date_raw": "2021-04-10", "slug": "how-to-perform-mysqldump-without-a-password-prompt", "category": "UNIX", "categories": [{"title": "UNIX", "link": "/category/unix/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/97_2021_04_10_how-to-perform-mysqldump-without-a-password-prompt.md", "status": "active", "content": "<p>If you're performing a mass database backup using <code>mysqldump</code>, you'll pretty much find it annoying to type in the password every single time.</p>\n\n<p>To get rid of it, open <code>/etc/mysql/my.cnf</code> configuration file and add your database credentials:</p>\n\n<pre><code>[mysqldump]\nuser=\"your_username\"\npassword=\"your_password\"\n</code></pre>\n\n<p>Once done, save the <code>my.cnf</code> configuration file and now, you can try exporting your database without a hassle like this:</p>\n\n<pre><code>mysqldump -u your_username database_name &gt; database.sql\n</code></pre>\n\n<p>Hope this trick helps you out!</p>\n", "index": 97}, {"section": "til", "title": "How to recover from an errorneous forced git commit?", "link": "til/posts/how-to-recover-from-an-errorneous-forced-git-commit", "date": "April 10th, 2021", "date_alt": "10.04.2021", "year": "2021", "date_raw": "2021-04-10", "slug": "how-to-recover-from-an-errorneous-forced-git-commit", "category": "Git", "categories": [{"title": "Git", "link": "/category/git/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/99_2021_04_10_how-to-recover-from-an-errorneous-forced-git-commit.md", "status": "active", "content": "<p>If you're the type of person who types <code>git push -f origin master</code>, please don't do that as it might overwrite your entire branch. I'm saying this because I did this once and I thought I lost all the files.</p>\n\n<p>Luckily, I was a bit relieved as <code>git</code> is a VCS (Version Control Software), which means the files are most likely not <strong>deleted</strong>. This is when I came across <code>git reflog</code> command.</p>\n\n<p>According to the <a href=\"https://git-scm.com/docs/git-reflog\">Git manual</a>, this is what it does:</p>\n\n<blockquote>\n  <p>Reference logs, or \"reflogs\", record when the tips of branches and other references were updated in the local repository.</p>\n</blockquote>\n\n<p>This is a life-saver especially if you wanted to return back to the previous point in time. Here's how I recovered my files back again:</p>\n\n<ol>\n<li>Type <code>git reflog show remotes/origin/master</code></li>\n<li>Find and make note of the previous commit hash.</li>\n<li>Create a new branch with using the previous commit hash like this: <code>git branch &lt;new_branch_name&gt; &lt;previous_commit_hash&gt;</code></li>\n<li>Then finally, push the files to the new branch: <code>git add . &amp;&amp; git commit -m \"pushing recovered files\" &amp;&amp; git push origin &lt;new_branch_name&gt;</code></li>\n<li>Checkout to the newly created branch: <code>git checkout &lt;new_branch_name&gt;</code></li>\n<li>Delete the corrupted branch and replace it with the newly created branch that contains your restored files.</li>\n</ol>\n\n<p>If I didn't discover this, I don't really know what I would have done to recover those files.</p>\n\n<h2>References</h2>\n\n<ul>\n<li><a href=\"https://git-scm.com/docs/git-reflog\">Git reflog documentation</a></li>\n<li><a href=\"https://stackoverflow.com/questions/3973994/how-can-i-recover-from-an-erronous-git-push-f-origin-master\">How can I recover from an erronous git push -f origin master?</a></li>\n</ul>\n\n<p>Hope this helps you out!</p>\n", "index": 99}, {"section": "til", "title": "How to resolve the \"fatal: refusing to merge unrelated histories\" Git error?", "link": "til/posts/how-to-resolve-the-fatal-refusing-to-merge-unrelated-histories-git-error", "date": "April 10th, 2021", "date_alt": "10.04.2021", "year": "2021", "date_raw": "2021-04-10", "slug": "how-to-resolve-the-fatal-refusing-to-merge-unrelated-histories-git-error", "category": "Git", "categories": [{"title": "Git", "link": "/category/git/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/100_2021_04_10_how-to-resolve-the-fatal-refusing-to-merge-unrelated-histories-git-error.md", "status": "active", "content": "<p>This error shows up when two different projects are merged (i.e. they both could be the same project but unaware of each other's existence and have different commit histories).</p>\n\n<p>If you are facing this, chances are that:</p>\n\n<ol>\n<li><p>You must have cloned a project and the <code>.git</code> directory must have corrupted or got deleted and at this point, Git is unaware of the changes being made and will throw this error when you try to <em>push to</em> or <em>pull from</em> the remote repository.</p></li>\n<li><p>You created a new repository, made some changes and added the commits and then you tried to pull from the remote repository.</p></li>\n</ol>\n\n<p>Well, you can easily resolve by passing the <code>--allow-unrelated-histories</code> flag when pulling the latest updates from the remote repository:</p>\n\n<pre><code>git pull origin master --allow-unrelated-histories\n</code></pre>\n\n<p>Hope you found this useful!</p>\n", "index": 100}, {"section": "til", "title": "Zip all files that are modified on a specific date", "link": "til/posts/zip-all-files-that-are-modified-on-a-specific-date", "date": "April 10th, 2021", "date_alt": "10.04.2021", "year": "2021", "date_raw": "2021-04-10", "slug": "zip-all-files-that-are-modified-on-a-specific-date", "category": "UNIX", "categories": [{"title": "UNIX", "link": "/category/unix/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/102_2021_04_10_zip-all-files-that-are-modified-on-a-specific-date.md", "status": "active", "content": "<p>I wrote a nifty command to make an archive of the files that I have modified on a particular date. By doing so, this script comes in handy during urgent deployments, so that I don't lose track of the files that I should be updating.</p>\n\n<p>Here's the command at your disposal:</p>\n\n<pre><code>find . -maxdepth 10 -type f -newermt \"2021-04-10\" | zip -qur archive.zip -@\n</code></pre>\n\n<h2>How this works?</h2>\n\n<p>Let's see what this command does in pieces:</p>\n\n<p><code>find</code> is the utility tool used to return the filenames that match the specified parameters in the given directory.</p>\n\n<p><code>-maxdepth</code> is the flag that allows you to specify the depth of recursive searches it should perform.</p>\n\n<p><code>-type</code> is the flag that determines if you're looking for file or a directory.</p>\n\n<p><code>-newermt</code> is the flag that determines if the file has been modified on and/or after the given date.</p>\n\n<p>Once, the file has been found, the output is being <a href=\"https://www.geeksforgeeks.org/piping-in-unix-or-linux/\">redirected</a> to the <code>zip</code> utility function, which would then add the files to the <code>.zip</code> file.\nThe <code>-q</code> flag would perform the operation in silent mode, <code>-u</code> flag would update the files in the archive if modified or add it as a new file if it doesn't exist and <code>-@</code> takes the list of files from the standard input.</p>\n\n<p>If you want to ignore certain directories or file extensions, in that case, you can exclude them like so:</p>\n\n<pre><code>find . -maxdepth 30 -type f ! -path \"./path/to/directory/*\" !  -path \"*.ext\" -newermt \"2021-04-10\" | zip -qur archive.zip -@\n</code></pre>\n\n<p>Or, you can even archive the modified files by specifying a date range:</p>\n\n<pre><code>touch --date \"2021-04-10\" startdate\ntouch --date \"2021-04-15\" enddate\nfind . -maxdepth 30 -type f -newer startdate -not -newer enddate | zip -ur archive.zip -@\n</code></pre>\n\n<p>Hope you found this tip useful! &#x1F601;</p>\n", "index": 102}, {"section": "til", "title": "Get a list of directories with their sizes in the current directory", "link": "til/posts/get-a-list-of-directories-with-their-sizes-in-the-current-directory", "date": "April 10th, 2021", "date_alt": "10.04.2021", "year": "2021", "date_raw": "2021-04-10", "slug": "get-a-list-of-directories-with-their-sizes-in-the-current-directory", "category": "UNIX", "categories": [{"title": "UNIX", "link": "/category/unix/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/92_2021_04_10_get-a-list-of-directories-with-their-sizes-in-the-current-directory.md", "status": "active", "content": "<p>If you want to sizes of each directory in a list, try the following command:</p>\n\n<pre><code>du -sh * | sort -h &gt;&gt; directories-sorted.txt\n</code></pre>\n\n<p>And, if you wanted to find the directory that takes consumes a lot of space in your directory, you can try this:</p>\n\n<pre><code>du -sh * | sort -h | tail -n 1\n</code></pre>\n\n<p>Hope these tips do come in handy! &#x1F60A;</p>\n", "index": 92}, {"section": "til", "title": "How to update your Git remote origin URL?", "link": "til/posts/how-to-update-your-git-remote-origin-url", "date": "April 10th, 2021", "date_alt": "10.04.2021", "year": "2021", "date_raw": "2021-04-10", "slug": "how-to-update-your-git-remote-origin-url", "category": "Git", "categories": [{"title": "Git", "link": "/category/git/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/94_2021_04_10_how-to-set-your-git-remote-origin-url.md", "status": "active", "content": "<p>Did you make a typo while typing out your Git remote origin URL? Is it pointing towards the wrong repository?</p>\n\n<p>You can easily update it using the following command:</p>\n\n<pre><code>git remote set-url origin https://example.com/username/repository.git\n</code></pre>\n\n<p>Hope you found this useful!</p>\n", "index": 94}, {"section": "til", "title": "Convert numbers from English to Arabic in PHP", "link": "til/posts/convert-numbers-from-english-to-arabic-in-php", "date": "March 12th, 2021", "date_alt": "12.03.2021", "year": "2021", "date_raw": "2021-03-12", "slug": "convert-numbers-from-english-to-arabic-in-php", "category": "PHP", "categories": [{"title": "PHP", "link": "/category/php/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/79_2021_03_12_convert-numbers-from-english-to-arabic-in-php.md", "status": "active", "content": "<p>If you're a developer working in the Middle East, it's quite common that you'll work on a project that bilingual, in our case, it's english and arabic.</p>\n\n<p>In my opinion, it's not aesthetically pleasing and logical to have english numbers in arabic text, so, write a simple helper function to convert the numerals from english to arabic:</p>\n\n<pre><code>&lt;?php\nfunction convertEnglishToArabicNumerals($str) {\n    if (\\App::getLocale() == 'ar') {\n        $westernArabic = array('0', '1', '2', '3', '4', '5', '6', '7', '8', '9');\n        $easternArabic = array('\u0660', '\u0661', '\u0662', '\u0663', '\u0664', '\u0665', '\u0666', '\u0667', '\u0668', '\u0669');\n        $str = str_replace($westernArabic, $easternArabic, $str);\n    }\n    return $str;\n}\n?&gt;\n</code></pre>\n\n<p>And since most browsers can handle RTL, you don't have to worry about how the arabic numerals are being displayed in your application.</p>\n", "index": 79}, {"section": "til", "title": "Convert string from snake case to camel case", "link": "til/posts/convert-string-from-snake-case-to-camel-case", "date": "March 12th, 2021", "date_alt": "12.03.2021", "year": "2021", "date_raw": "2021-03-12", "slug": "convert-string-from-snake-case-to-camel-case", "category": "VIM", "categories": [{"title": "VIM", "link": "/category/vim/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/90_2021_03_12_convert-string-from-snake-case-to-camel-case.md", "status": "active", "content": "<p>Thought of sharing a simple regular expression that I use on VIM to convert <strong>snake_case</strong> letters to <strong>camelCase</strong> letters (see what I did there) &#x1F61C;</p>\n\n<p>Here's the pattern for you to use:</p>\n\n<pre><code>:s/ \\([a-zA-Z]\\)/\\u\\1/g\n</code></pre>\n\n<p>Hope you found this tip useful!</p>\n", "index": 90}, {"section": "til", "title": "Check if trait is being used in your class", "link": "til/posts/check-if-trait-is-being-used-in-your-class", "date": "March 12th, 2021", "date_alt": "12.03.2021", "year": "2021", "date_raw": "2021-03-12", "slug": "check-if-trait-is-being-used-in-your-class", "category": "PHP", "categories": [{"title": "PHP", "link": "/category/php/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/87_2021_03_12_check-if-trait-is-being-used-in-your-class.md", "status": "active", "content": "<p>Want to know if a trait is being used in your current class? Try this:</p>\n\n<pre><code>&lt;?php\nin_array(Foo::class, class_uses($this))\n?&gt;\n</code></pre>\n\n<p>By any chance, if the current class is inherited, please note that the <code>class_uses()</code> method will only return the list of traits used by the current class and won't include any traits of it's parent class.</p>\n", "index": 87}, {"section": "til", "title": "How to resolve the issue of not receiving emails on the same domain?", "link": "til/posts/how-to-resolve-the-issue-of-not-receiving-emails-on-the-same-domain", "date": "March 12th, 2021", "date_alt": "12.03.2021", "year": "2021", "date_raw": "2021-03-12", "slug": "how-to-resolve-the-issue-of-not-receiving-emails-on-the-same-domain", "category": "cPanel + Email", "categories": [{"title": "cPanel", "link": "/category/cpanel/"}, {"title": "Email", "link": "/category/email/"}], "summary": "", "reading_time": "2 minutes read", "preview_image_url": "", "filename": "content/til/89_2021_03_12_how-to-resolve-the-issue-of-not-receiving-emails-on-the-same-domain.md", "status": "active", "content": "<p>Recently, we hosted our company's redesigned website on GoDaddy, which offers cPanel to manage your website. I was dealing with an annoying email bug in which I was able to send/receive emails to any account except the ones that share the company domain.</p>\n\n<p>The company's current email setup makes use of Google Workspace and since we're using a Shared Hosting account, GoDaddy allows you to use their SMTP relay and prohibits the use of third-party SMTP services such as Google Workspace, Outlook, etc.</p>\n\n<p>After configuring it with Google's MX records in the DNS settings, I wasn't receiving any email on my own company email yet I was able to receive on other email accounts that didn't share the company's domain.</p>\n\n<p>I did a little R&amp;D and ran into this documentation about <a href=\"https://docs.cpanel.net/cpanel/email/email-routing/\">email routing</a> and figured out that there could be an issue with it's configuration.</p>\n\n<p>Here's what I did:</p>\n\n<ol>\n<li>Open cPanel </li>\n<li>Search or look for <strong>Email Routing</strong></li>\n<li>Click on <strong>Email Routing</strong></li>\n<li>If your MX records are not pointing to the IP address of the hosting server, then select <strong>Remote Mail Exchanger</strong></li>\n<li>Save changes</li>\n</ol>\n\n<p>After following these steps, I was able to receive mails on the same domain!</p>\n\n<h2>So what really caused the issue?</h2>\n\n<p>Since, we didn't have a default email address set up in cPanel, the current mode to send all unrouted emails was set to <code>:blackhole:</code>, by default. I guess, it's set up that way to prevent the server from sending/receiving spam mails from the domain.</p>\n\n<p>This makes sense because:</p>\n\n<ol>\n<li>The MX records are not pointing to the current server</li>\n<li>There are no email accounts created for the domain on cPanel</li>\n<li>By setting the mode to <code>:blackhole</code>, all emails with the same domain are being discarded or rejected</li>\n</ol>\n\n<p>Not really sure if this is what caused the issue but judging from the facts, I was able to reach to this conclusion.</p>\n\n<p>Hope you found this tip useful.</p>\n\n<h2>Reference</h2>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/1107730/cant-send-email-to-addresses-at-my-own-domain\">Can't send email to addresses at my own domain</a></li>\n</ul>\n", "index": 89}, {"section": "til", "title": "Convert string to variable in PHP", "link": "til/posts/convert-string-to-variable-in-php", "date": "March 12th, 2021", "date_alt": "12.03.2021", "year": "2021", "date_raw": "2021-03-12", "slug": "convert-string-to-variable-in-php", "category": "PHP", "categories": [{"title": "PHP", "link": "/category/php/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/80_2021_03_12_convert-string-to-variable-in-php.md", "status": "active", "content": "<p>I read about <a href=\"https://www.php.net/language.variables.variable\">variable variables</a> in PHP's official documentation.</p>\n\n<p>Here's a sample:</p>\n\n<pre><code>&lt;?php\n    $a = \"hello\";\n    // Remove special characters and tags to prevent it from crashing.\n    $foo = preg_replace('/[^a-zA-Z0-9\\s]/', '', $$a);\n    echo $foo;\n?&gt;\n</code></pre>\n\n<p>Not sure if this is a good practice but it sure gets the job done!</p>\n", "index": 80}, {"section": "til", "title": "How to resolve the \"file_get_contents(): SSL operation failed\" error", "link": "til/posts/how-to-resolve-the-filegetcontents-ssl-operation-failed-error", "date": "March 12th, 2021", "date_alt": "12.03.2021", "year": "2021", "date_raw": "2021-03-12", "slug": "how-to-resolve-the-filegetcontents-ssl-operation-failed-error", "category": "PHP", "categories": [{"title": "PHP", "link": "/category/php/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/86_2021_03_12_how-to-resolve-the-filegetcontents-ssl-operation-failed-error.md", "status": "active", "content": "<p>If you're facing this error while trying to download a file from your server, it's most probably the SSL certificate that has been hosted on your server isn't correctly verified or maybe, you're using OpenSSL on a server running PHP 5.6.</p>\n\n<p>As per the <a href=\"http://php.net/manual/en/migration56.openssl.php\">documentation</a>, there are some changes that can be made to resolve it, like the following method:</p>\n\n<pre><code>&lt;?php\npublic function foo(Request $request) {\n    $arrContextOptions = array(\n        \"ssl\" =&amp;gt; array(\n            \"verify_peer\" =&amp;gt; false,\n            \"verify_peer_name\" =&amp;gt; false,\n        ),\n    );\n    return Response::make(file_get_contents(asset('pdf/file.pdf'), false, stream_context_create($arrContextOptions)), 200, [\n        'Content-Type' =&amp;gt; 'application/pdf',\n        'Content-Disposition' =&amp;gt; 'inline; filename=\"file.pdf\"',\n    ]);\n}\n?&gt;\n</code></pre>\n\n<p>Although, I won't recommend this unless you are testing it on a <code>localhost</code> environment as it's not secure and could have significant security implications because disabling verification can permit a <a href=\"https://en.wikipedia.org/wiki/Man-in-the-middle_attack\">Man in the Middle attack</a> to take place.</p>\n\n<p>Use it at your own risk!</p>\n", "index": 86}, {"section": "til", "title": "How to resolve the \"Failed to clear cache. Make sure you have the appropriate permissions.\" error", "link": "til/posts/how-to-resolve-the-failed-to-clear-cache-make-sure-you-have-the-appropriate-permissions-error", "date": "March 12th, 2021", "date_alt": "12.03.2021", "year": "2021", "date_raw": "2021-03-12", "slug": "how-to-resolve-the-failed-to-clear-cache-make-sure-you-have-the-appropriate-permissions-error", "category": "Laravel", "categories": [{"title": "Laravel", "link": "/category/laravel/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/81_2021_03_12_how-to-resolve-the-failed-to-clear-cache-make-sure-you-have-the-appropriate-permissions-error.md", "status": "active", "content": "<p>This error is annoying and mostly happens if the <code>data</code> directory is missing under the <code>storage/framework/cache/data</code> directory. For some reason, this folder doesn't exist by default.</p>\n\n<p>To resolve it, just manually create the <code>data</code> directory under the <code>storage/framework/cache/data</code> directory and it should fix the issue.</p>\n", "index": 81}, {"section": "til", "title": "How to exclude certain slugs in Laravel", "link": "til/posts/how-to-exclude-certain-slugs-in-laravel", "date": "March 12th, 2021", "date_alt": "12.03.2021", "year": "2021", "date_raw": "2021-03-12", "slug": "how-to-exclude-certain-slugs-in-laravel", "category": "Laravel", "categories": [{"title": "Laravel", "link": "/category/laravel/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/82_2021_03_12_how-to-exclude-certain-slugs-in-laravel.md", "status": "active", "content": "<p>Using plain Regular Expressions, you can exclude certain slug from your routes, try adding the following to your <code>routes/web.php</code> file:</p>\n\n<pre><code>&lt;?php\n    Route::match(array('GET', 'POST'), '/{slug}', 'YourController@index')-&gt;name('page')-&gt;where('slug', '^(?!pattern).*$');\n?&gt;\n</code></pre>\n\n<p>Hope you found this useful!</p>\n", "index": 82}, {"section": "til", "title": "Convert to date from timestamp using Carbon", "link": "til/posts/convert-to-date-from-timestamp-using-carbon", "date": "March 12th, 2021", "date_alt": "12.03.2021", "year": "2021", "date_raw": "2021-03-12", "slug": "convert-to-date-from-timestamp-using-carbon", "category": "Laravel", "categories": [{"title": "Laravel", "link": "/category/laravel/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/83_2021_03_12_convert-to-date-from-timestamp-using-carbon.md", "status": "active", "content": "<p>Using Carbon's <code>createFromFormat()</code> method is basically a wrapper for <code>DateTime::createFromFormat()</code>, the main difference between the two methods is that you can add a timezone to Carbon's method.</p>\n\n<p>Here's a sample on how you can convert to date using timestamp using Carbon:</p>\n\n<pre><code>&lt;?php\n    function formatDate(Request $request) {\n        return \\Carbon\\Carbon::createFromFormat('Y-m-d H:i:s', $request-&gt;date)-&gt;format('Y-m-d');\n    }\n?&gt;\n</code></pre>\n\n<p>Hope you found this useful!</p>\n", "index": 83}, {"section": "til", "title": "Clearing cache on a Shared Hosting Server", "link": "til/posts/clearing-cache-on-a-shared-hosting-server", "date": "March 12th, 2021", "date_alt": "12.03.2021", "year": "2021", "date_raw": "2021-03-12", "slug": "clearing-cache-on-a-shared-hosting-server", "category": "Laravel", "categories": [{"title": "Laravel", "link": "/category/laravel/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/78_2021_03_12_clearing-cache-on-a-shared-hosting-server.md", "status": "active", "content": "<p>Hosted your website on a Shared Hosting Server and got limited access to clear the cache on your project?</p>\n\n<p>Open up <code>routes/web.php</code> and create this route:</p>\n\n<pre><code>&amp;lt;?php\nRoute::get('/clearcache', function(){\n    \\Artisan::run('config:clear');\n    \\Artisan::run('cache:clear');\n    \\Artisan::run('view:clear');\n    \\Artisan::run('route:clear');\n    \\Artisan::run('config:cache');\n});\n?&amp;gt;\n</code></pre>\n\n<p>Just type the URL and it will clear all existing cache from the project.</p>\n\n<p>Hope this helps you out!</p>\n", "index": 78}, {"section": "til", "title": "Convert string to date using MySQL", "link": "til/posts/convert-string-to-date-using-mysql", "date": "March 12th, 2021", "date_alt": "12.03.2021", "year": "2021", "date_raw": "2021-03-12", "slug": "convert-string-to-date-using-mysql", "category": "MySQL", "categories": [{"title": "MySQL", "link": "/category/mysql/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/84_2021_03_12_convert-string-to-date-using-mysql.md", "status": "active", "content": "<p>Today, I was debugging a piece of code that is supposed to return a list of data based on the year, the funny thing is that the data was being returned on the development server but not on the production one.</p>\n\n<p>Weird, so I opened up <strong>MySQL Workbench</strong> and wrote a simple query to see if the dates were being returned because who knows maybe they weren't stored at all.</p>\n\n<pre><code>SELECT YEAR(date_posted) FROM posts;\n</code></pre>\n\n<p>The values returned were <code>null</code>. Now, that's strange because the dates were present in the column. So, I took a deep look and figured out that the dates were stored in <code>VARCHAR</code> instead of <code>DATETIME</code> data type! &#x1F614;</p>\n\n<p>Luckily, I figured that there's a way to resolve this by <code>STR_TO_DATE()</code> function:</p>\n\n<pre><code>SELECT YEAR(STR_TO_DATE(date_posted, '%Y-%m-%d')) FROM posts;\n</code></pre>\n\n<p>Bam! The results were coming now! &#x1F60C;</p>\n\n<p>Hope this helps you out!</p>\n", "index": 84}, {"section": "til", "title": "Use MySQL 8.0 with Native Password Authentication", "link": "til/posts/use-mysql-80-with-native-password-authentication", "date": "March 12th, 2021", "date_alt": "12.03.2021", "year": "2021", "date_raw": "2021-03-12", "slug": "use-mysql-80-with-native-password-authentication", "category": "MySQL", "categories": [{"title": "MySQL", "link": "/category/mysql/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/77_2021_03_12_use-mysql-80-with-native-password-authentication.md", "status": "active", "content": "<p>Last month, I was configuring an Ubuntu Server to deploy a client's project that uses MySQL 8.0 and PHP 7.2.\nSo, I installed the necessary dependencies and finally installed MySQL 8.0, created a new schema and imported the database tables required for the project.</p>\n\n<p>Next, I typed the project URL and ran into this error:</p>\n\n<pre><code>Unable to load plugin 'caching_sha2_password'\n</code></pre>\n\n<p>If you're running PHP 7.2 and facing this error, you should know that PHP 7.2 doesn't support native password authentication by default. But it's a simple fix, all you have to do is either one of the following:</p>\n\n<ol>\n<li><a href=\"#opt1\">Alter the current user's authentication to native password</a></li>\n<li><a href=\"#opt2\">Create a new user with native password authentication</a></li>\n</ol>\n\n<h2><a id=\"opt1\"></a> Alter the current user's authentication to native password</h2>\n\n<pre><code>ALTER USER 'your_user'@'your_server_host' IDENTIFIED WITH mysql_native_password BY 'your_password';\n</code></pre>\n\n<h2><a id=\"opt2\"></a> Create a new user with native password authentication</h2>\n\n<pre><code>CREATE USER 'your_user'@'your_server_host ' IDENTIFIED WITH mysql_native_password BY 'your_password'\n</code></pre>\n\n<p>For the changes to take effect, you need to reload the privileges by typing the following:</p>\n\n<pre><code>FLUSH PRIVILEGES;\n</code></pre>\n\n<p>Hope this helps you out!</p>\n", "index": 77}, {"section": "til", "title": "Create migrations and seeds from an existing database", "link": "til/posts/create-migrations-and-seeds-from-an-existing-database", "date": "March 12th, 2021", "date_alt": "12.03.2021", "year": "2021", "date_raw": "2021-03-12", "slug": "create-migrations-and-seeds-from-an-existing-database", "category": "Laravel", "categories": [{"title": "Laravel", "link": "/category/laravel/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/88_2021_03_12_create-migrations-and-seeds-from-an-existing-database.md", "status": "active", "content": "<p>Up until now, I've written migrations and generated seeders for some Laravel projects that I have worked on but recently, I thought of seeing if there's a way to generate migrations and seeds from an existing database especially if it's a project that never had any migrations or seeds created before.</p>\n\n<p>Luckily, I found these two packages, which turned out to be quite productive:</p>\n\n<ol>\n<li><a href=\"https://github.com/kitloong/laravel-migrations-generator\">kitloong/laravel-migrations-generator</a></li>\n<li><a href=\"https://github.com/orangehill/iseed\">orangehill/iseed</a></li>\n</ol>\n\n<p>Execute the following commands to install the packages mentioned above:</p>\n\n<pre><code>composer require --dev \"kitloong/laravel-migrations-generator\"\ncomposer require orangehill/iseed\n</code></pre>\n\n<h2>Generate migrations using existing database</h2>\n\n<p>You can generate your migrations for all tables like this:</p>\n\n<pre><code>php artisan migrate:generate\n</code></pre>\n\n<p>Or, you can specify the tables you wish to generate:</p>\n\n<pre><code>php artisan migrate:generate table1,table2,table3\n</code></pre>\n\n<h2>Generate new seeds using existing database</h2>\n\n<p>You can generate seeds for a single table like this:</p>\n\n<pre><code>php artisan iseed table_name\n</code></pre>\n\n<p>And for multiple tables, you can do this:</p>\n\n<pre><code>php artisan iseed table1,table2,table3\n</code></pre>\n\n<p>Hope you find this tip useful!.</p>\n", "index": 88}, {"section": "til", "title": "Show Git branch in your Bash prompt (with colors)", "link": "til/posts/show-git-branch-in-your-bash-prompt-with-colors", "date": "March 12th, 2021", "date_alt": "12.03.2021", "year": "2021", "date_raw": "2021-03-12", "slug": "show-git-branch-in-your-bash-prompt-with-colors", "category": "Bash", "categories": [{"title": "Bash", "link": "/category/bash/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/85_2021_03_12_show-git-branch-in-your-bash-prompt-with-colors.md", "status": "active", "content": "<p>Do you work on a project with multiple Git branches but don't know which one you're in? Open your <code>.bashrc</code> file and add this:</p>\n\n<pre><code>force_color_prompt=yes\ncolor_prompt=yes\n\nparse_git_branch() {\n git branch 2&amp;gt; /dev/null | sed -e '/^[^*]/d' -e 's/* \\(.*\\)/(\\1)/'\n}\n\nif [ \"$color_prompt\" = yes ]; then\n PS1='${debian_chroot:+($debian_chroot)}\\[\\033[01;32m\\]\\u@\\h\\[\\033[00m\\]:\\[\\033[01;34m\\]\\w\\[\\033[01;31m\\]$(parse_git_branch)\\[\\033[00m\\]\\$ '\nelse\n PS1='${debian_chroot:+($debian_chroot)}\\u@\\h:\\w$(parse_git_branch)\\$ '\nfi\n\nunset color_prompt force_color_prompt\n</code></pre>\n\n<div class=\"post-notification info\">\n    <h3>Updated: November 26th, 2022</h3>\n    The above script works fine for Ubuntu but doesn't work fine on other distros. Here's an alternative one that works on all distros:\n<pre><code>parse_git_branch() {\n    git branch 2&gt; /dev/null | sed -e '/^[^*]/d' -e 's/* \\(.*\\)/(\\1)/'\n}\n\nexport PS1=\"\\u@\\h \\[\\e[32m\\]\\w \\[\\e[91m\\]\\$(parse_git_branch)\\[\\e[00m\\]$ \"\n</code></pre>\n</div>\n\n<p>Save the file and execute this command for your changes to take effect:</p>\n\n<pre><code>source ~/.bashrc\n</code></pre>\n\n<p>Now, you should see your colors in your Bash prompt along with the Git branch that you're working on (<strong>Note: this will be shown if you're in a project that uses a Git repository</strong>).</p>\n\n<p>Hope this helps you out!</p>\n", "index": 85}, {"section": "writings", "title": "Make your own generative pixel art in less than 100 lines of code", "link": "writings/posts/make-your-own-generative-pixel-art-in-less-than-100-lines-of-code", "date": "March 5th, 2021", "date_alt": "05.03.2021", "year": "2021", "date_raw": "2021-03-05", "slug": "make-your-own-generative-pixel-art-in-less-than-100-lines-of-code", "category": "Generative Art + JavaScript", "categories": [{"title": "Generative Art", "link": "/category/generative-art/"}, {"title": "JavaScript", "link": "/category/javascript/"}], "summary": "By modifying my old random pixel generator, I was able to generate a Space Invaders-esque pixel art.", "reading_time": "4 minutes read", "preview_image_url": "", "filename": "content/writings/61_2021_03_05_make-your-generative-pixel-art-in-less-than-100-lines-of-code.md", "status": "active", "content": "<p><canvas id=\"myCanvas\" width=\"500\" height=\"302\" style=\"border:0px solid #40514e;background-color: #e4f9f5;\"></canvas></p>\n\n<script defer type=\"text/javascript\" src=\"/static/projects/invaders-sprites/script.js\"></script>\n\n<div class=\"post-notification success\">\n    <h3>Try it out!</h3>\n    <p>Refresh the page to generate unique Space Invader-esque patterns as the results are unpredictable!</p>\n</div>\n\n<p>Generative art is a topic that still fascinates me because of the fact that you can produce something unique by just writing few (sometimes, more) lines of code. Especially, if it's self-generating art that makes use of fixed rules and a slight dash of randomness to produce unique results.</p>\n\n<p>When it comes to writing code, it's quite straightforward. You come up with the rules and constraints and voila, you have something that works. Having said that, setting up rules for generative art can get quite tricky.</p>\n\n<p>You might have read about my previous post about <a href=\"/writings/posts/the-game-of-life/\">The Game of Life</a>, it contains only four rules and each of them took a part in evolving the system through each generation. With generative systems like that, you can never predict the results as complex patterns will emerge due to it's randomness.</p>\n\n<p>In my view, a combination of predictability and randomness is needed in order to create a good looking generative art.</p>\n\n<h2>Why you should explore it?</h2>\n\n<p>There could be many reasons, maybe you're bored, curious or passionate to learn something new. Who knows? Open up your editor and try it for yourself.</p>\n\n<p>Exploring the craft of making generative art has allowed me to:</p>\n\n<ul>\n<li>Gain different experiences &mdash; It allows you to sharpen your algorithms &amp; data structures and maybe even, learn a new technique.</li>\n<li>Create something visually appealing &mdash; A picture is equal to a thousand words.</li>\n<li>Instant results that makes you feel good &mdash; I mean, it's hard to explain but y'know what I mean, right?</li>\n</ul>\n\n<h2>Where to start?</h2>\n\n<p>Just like any other project, you just need:</p>\n\n<ul>\n<li>An inspiration or an idea that you can work on.</li>\n<li>The right kind of technology to use.</li>\n</ul>\n\n<p>With today's article, I'll be showing you how I built a Space Invader-esque pixel art generator in JavaScript that makes use of the Canvas API.</p>\n\n<h2>Building a generator</h2>\n\n<p>I'd like to give a shout out to the <a href=\"https://www.erdavids.com/\">person</a> who built a twitterbot that generates random sprites using Python's Pillow image library.</p>\n\n<p>I was inspired and I thought of writing it in JavaScript and as you can see above, it did turn out pretty well.</p>\n\n<p>Here's the code for your reference and please read the comments to know how it functions:</p>\n\n<pre><code>// To store any used colors\nvar colorStack = [];\n\n// Selected color palette\nvar colors = [\n    '#30e3ca',\n    '#ff5a5f',\n    '#40514e',\n    '#e4f9f5',\n    '#40514e',\n    '#e4f9f5',\n    '#e4f9f5',\n];\n\nvar canvas = document.getElementById(\"myCanvas\");\nvar ctx = canvas.getContext('2d');\n\nvar width = canvas.width;\nvar height = canvas.height;\n\nfunction createSquare(squareDimensions, color, element, spriteDim) {\n    const {squareX, squareY, squareWidth, squareHeight} = squareDimensions;\n\n    // If it's a middle element, apply a color\n    if (element == parseInt(spriteDim/2)) {\n        ctx.fillStyle = color;\n        ctx.fillRect(parseInt(squareX), parseInt(squareY), parseInt(squareWidth/squareX)+3, parseInt(squareHeight/squareY)+3);\n    }\n    // If it's the last element, then use the color that you saved previously\n    else if (colorStack.length == element + 1) {\n        ctx.fillStyle = colorStack.pop();\n        ctx.fillRect(parseInt(squareX), parseInt(squareY), parseInt(squareWidth/squareX)+3, parseInt(squareHeight/squareY)+3);  \n    }\n    // Else, apply a color and save this for the last element.\n    else {\n        colorStack.push(color);\n        ctx.fillStyle = color;\n        ctx.fillRect(parseInt(squareX), parseInt(squareY), parseInt(squareWidth/squareX)+3, parseInt(squareHeight/squareY)+3);      \n    }\n}\n\nfunction createInvader(invaderDimensions, spriteDim) { \n\n    var {posX, posY, invaderWidth, invaderHeight} = invaderDimensions;\n    var squareSize = (invaderWidth - posX) / spriteDim;\n\n    var cellPosition = 1;\n    var element = 0;\n\n    for(var y=0; y&lt;spriteDim; y++){\n        // Starts from the left side of the grid.\n        // Think of it as something like this:\n        // [-3,-2,-1,0,1,2,3]\n        cellPosition *= -1;\n\n        // First element\n        element = 0;\n\n        for(var x=0; x&lt;spriteDim; x++) {\n            squareX = x * squareSize + posX;\n            squareY = y * squareSize + posY;\n            squareWidth = squareX + squareSize;\n            squareHeight = squareY + squareSize;\n\n            // Pick a random color from the color palette\n            var color = colors[Math.floor(Math.random() * colors.length)];\n\n            var squareDimensions = {\n                'squareX': squareX+2,\n                'squareY':squareY+2,\n                'squareWidth':squareWidth,\n                'squareHeight':squareHeight,\n            };\n\n            // Create a square with a color and desired dimensions.\n            createSquare(squareDimensions, color, element, spriteDim);\n\n             // If it's the middle element or the starting element, \n             // then shift it's position to the leftmost.\n            if(element == parseInt(spriteDim/2) || element == 0) {\n                cellPosition *= -1;\n            }\n\n            element += cellPosition;\n        }\n    }\n}\n\nfunction main() {\n    var spriteDim = 7;\n    var numberOfInvaders = 15;\n    var invadersSize = parseInt(width / numberOfInvaders);\n    var padding = parseInt(invadersSize / spriteDim);\n\n    for(var x=0; x&lt;numberOfInvaders; x++) {\n        for(var y=0; y&lt;numberOfInvaders; y++) {\n            var posX = (x * invadersSize) + padding + 2;\n            var posY = (y * invadersSize) + padding + 2;\n            var invaderWidth = posX + invadersSize - (padding * 3);\n            var invaderHeight = posY + invadersSize - (padding * 3);\n\n            var invaderDimensions = {\n                'posX': posX,\n                'posY': posY,\n                'invaderWidth': invaderWidth,\n                'invaderHeight': invaderHeight\n            };\n\n            createInvader(invaderDimensions, spriteDim);\n        }\n    }   \n}\n\nmain();\n</code></pre>\n\n<p>Well, I won't say that is a perfect solution but hey, it works and yes, it doesn't take a lot of code to achieve something like this.</p>\n\n<h2>Explanation</h2>\n\n<p>I'll try my best to explain how this whole thing works.</p>\n\n<p>First, you need to initialize a <code>&lt;canvas&gt;</code> DOM element of the desired width and height. Then in the <code>main()</code> function, you determine the size of each invader by specifying the number of invaders and dividing it with the width of the canvas. These values will then be used to determine the coordinates for each invader.</p>\n\n<p>Second, the function <code>createInvader()</code> follows nearly the same process as the <code>main</code> function except that the coordinates for each pixel is determined by calculating the width of the invader and subtracting it's <code>x</code> position divided by the dimensions of each invader.</p>\n\n<p>Third, as you can see in the function <code>createSquare()</code>, it contains 3 simple rules in which all of them draws a square with a color but with an emphasis that each invader has a symmetrical pattern.</p>\n\n<p>The code looks deceptively simple but achieving this complexity did take a lot of trial and error and a little bit of simple calculus &#x1F602;.</p>\n\n<h2>Conclusion</h2>\n\n<p>Generative art might be something that you may not need to explore but it's quite fun and you may never know what you might be able to produce by combining both code and visuals.</p>\n\n<p>Hope you liked reading this article.</p>\n\n<p>Stay tuned for more! &#x1F918;</p>\n", "index": 61}, {"section": "about", "title": "A little bit about myself", "link": "about", "date": "February 19th, 2021", "date_alt": "19.02.2021", "year": "2021", "date_raw": "2021-02-19", "slug": "about", "category": "Introduction", "categories": [{"title": "Introduction", "link": "/category/introduction/"}], "summary": "Here's a not-so-formal kind of introduction about myself.", "reading_time": "3 minutes read", "preview_image_url": "", "filename": "content/about/01_2021_01_22_a-little-bit-about-myself.md", "status": "active", "content": "<p>Hello there! My name is Abdush Shakoor and I like problem solving and building stuff for fun!</p>\n\n<p>I'm a full stack software engineer living in Dubai, United Arab Emirates with a passion for Computer Science, Mathematics, Software Engineering, Digital Design and Technology.</p>\n\n<!-- During the past years, I've done internships with various companies including Oracle Corporation, Dubai. Find out more about my career on my [LinkedIn](https://www.linkedin.com/in/abdush-shakoor-mohamed-nazeer-b5546546) profile. -->\n\n<!-- As of **October 2019**, I'm looking for **better opportunities** to expand my programming and skills, so if you're a recruiter/well-wisher and interested in me, send me an [email](mailto:abdushshakoor1992@hotmail.com) about it.\n\nMy last job was at [Key Information Technology](https://www.kit.ae) in which I was building the company's website and productive tools for teams. Find out more about my career on my [LinkedIn](https://www.linkedin.com/in/abdush-shakoor-mohamed-nazeer-b5546546) profile. -->\n\n<p>Currently, I work at <a href=\"https://www.pgsuae.com\">Planet Green Solutions</a> as a Backend Engineer who develops web applications for various clients that mostly comprises of various Government Entities of the United Arab Emirates.</p>\n\n<p>Oh, I'm also part of the Backend team that helped build <a href=\"https://www.farmsgate.com\">FarmsGate</a>, an eCommerce platform for farmers that can sell and deliver fresh fruits and vegetables to your doorstep!</p>\n\n<p><a href=\"../resume/\">Check out my resume to learn more about my work experiences and projects &rarr;</a></p>\n\n<p>In my spare time, I love to tinker with my computer science and software engineering projects like implementing new algorithms, learning new programming languages or paradigms, building a game and so on. I also design conceptual user interfaces after being exposed to the <a href=\"https://dailyui.co\">DailyUI</a> project.</p>\n\n<!-- [Click here to see my UI/UX portfolio &rarr;](#) -->\n\n<p>In fact, this blog is built from scratch. No bootstrap, no heavy UI frameworks or libraries are used as I found it quite unnecessary for a minimalist blog.</p>\n\n<div class=\"post-notification\">\n    <h3>Blog engine updated!</h3>\n    <p>As of March 1st 2019, I have changed my blog engine from a dynamic website to a custom-built static site generator. <a href=\"../writings/posts/say-hello-new-blog/\">Read more &rarr;</a></p>\n</div>\n\n<p>I'm an intermediate-level toss juggler and I love to spend time practicing my juggling skills. Apart from that, I practice calisthenics, read books and listen to instrumental music.</p>\n\n<p>Illustrating artworks used to be a part of my life, but now it has become one of my hobbies as well. You can view my artworks on my <a href=\"https://www.behance.net/abdushshakoor\">Behance</a> profile.</p>\n\n<h2>Areas of Interest</h2>\n\n<p>My areas of interest includes but not limited to:</p>\n\n<ul>\n<li>Algorithms and Data Structures</li>\n<li>Computer Architecture</li>\n<li>Programming Languages and Compilers</li>\n<li>Distributed Systems</li>\n<li>Mathematics</li>\n<li>UNIX Operating Systems</li>\n<li>Networking</li>\n<li>Databases</li>\n<li>Computer Security and Cryptography</li>\n<li>Computer Graphics</li>\n<li>Artificial Intelligence and Machine Learning</li>\n<li>User Interface and Experience</li>\n</ul>\n\n<h2>Books I read</h2>\n\n<p>I recommend you to try and read these books:</p>\n\n<ul>\n<li><a href=\"https://www.amazon.com/Alchemist-Paulo-Coelho/dp/0061122416\">The Alchemist</a></li>\n<li><a href=\"https://www.amazon.com/dp/020161622X/ref=emc_b_5_i\">The Pragmatic Programmer: From Journeyman to Master</a></li>\n<li><a href=\"https://www.amazon.com/Passionate-Programmer-Remarkable-Development-Pragmatic-ebook/dp/B00AYQNR5U\">The Passionate Programmer: Creating a Remarkable Career in Software Development</a></li>\n<li><a href=\"https://www.amazon.com/Coders-Work-Reflections-Craft-Programming/dp/1430219483/\">Coders At Work: Reflections on the Craft of Programming</a></li>\n<li><a href=\"https://www.amazon.com/Show-Your-Work-Austin-Kleon/dp/076117897X\">Show Your Work: 10 Ways To Share Your Creativity And Get Discovered</a></li>\n<li><a href=\"https://www.amazon.com/Steal-Like-Artist-Things-Creative/dp/0761169253\">Steal Like an Artist: 10 Things Nobody Told You About Being Creative</a></li>\n<li><a href=\"https://www.amazon.com/Memory-Man-David-Baldacci/dp/1455559806\">The Memory Man</a></li>\n<li><a href=\"https://beej.us/guide/bgnet/\">Beej's Guide to Network Programming</a></li>\n</ul>\n\n<h2>Where can you find me?</h2>\n\n<p>My username in most places is <mark>@megacolorboy</mark>. This is where you can find me:</p>\n\n<ul>\n<li><a href=\"https://www.twitter.com/megacolorboy\">Twitter</a> &mdash; Come and Say Hi!</li>\n<li><a href=\"https://www.github.com/megacolorboy\">GitHub</a> &mdash; Code, Code and More Code</li>\n<li><a href=\"https://www.behance.net/abdushshakoor\">Behance</a> &mdash; Illustrations</li>\n<li><a href=\"https://www.facebook.com/megacolorboy\">Facebook</a></li>\n<li><a href=\"https://www.stackoverflow.com/users/6947884/megacolorboy\">StackOverflow</a></li>\n</ul>\n", "index": 1}, {"section": "writings", "title": "Built a new static site generator using Python 3.7", "link": "writings/posts/built-a-new-static-site-generator-using-python-37", "date": "February 19th, 2021", "date_alt": "19.02.2021", "year": "2021", "date_raw": "2021-02-19", "slug": "built-a-new-static-site-generator-using-python-37", "category": "Refactoring", "categories": [{"title": "Refactoring", "link": "/category/refactoring/"}], "summary": "Thought of giving it some new upgrades and finally decided to open-source it.", "reading_time": "2 minutes read", "preview_image_url": "", "filename": "content/writings/60_2021_02_19_built-a-new-static-site-generator-using-python-37.md", "status": "active", "content": "<p>Since <a href=\"/writings/posts/build-your-own-static-site-generator-using-python/\">2019</a>, I always used a custom static site generator for the website. The previous one was written in Python 2.7 but ever since Python decided to <a href=\"https://www.python.org/doc/sunset-python-2/\">sunset</a> it, I decided to rewrite it using Python 3.7.</p>\n\n<p>Unlike the previous one, it's quite flexible and I thought of giving it some new features that would help me maintain it with ease.</p>\n\n<p>The new features I have added are:</p>\n\n<ul>\n<li>A neat CLI to build the entire site or certain parts of the website</li>\n<li>Able to switch between different templates </li>\n<li>Archive mode</li>\n<li>Pagination</li>\n<li>Generates RSS Feeds and JSON files</li>\n</ul>\n\n<h2>Why rewrite it again?</h2>\n\n<p>Over the past few months, I didn't really maintain my blog and when I visited the old codebase, I realized it wasn't flexible and it didn't have many features and it was slow, too.</p>\n\n<p>Recently, I got new ideas of building different sections for the website and thus, is why I had the motivation to rewrite everything and make it modular and flexible enough to build a powerful yet simple custom static site generator.</p>\n\n<h2>Have a look</h2>\n\n<p>I have decided to open-source my static site generator on my <a href=\"https://www.github.com/megacolorboy/megacolorboy-ssg\">GitHub repository</a> and I'm having plans of writing a new documentation for it, so that if people are interested, they could contribute or use it for their own personal uses.</p>\n\n<h2>Conclusion</h2>\n\n<p>If you've been following my blog posts, you may know that I have a knack of displaying JavaScript widgets on some of my previous blog posts. Well, I've decided to rewrite all of those widgets, one-by-one, using ReactJS and hopefully, write more tutorials for each of them.</p>\n\n<p>Hope you liked reading this article.</p>\n", "index": 60}, {"section": "til", "title": "Resolve the \"General error: 1835 Malformed communication packet\" error", "link": "til/posts/resolve-the-general-error-1835-malformed-communication-packet-error", "date": "November 7th, 2020", "date_alt": "07.11.2020", "year": "2020", "date_raw": "2020-11-07", "slug": "resolve-the-general-error-1835-malformed-communication-packet-error", "category": "PHP", "categories": [{"title": "PHP", "link": "/category/php/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/74_2020_11_07_resolve-the-general-error-1835-malformed-communication-packet-error.md", "status": "active", "content": "<p>This happened like two days ago, when one of the client sites went down. Upon inspecting the error logs, I found this:</p>\n\n<pre><code>SQLSTATE[HY000]: General error: 1835 Malformed communication packet\n</code></pre>\n\n<p>If you got the same error as the one above, don't worry, it's not your fault. According to this <a href=\"https://jira.mariadb.org/browse/MDEV-24121\">forum</a>, <strong>a recent MariaDB update introduced a new bug for PHP versions &lt; 7.3</strong> that uses PDO and MySQL connectors. You can easily resolve this by simply upgrading it to PHP 7.3.</p>\n\n<p>Hope this tip helps you out!</p>\n", "index": 74}, {"section": "til", "title": "Find and remove duplicate lines using Regular Expressions", "link": "til/posts/find-and-remove-duplicate-lines-using-regular-expressions", "date": "November 7th, 2020", "date_alt": "07.11.2020", "year": "2020", "date_raw": "2020-11-07", "slug": "find-and-remove-duplicate-lines-using-regular-expressions", "category": "Regular Expressions", "categories": [{"title": "Regular Expressions", "link": "/category/regular-expressions/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/72_2020_11_07_find-and-remove-duplicate-lines-using-regular-expressions.md", "status": "active", "content": "<p>Open up your text editor and use the following RegEx pattern to find and remove the duplicate lines:</p>\n\n<pre><code>^(.*)(\\r?\\n\\1)+$\n</code></pre>\n\n<p>I found this technique on <a href=\"http://www.regular-expressions.info/duplicatelines.html\">Regular-Expressions.info</a> and I'm going to quote their explanation over here:</p>\n\n<pre><code>The caret will match only at the start of a line. So the regex engine will only attempt to match the remainder of the regex there. The dot and star combination simply matches an entire line, whatever its contents, if any. The parentheses store the matched line into the first backreference.\n\nNext we will match the line separator. I put the question mark into `\\r?\\n` to make this regex work with both Windows `(\\r\\n)` and UNIX `(\\n)` text files. So up to this point we matched a line and the following line break.\n\nNow we need to check if this combination is followed by a duplicate of that same line. We do this simply with `\\1`. This is the first backreference which holds the line we matched. The backreference will match that very same text.\n\nIf the backreference fails to match, the regex match and the backreference are discarded, and the regex engine tries again at the start of the next line. If the backreference succeeds, the plus symbol in the regular expression will try to match additional copies of the line. Finally, the dollar symbol forces the regex engine to check if the text matched by the backreference is a complete line. We already know the text matched by the backreference is preceded by a line break (matched by `\\r?\\n`).\n\nTherefore, we now check if it is also followed by a line break or if it is at the end of the file using the dollar sign.\n\nThe entire match becomes `line\\nline` (or `line\\nline\\nline` etc.). Because we are doing a search and replace, the line, its duplicates, and the line breaks in between them, are all deleted from the file. Since we want to keep the original line, but not the duplicates, we use `\\1` as the replacement text to put the original line back in.\n</code></pre>\n\n<p>Hope you found this tip useful!</p>\n", "index": 72}, {"section": "til", "title": "Use node-sass to minify your CSS", "link": "til/posts/use-nodesass-to-minify-your-css", "date": "November 7th, 2020", "date_alt": "07.11.2020", "year": "2020", "date_raw": "2020-11-07", "slug": "use-nodesass-to-minify-your-css", "category": "CSS+SCSS", "categories": [{"title": "CSS", "link": "/category/css/"}, {"title": "SCSS", "link": "/category/scss/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/75_2020_11_07_use-nodesass-to-minify-your-css.md", "status": "active", "content": "<p>If you want to turn your <code>.scss</code> files to minified <code>.css</code> files but without using Webpack or Gulp, just install the <code>node-sass</code> package using <code>npm</code> package manager and then run this on your terminal:</p>\n\n<pre><code>sass scss/style.scss css/style.css --style compressed\n</code></pre>\n\n<p>And now, you can use your <code>style.css</code> file on production! &#x1F606;</p>\n\n<p>Hope you found this tip useful!</p>\n", "index": 75}, {"section": "til", "title": "Create aliased class constants in Laravel", "link": "til/posts/create-aliased-class-constants-in-laravel", "date": "November 7th, 2020", "date_alt": "07.11.2020", "year": "2020", "date_raw": "2020-11-07", "slug": "create-aliased-class-constants-in-laravel", "category": "Laravel", "categories": [{"title": "Laravel", "link": "/category/laravel/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/73_2020_11_07_create-aliased-class-constants-in-laravel.md", "status": "active", "content": "<p>There are many ways to define constants in Laravel but I learnt a neat technique where you can define constants using an alias.</p>\n\n<p>First off, create the following directory:</p>\n\n<pre><code>mkdir app/Constants\n</code></pre>\n\n<p>Next, create a file named <code>MyConstants.php</code> in the <code>app/Constants</code> directory and copy-paste the following code:</p>\n\n<pre><code>&lt;?php\nnamespace App\\Constants;\n\nclass MyConstants {\n    const HELLO = 'hello';\n}\n?&gt;\n</code></pre>\n\n<p>Then, go to the <code>config/app.php</code> file and define your new alias:</p>\n\n<pre><code>&lt;?php\n'aliases' =&gt; [\n    // previously defined aliases...\n    'MyConstants' =&gt; App\\Constants\\MyConstants::class,\n]\n?&gt;\n</code></pre>\n\n<p>Lastly, execute the following commands to update your app's configuration:</p>\n\n<pre><code>php artisan config:clear\ncomposer dump-autoload\nphp artisan config:cache\n</code></pre>\n\n<p>After that, you can use your new constants anywhere (Controllers, Models or Blades) like this:</p>\n\n<pre><code>&lt;?php\necho MyConstants::HELLO;\n?&gt;\n</code></pre>\n\n<p>Learning this new technique helps me keep the code clean and makes it easier to trace the constants.</p>\n\n<p>Hope you find this tip useful!</p>\n", "index": 73}, {"section": "til", "title": "Rename a Git Branch", "link": "til/posts/rename-a-git-branch", "date": "November 4th, 2020", "date_alt": "04.11.2020", "year": "2020", "date_raw": "2020-11-04", "slug": "rename-a-git-branch", "category": "Git", "categories": [{"title": "Git", "link": "/category/git/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/71_2020_11_04_rename-a-git-branch.md", "status": "active", "content": "<p>Using branches are one of the most powerful features of Git and becomes a part of the software development process.</p>\n\n<p>Last night, I came across an issue where I created a new branch and committed my changes until the <code>git</code> tool rejected it because the branch was already created by someone else in the repository.</p>\n\n<p>Luckily, I was able to resolve this issue by renaming my branch using <code>git branch -m</code> command.</p>\n\n<p>Here's a short guide on how you can do that too!</p>\n\n<h2>1. Switch to the remote branch you want to rename</h2>\n\n<pre><code>git checkout &amp;lt;your_old_branch&amp;gt;\n</code></pre>\n\n<h2>2. Rename the current remote branch</h2>\n\n<pre><code>git branch -m &amp;lt;your_new_branch&amp;gt;\n</code></pre>\n\n<p>Proceed to the next step, if you've pushed your old branch to the remote repository.</p>\n\n<h2>3. Push the renamed remote branch</h2>\n\n<pre><code>git push origin -u &amp;lt;your_new_branch&amp;gt;\n</code></pre>\n\n<h2>4. Delete the old remote branch</h2>\n\n<pre><code>git push origin --delete &amp;lt;your_old_branch&amp;gt;\n</code></pre>\n\n<p>If you've come this far without any issues, you've successfully renamed your local and remote Git branch.</p>\n\n<p>Hope you found this useful!</p>\n", "index": 71}, {"section": "til", "title": "Import and Export MySQL database via Terminal", "link": "til/posts/import-and-export-mysql-database-via-terminal", "date": "November 4th, 2020", "date_alt": "04.11.2020", "year": "2020", "date_raw": "2020-11-04", "slug": "import-and-export-mysql-database-via-terminal", "category": "MySQL", "categories": [{"title": "MySQL", "link": "/category/mysql/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/69_2020_11_04_import-and-export-mysql-database-via-terminal.md", "status": "active", "content": "<p>Sometimes, phpMyAdmin can be painful to use especially when you want to import/export a MySQL database.</p>\n\n<p>If you're not afraid of using the Terminal, try these commands to save your time:</p>\n\n<h2>Import MySQL database</h2>\n\n<pre><code>mysql -u username -p database_name &lt; your_sql_file.sql\n</code></pre>\n\n<p>Before you run this command, please make sure that you've created the <code>database_name</code> schema in your database or else, you might get an error especially if the <code>.sql</code> file doesn't have a <code>CREATE DATABASE</code> statement.</p>\n\n<h2>Export MySQL database</h2>\n\n<pre><code>mysqldump -u username -p database_name &gt; your_sql_file.sql\n</code></pre>\n\n<p>This command will export your database with the file name <code>your_sql_file.sql</code> to your current path.</p>\n\n<p>Hope this helps you out!</p>\n", "index": 69}, {"section": "til", "title": "Concatenate multiple rows into one field", "link": "til/posts/concatenate-multiple-rows-into-one-field", "date": "November 4th, 2020", "date_alt": "04.11.2020", "year": "2020", "date_raw": "2020-11-04", "slug": "concatenate-multiple-rows-into-one-field", "category": "MySQL", "categories": [{"title": "MySQL", "link": "/category/mysql/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/70_2020_11_04_concatenate-multiple-rows-into-one-field.md", "status": "active", "content": "<p>Say, you have a table named <code>hobbies</code> and wanted to display a list of hobbies based on <code>user_id</code>, you'd probably do something like this:</p>\n\n<pre><code>SELECT title FROM hobbies WHERE user_id = 8;\n</code></pre>\n\n<p>This would return a list of hobbies like this:</p>\n\n<pre><code>Boxing\nCoding\nReading\nFishing\n</code></pre>\n\n<p>That's simple but what if you wanted to display them in one row? Like this:</p>\n\n<pre><code>Boxing, Coding, Reading, Fishing\n</code></pre>\n\n<p>You can make use of the <code>GROUP_CONCAT</code> method to achieve the same result by executing the following SQL query:</p>\n\n<pre><code>SELECT GROUP_CONCAT(title, SEPARATOR ', ') FROM hobbies WHERE user_id = 8;\n</code></pre>\n\n<p>Nice, what if you wanted to view a list of hobbies of all users? In most cases, a table like this might have a many-to-many relationship, so in order to avoid possible duplicates, you can try this:</p>\n\n<pre><code>SELECT user_id, GROUP_CONCAT(title, SEPARATOR ', ') FROM hobbies\nGROUP BY user_id\n</code></pre>\n\n<p>Hope this tip helps you out!</p>\n", "index": 70}, {"section": "til", "title": "Find your Public IP address using the Terminal", "link": "til/posts/find-your-public-ip-address-using-the-terminal", "date": "November 3rd, 2020", "date_alt": "03.11.2020", "year": "2020", "date_raw": "2020-11-03", "slug": "find-your-public-ip-address-using-the-terminal", "category": "Linux", "categories": [{"title": "Linux", "link": "/category/linux/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/68_2020_11_03_find-your-public-ip-address-using-the-terminal.md", "status": "active", "content": "<p>Previously, I used to determine my Public IP address on Google Search by typing <strong><em>\"What is my IP?\"</em></strong> and I was good with it.</p>\n\n<p>Until, I thought of actually viewing it via the terminal itself. So, I wrote two lines of code in my <code>~/.bashrc</code> file:</p>\n\n<pre><code>export myip=\"$(dig +short myip.opendns.com @resolver1.opendns.com)\"\nalias myip=\"echo $myip\"\n</code></pre>\n\n<p>Alternatively, you could try this too:</p>\n\n<pre><code>export myip=\"$(dig TXT +short o-o.myaddr.l.google.com @ns1.google.com)\"\n</code></pre>\n\n<p>Save the file and apply your new configuration by typing the following command:</p>\n\n<pre><code>source ~/.bashrc\n</code></pre>\n\n<p>That's it, now all you have to do is type <code>myip</code> in your terminal and it will display your Public IP address.</p>\n\n<p>Hope you found this useful! &#x1F600;</p>\n", "index": 68}, {"section": "til", "title": "Fix screen tearing in XFCE desktop environment", "link": "til/posts/fix-screen-tearing-in-xfce-desktop-environment", "date": "November 2nd, 2020", "date_alt": "02.11.2020", "year": "2020", "date_raw": "2020-11-02", "slug": "fix-screen-tearing-in-xfce-desktop-environment", "category": "XFCE+Linux", "categories": [{"title": "XFCE", "link": "/category/xfce/"}, {"title": "Linux", "link": "/category/linux/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/67_2020_11_02_fix-screen-tearing-in-xfce-desktop-environment.md", "status": "active", "content": "<p>Yesterday, I decided to try XFCE desktop environment and boy, it's really faster than the GNOME desktop environment.</p>\n\n<p>As soon as I started to play around with it, I noticed a good amount of <a href=\"https://en.wikipedia.org/wiki/Screen_tearing\">screen tearing</a> and to my surprise, I came to know that the XFCE environment is known to have such issues.</p>\n\n<p>After a few minutes of research, I was able to fix it. Here are the steps:</p>\n\n<p><strong>Note: This is done on Ubuntu 18.04 Bionic Beaver</strong></p>\n\n<p>If you dont have the package <code>inxi</code> installed in your system, do it right now:</p>\n\n<pre><code>sudo apt install inxi\n</code></pre>\n\n<p>After you're done installing, type the following command to find out which graphics you're using:</p>\n\n<pre><code>inxi -G\n</code></pre>\n\n<p>If you're using an Intel Graphics Driver, you'll probably get something like this:</p>\n\n<pre><code>Graphics:  Card: Intel Device 5926\n           Display Server: x11 (X.Org 1.19.6 ) driver: i915 Resolution: 1920x1080@60.00hz\n           OpenGL: renderer: Mesa DRI Intel Iris Plus Graphics 640 (Kaby Lake GT3e) (KBL GT3)\n           version: 4.6 Mesa 20.0.8\n</code></pre>\n\n<p>You can try go to <strong>Settings Manager->Window Manager Tweaks->Compositor\" and enable **Synchronize drawing to the vertical blank</strong>. From <a href=\"https://techstop.github.io/fix-screen-tearing-xfce/\">what I've read</a>, if you do that, it should stop but it didn't do anything for me.</p>\n\n<p>If the above technique didn't work, go to <code>/usr/shar/X11/xorg.conf.d/</code> and create a file for your graphics card named <code>10-intel.conf</code>.</p>\n\n<p>Copy-paste the following configuration into the file:</p>\n\n<pre><code>Section \"Device\"\n  Identifier  \"Intel Graphics\"\n  Driver      \"intel\"\n  Option \"TearFree\" \"true\"\nEndSection\n</code></pre>\n\n<p>Save the file, reboot your system and look for any screen tearing issues. If you didn't face any, that means it worked! &#x1F601;</p>\n", "index": 67}, {"section": "til", "title": "Clear a file directory using Filesystem in Laravel", "link": "til/posts/clear-a-file-directory-using-filesystem-in-laravel", "date": "September 28th, 2020", "date_alt": "28.09.2020", "year": "2020", "date_raw": "2020-09-28", "slug": "clear-a-file-directory-using-filesystem-in-laravel", "category": "Laravel", "categories": [{"title": "Laravel", "link": "/category/laravel/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/64_2020_09_28_clear-a-file-directory-using-filesystem-in-laravel.md", "status": "active", "content": "<p>I was working on a project that dealt with generating large .zip exports and as a result, the <code>storage/exports</code> directory, which was used to store all the .zip exports, ended up going all the way up to a whopping size of 10 gigabytes! &#x1F62E;</p>\n\n<p>I resolved it by calling the <code>Filesystem</code> package in my controller:</p>\n\n<pre><code>&lt;?php\nuse Illuminate\\Filesystem\\Filesystem;\n?&gt;\n</code></pre>\n\n<p>Then simply, create a new instance and define the directory you wanted to clear:</p>\n\n<pre><code>&lt;?php\n$folder = new Filesystem;\n$folder-&gt;cleanDirectory('storage/exports');\n?&gt;\n</code></pre>\n\n<p>Hope this helps you out!</p>\n", "index": 64}, {"section": "til", "title": "How to move a running process to the background?", "link": "til/posts/how-to-move-a-running-process-to-the-background", "date": "September 28th, 2020", "date_alt": "28.09.2020", "year": "2020", "date_raw": "2020-09-28", "slug": "how-to-move-a-running-process-to-the-background", "category": "UNIX", "categories": [{"title": "UNIX", "link": "/category/unix/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/63_2020_09_28_how-to-move-a-running-process-to-the-background.md", "status": "active", "content": "<p>Pause the current process using <code>Ctrl + Z</code>, which will send it to the background and then type <code>bg</code> to allow the process to run in the background.</p>\n\n<p>Alternatively, you can add a <code>&amp;</code> after the desired process you wanted to execute and it'll automatically execute it as a background process.</p>\n\n<p>Hope this helps you out!</p>\n", "index": 63}, {"section": "til", "title": "Get pagination data by page number", "link": "til/posts/get-pagination-data-by-page-number", "date": "September 28th, 2020", "date_alt": "28.09.2020", "year": "2020", "date_raw": "2020-09-28", "slug": "get-pagination-data-by-page-number", "category": "Laravel", "categories": [{"title": "Laravel", "link": "/category/laravel/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/65_2020_09_28_get-pagination-data-by-page-number.md", "status": "active", "content": "<p>By default, Laravel's paginator checks the value of the page based on the query string and uses that to display the results and also, it generates links to previous and next pages as well.</p>\n\n<p>The <code>paginate()</code> method takes the following parameters by default:</p>\n\n<pre><code>&lt;?php\npublic function paginate($perPage = null, $columns = ['*'], $pageName = 'page', $page = null);\n?&gt;\n</code></pre>\n\n<p>So, if you want to fetch the pagination data of a specific page, then just write this:</p>\n\n<pre><code>&lt;?php\n$pageNumber = 5;\n$data = ExampleModel::paginate(5, ['*'], 'page', $pageNumber);\n?&gt;\n</code></pre>\n\n<p>Hope you found this article useful!</p>\n", "index": 65}, {"section": "til", "title": "Resolve cURL error 60: SSL certificate problem on localhost", "link": "til/posts/resolve-curl-error-60-ssl-certificate-problem-on-localhost", "date": "September 28th, 2020", "date_alt": "28.09.2020", "year": "2020", "date_raw": "2020-09-28", "slug": "resolve-curl-error-60-ssl-certificate-problem-on-localhost", "category": "Laravel", "categories": [{"title": "Laravel", "link": "/category/laravel/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/66_2020_09_28_resolve-curl-error-60-ssl-certificate-problem-on-localhost.md", "status": "active", "content": "<p>You'll get this error when you're hosting a Laravel project with using HTTPS/SSL protocol on <code>localhost</code> or <code>127.0.0.1</code>:</p>\n\n<pre><code>cURL error 60: SSL certificate problem: unable to get local issuer certificate (see https://curl.haxx.se/libcurl/c/libcurl-errors.html)\n</code></pre>\n\n<p>I read some article on trying to install <code>cacert.pem</code> authorization certificate on your WAMP/XAMPP setup but it didn't really work out for me as I was running out of time.</p>\n\n<p>So, I did a little digging and learnt that I can just modify the <code>verify</code> flag to <code>false</code> in the <code>vendor/guzzlehttp/guzzle/src/Client.php</code> file:</p>\n\n<pre><code>&lt;?php\n$defaults = [\n    'allow_redirects' =&gt; RedirectMiddleware::$defaultSettings,\n    'http_errors'     =&gt; true,\n    'decode_content'  =&gt; true,\n    'verify'          =&gt; false, // changed it to false\n    'cookies'         =&gt; false\n];\n?&gt;\n</code></pre>\n\n<p>By changing to it <code>false</code>, you'll not face that error again but please keep in mind, you should do this only if you're developing on localhost.</p>\n\n<p>Happy coding!</p>\n", "index": 66}, {"section": "til", "title": "How to resolve the \"No application encryption key has been specified\" error", "link": "til/posts/how-to-resolve-the-no-application-encryption-key-has-been-specified-error", "date": "September 19th, 2020", "date_alt": "19.09.2020", "year": "2020", "date_raw": "2020-09-19", "slug": "how-to-resolve-the-no-application-encryption-key-has-been-specified-error", "category": "Laravel", "categories": [{"title": "Laravel", "link": "/category/laravel/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/61_2020_09_19_how-to-resolve-the-no-application-encryption-key-has-been-specified-error.md", "status": "active", "content": "<p>Are you facing the same error as this article's title? Then this article might help you out.</p>\n\n<p>If you're developing applications using HTTP/SSL Protocols (regardless, you should!) on Laravel, by default, you'll be using Laravel's encrypter but in it's <a href=\"https://laravel.com/docs/7.x/encryption#configuration\">official documentation</a>, it says:</p>\n\n<blockquote>\n  <p>Before using Laravel's encrypter, you must set a <code>key</code> option in your <code>config/app.php</code> configuration file. You should use the <code>php artisan key:generate</code> command to generate this key since this Artisan command will use PHP's secure random bytes generator to build your key. If this value is not properly set, all values encrypted by Laravel will be insecure.</p>\n</blockquote>\n\n<p>Just execute the following command in your root directory:</p>\n\n<pre><code>php artisan key:generate\n</code></pre>\n\n<p>If the error still persists, try clearing the cache by doing the following:</p>\n\n<pre><code>php artisan config:cache\nphp artisan cache:clear\nphp artisan config:clear\n</code></pre>\n\n<p>Hope you found this article useful!</p>\n", "index": 61}, {"section": "til", "title": "How to filter requests with errors on Chrome's DevTools", "link": "til/posts/how-to-filter-requests-with-errors-on-chromes-devtools", "date": "September 19th, 2020", "date_alt": "19.09.2020", "year": "2020", "date_raw": "2020-09-19", "slug": "how-to-filter-requests-with-errors-on-chromes-devtools", "category": "Chrome DevTools", "categories": [{"title": "Chrome DevTools", "link": "/category/chrome-devtools/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/62_2020_09_19_how-to-filter-requests-with-errors-on-chromes-devtools.md", "status": "active", "content": "<p>Tired of trying to look for errors in DevTools by scrolling a long list of HTTP responses?</p>\n\n<p>Open up your <strong>Chrome DevTools</strong> and hit the <strong>Network</strong> tab and then try filtering the responses by typing the <code>status-code</code> property in the filter box.</p>\n\n<p>It comes in handy when you want to narrow down to a specific list of HTTP responses. For instance, if you're looking for responses with error 404, you can filter it by typing like this: <code>status-code:404</code>.</p>\n\n<p>Another trick is, you can filter out the responses that you don't want to see by just adding a hyphen like this: <code>-status-code:200</code>.</p>\n\n<p>Hope this tip helps you out!</p>\n", "index": 62}, {"section": "til", "title": "Enable HTTPS/SSL on WAMP Server", "link": "til/posts/enable-httpsssl-on-wamp-server", "date": "September 13th, 2020", "date_alt": "13.09.2020", "year": "2020", "date_raw": "2020-09-13", "slug": "enable-httpsssl-on-wamp-server", "category": "Apache + WAMP", "categories": [{"title": "Apache", "link": "/category/apache/"}, {"title": "WAMP", "link": "/category/wamp/"}], "summary": "", "reading_time": "2 minutes read", "preview_image_url": "", "filename": "content/til/60_2020_09_13_enable-httpsssl-on-wamp-server.md", "status": "active", "content": "<p>Building a website with HTTPS/SSL in mind can help resolve a lot of problems when you're going to deploy it on production server.</p>\n\n<p>So, here's a small tutorial on how to enable HTTPS mode and install SSL certificate on your local WAMP Server.</p>\n\n<p><strong>Note: This tutorial assumes that you have a Windows PC and have installed WAMP Server 3.2.0 in your local system, if not, <a href=\"https://www.wampserver.com/en/\">download it from here</a>.</strong></p>\n\n<h2>Download OpenSSL</h2>\n\n<p>Based on your system's architecture, you can download either a 32 or 64-bit installer. You can find the latest version of OpenSSL from here. While installing, please make sure all the options selected are default.</p>\n\n<h2>Generate SSL Key and Certificate</h2>\n\n<p>Open your terminal or command-line prompt and navigate to the following folder:</p>\n\n<pre><code>cd \"C:\\Program Files\\OpenSSL-Win64\\bin\"\n</code></pre>\n\n<p>Next, you need to create a private key. While generating a private key, you'll have to enter a passphrase, it can be anything but make sure that you can remember it for the next step &#x1F602;.</p>\n\n<p>Execute the following command:</p>\n\n<pre><code>openssl genrsa -aes256 -out private.key 2048\n</code></pre>\n\n<p>Good, now let's generate our certificate and in this step, you'll be prompted with several questions. You can fill as per your wish or just hit \"Enter\" to leave it as default. The only thing that matters is <strong>Common Name</strong> and this should named as <code>localhost</code></p>\n\n<p>Execute the following command:</p>\n\n<pre><code>openssl req -new -x509 -nodes -sha1 -key private.key -out certificate.crt -days 36500\n</code></pre>\n\n<h2>Move the certificate and key to Apache's directory</h2>\n\n<p>Create a folder named <code>keys</code> and move both <code>private.key</code> and <code>certificate.crt</code> to this directory: <code>C:\\wamp64\\bin\\apache\\apache2.4.41\\conf</code>.</p>\n\n<h2>Modify your httpd.conf file</h2>\n\n<p>You have to uncomment 3 lines from <code>C:/wamp64/bin/apache/apache2.4.41/conf/httpd.conf</code>:</p>\n\n<pre><code>LoadModule ssl_module modules/mod_ssl.so\nInclude conf/extra/httpd-ssl.conf\nLoadModule socache_shmcb_module modules/mod_socache_shmcb.so\n</code></pre>\n\n<h2>Modify your httpd-ssl.conf file</h2>\n\n<p>Go to <code>C:/wamp64/bin/apache/apache2.4.41/conf/extra/httpd-ssl.conf</code> and modify the following parameters:</p>\n\n<pre><code>DocumentRoot \"c:/wamp64/www\"\nServerName localhost:443\nServerAdmin admin@youremail.com\nErrorLog \"${SRVROOT}/logs/error.log\"\nTransferLog \"${SRVROOT}/logs/access.log\"\nSSLSessionCache \"shmcb:${SRVROOT}/logs/ssl_scache(512000)\"\nSSLCertificateFile \"${SRVROOT}/conf/keys/certificate.crt\"\nSSLCertificateKeyFile \"${SRVROOT}/conf/keys/private.key\"\nCustomLog \"${SRVROOT}/logs/ssl_request.log\"\n</code></pre>\n\n<p><code>DocumentRoot</code> is the location of where your website files are located. <code>ServerName</code> can be anything but preferable to use <code>localhost</code>.</p>\n\n<h2>Restart your WAMP Server</h2>\n\n<p>Just restart your WAMP Server for the changes to take effect. If the WAMP icon turns green, you're good else, an typo or syntax error must have occurred.</p>\n\n<p>Hope you found this tutorial useful! &#x1F600;</p>\n", "index": 60}, {"section": "til", "title": "Accessing WAMP Server from other computers on LAN", "link": "til/posts/accessing-wamp-server-from-other-computers-on-lan", "date": "September 13th, 2020", "date_alt": "13.09.2020", "year": "2020", "date_raw": "2020-09-13", "slug": "accessing-wamp-server-from-other-computers-on-lan", "category": "Apache + WAMP", "categories": [{"title": "Apache", "link": "/category/apache/"}, {"title": "WAMP", "link": "/category/wamp/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/59_2020_09_13_accessing-wamp-server-from-other-computers-on-lan.md", "status": "active", "content": "<p>Whenever you develop a website using the <strong>LAMP</strong> or <strong>WAMP</strong> stack, you'll want to access the website, locally, via different systems and devices solely for testing purposes.</p>\n\n<h2>Modify your VirtualHosts configuration</h2>\n\n<p>Setting up your WAMP Server for LAN access only requires you to tweak your <strong>VirtualHosts</strong> configuration file found in <code>C:\\wamp64\\bin\\apache\\apache2.4.41\\conf\\extra\\httpd-vhost.conf</code></p>\n\n<pre><code>&lt;VirtualHost *:80&gt;\n  ServerName example.test\n  ServerAlias example.test\n  DocumentRoot \"c:/wamp64/www/yourprojectname\"\n  &lt;Directory \"c:/wamp64/www/yourprojectname/\"&gt;\n    Options +Indexes +Includes +FollowSymLinks +MultiViews\n    AllowOverride All\n    Require all granted\n  &lt;/Directory&gt;\n&lt;/VirtualHost&gt;\n</code></pre>\n\n<p>Oh, if you're using Linux, you'll find the file <code>000-default.conf</code> in <code>/etc/apache2/sites-available</code> directory.</p>\n\n<h2>Update your hosts file</h2>\n\n<p>If you type the URL of the website that you want to visit, the computer will first refer to the <code>hosts</code> file and then it'll go out to fetch DNS information. So, if you want <code>http:\\\\example.test</code> url to point to your local system, you just have add it in your <code>hosts</code> file:</p>\n\n<p>Open the hosts file(<code>C:\\Windows\\System32\\drivers\\etc\\hosts</code>) using a text editor and add this line to your <code>hosts</code> file:</p>\n\n<pre><code>127.0.0.1   example.test\n</code></pre>\n\n<p>Once done, save the file and restart your WAMP Server and you're all set to go!</p>\n\n<p>Hope you found this tip useful!</p>\n", "index": 59}, {"section": "til", "title": "Prevent loading a webpage from Back-Forward cache", "link": "til/posts/prevent-loading-webpage-from-backforward-cache", "date": "August 30th, 2020", "date_alt": "30.08.2020", "year": "2020", "date_raw": "2020-08-30", "slug": "prevent-loading-webpage-from-backforward-cache", "category": "JavaScript", "categories": [{"title": "JavaScript", "link": "/category/javascript/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/58_2020_08_30_prevent-loading-webpage-from-backforward-cache.md", "status": "active", "content": "<p>I'm working on an eCommerce project and I encountered a really weird problem, whenever I saved items into my cart and proceed to the checkout page and then go back to previous page, my cart isn't updated until I refresh the page.</p>\n\n<p>Honestly, I thought this was a bug until I came around to learn about <a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/1.5/Using_Firefox_1.5_caching\">Back-Forward Caching</a> a.k.a <strong>bfcache</strong>, which allows the user to navigate between pages faster. That's a good thing, though!</p>\n\n<p>But that didn't help resolve my issue, so I thought of going around with a tiny hack:</p>\n\n<pre><code>window.onpageshow = function(event) {\n    if (event.persisted) {\n        window.location.reload() \n    }\n};\n</code></pre>\n\n<p>The code above will look any persistence of the <code>onpageshow</code> event. Initially, it's set to <code>false</code> and if the page is loaded from <strong>bfcache</strong>, it'll set to <code>true</code>.</p>\n\n<p>I wouldn't really consider this as a solution as it only worked on Safari instead of Chrome or Firefox.</p>\n\n<p>But hey, it gets the job done! &#x1F602;</p>\n", "index": 58}, {"section": "til", "title": "Refresh browser window without query parameters", "link": "til/posts/refresh-browser-window-without-query-parameters", "date": "August 29th, 2020", "date_alt": "29.08.2020", "year": "2020", "date_raw": "2020-08-29", "slug": "refresh-browser-window-without-query-parameters", "category": "JavaScript", "categories": [{"title": "JavaScript", "link": "/category/javascript/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/57_2020_08_29_refresh-browser-window-without-query-parameters.md", "status": "active", "content": "<p>If you want to reload the current page in your browser without any query string or parameters, here's how you can do it:</p>\n\n<pre><code>window.location = window.location.pathname;\n</code></pre>\n\n<p>By doing so, it'll preserve the HTTP/HTTPS protocols of the URL and also remove the fragments that start with a <code>#</code>.</p>\n\n<p>If you want to preserve the fragments, you can try this:</p>\n\n<pre><code>var reloadURL = window.location.pathname;\nvar fragments = (window.location.part === undefined) ? \"\" : \"#\" + window.location.part;\nwindow.location = reloadURL + fragments;\n</code></pre>\n\n<p>Hope you found this useful!</p>\n", "index": 57}, {"section": "til", "title": "Input sanitization with PHP", "link": "til/posts/input-sanitization-with-php", "date": "August 23rd, 2020", "date_alt": "23.08.2020", "year": "2020", "date_raw": "2020-08-23", "slug": "input-sanitization-with-php", "category": "PHP", "categories": [{"title": "PHP", "link": "/category/php/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/53_2020_08_23_sanitizing-user-input-with-php.md", "status": "active", "content": "<p>This can come in handy when you're dealing with user inputs during a form submission and in most cases, your web application will be using a database query to store the data. </p>\n\n<h2>Using filter_var()</h2>\n\n<p>This method uses a number of flags to validate and sanitize a string. Here are some examples I have tried:</p>\n\n<h3>Removing special characters</h3>\n\n<p>Want to strip out all tags and certain characters? Try this:</p>\n\n<pre><code>&amp;lt;?php\n$str = \"&amp;lt;h1&amp;gt;Hello World&amp;lt;/h1&amp;gt;\";\n$filtered = filter_var($str, FILTER_SANITIZE_STRING);\necho $filtered;\n?&amp;gt;\n</code></pre>\n\n<h3>Integer validation</h3>\n\n<p>You can check if the input is an integer and if it's a value between 1 and 20:</p>\n\n<pre><code>&amp;lt;?php\n$x = 10;\n$min = 1;\n$max = 20;\n$options = [\n    \"min_range\" =&gt; $min,\n    \"max_range\" =&gt; $max\n];\n\nif(!filter_var($x, FILTER_VALIDATE_INT, $options)){\n    echo \"This input is invalid.\";\n}\nelse {\n    echo \"This input is valid.\";\n}\n?&amp;gt;\n</code></pre>\n\n<h3>URL validation</h3>\n\n<p>Want to check if the input is a valid URL? Try this out:</p>\n\n<pre><code>&amp;lt;?php\n// Make sure the URL is sanitized\n$url = filter_var(\"https://www.google.com\", FILTER_SANITIZE_URL);\nif(filter_var($url, FILTER_VALIDATE_URL)){\n    echo \"This URL is valid.\";\n}\nelse {\n    echo \"This URL is invalid.\";\n}\n?&amp;gt;\n</code></pre>\n\n<p>Using these in-built features makes it easier for PHP developers to process data from external sources in a safer manner and also adds an extra layer of protection to your web application.</p>\n\n<p>Read more about this method in <a href=\"https://www.php.net/manual/en/function.filter-var.php\">PHP's official documentation</a>.</p>\n", "index": 53}, {"section": "til", "title": "Extract unique characters from a string", "link": "til/posts/extract-unique-characters-from-a-string", "date": "August 23rd, 2020", "date_alt": "23.08.2020", "year": "2020", "date_raw": "2020-08-23", "slug": "extract-unique-characters-from-a-string", "category": "Python", "categories": [{"title": "Python", "link": "/category/python/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/56_2020_08_23_extract-unique-characters-from-a-string.md", "status": "active", "content": "<p>I thought of getting back into competitive programming again and \nstarted practicing my python coding-chops on <a href=\"https://www.codewars.com\">Codewars</a>.</p>\n\n<p>Here's a neat trick on how to extract unique characters from a string:</p>\n\n<pre><code>from collections import OrderedDict\n\nword = \"HelloWorld\"\nuniq = ''.join(OrderedDict.fromkeys(word).keys())\n\nprint(uniq) # prints HeloWrd\n</code></pre>\n\n<p>Using <code>OrderedDict</code> allows you to preserve the order in which the keys are inserted as a normal <code>dict</code> doesn't track the order.</p>\n\n<p>Hope you found this useful!</p>\n", "index": 56}, {"section": "til", "title": "Increase execution time in PHP", "link": "til/posts/increase-execution-time-in-php", "date": "August 23rd, 2020", "date_alt": "23.08.2020", "year": "2020", "date_raw": "2020-08-23", "slug": "increase-execution-time-in-php", "category": "PHP", "categories": [{"title": "PHP", "link": "/category/php/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/55_2020_08_23_increase-execution-time-in-php.md", "status": "active", "content": "<p>Ever process a file that's larger than 2GB and got an error that said something like this:</p>\n\n<pre><code>Maximum execution time of 30 seconds exceeded\n</code></pre>\n\n<p>Though, PHP doesn't have an efficient way of processing files of large sizes, you can prevent your web application from timing out by adding this to your code:</p>\n\n<pre><code>&lt;?php\n// 300 seconds == 5 minutes\nini_set('max_execution_time', 300);\n?&gt;\n</code></pre>\n\n<p>Hopefully, some day, this might come in handy for you! &#128540;</p>\n", "index": 55}, {"section": "til", "title": "Increase memory limit in PHP", "link": "til/posts/increase-memory-limit-in-php", "date": "August 23rd, 2020", "date_alt": "23.08.2020", "year": "2020", "date_raw": "2020-08-23", "slug": "increase-memory-limit-in-php", "category": "PHP", "categories": [{"title": "PHP", "link": "/category/php/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/54_2020_08_23_increase-memory-limit-in-php.md", "status": "active", "content": "<p>Last month, I was building a web application that collected a lot of data via form submissions. I wrote a method to export attachments and form data by zipping them all together. </p>\n\n<p>It worked for a smaller archives but as the records grew larger, I got a fatal error which said that I've exhausted the PHP's memory limit.</p>\n\n<p>So, I found an easy way to increase the memory limit to 1024MB (1GB) like this:</p>\n\n<pre><code>&amp;lt;?php\nini_set('memory_limit', '1024M');\n?&amp;gt;\n</code></pre>\n\n<p>Before you write this stub in your script, make sure you have enough resources in your system or else, it'll go splat!</p>\n", "index": 54}, {"section": "writings", "title": "Do we really need to use pointers?", "link": "writings/posts/do-we-really-need-to-use-pointers", "date": "August 21st, 2020", "date_alt": "21.08.2020", "year": "2020", "date_raw": "2020-08-21", "slug": "do-we-really-need-to-use-pointers", "category": "Programming", "categories": [{"title": "Programming", "link": "/category/programming/"}], "summary": "Did a little digging on whether it's useful to make use of pointers in your application", "reading_time": "3 minutes read", "preview_image_url": "", "filename": "content/writings/59_2020_08_21_do-we-really-need-to-use-pointers.md", "status": "active", "content": "<p>The topic about pointers isn't new as you're probably introduced to this concept in your first computer science class. I started learning Go and once again, I came across the concept of using Pointers and wanted to finally understand, why are they used and do we really need to use it?</p>\n\n<p>Frankly, I don't really remember using pointers when I was developing web applications in PHP and JavaScript but it was quite a refresher to get back on track again.</p>\n\n<h2>Well, what is a pointer?</h2>\n\n<p>In it's basic form, a pointer is a variable that contains the memory address of another variable.</p>\n\n<p>For example, you have a variable named <mark>x</mark> that contains some data, in this case, we'll store an integer:</p>\n\n<pre><code>package main\n\nimport \"fmt\"\n\nfunc main() {\n    x := 10\n    fmt.Println(x) // prints 10\n}\n</code></pre>\n\n<p>The code above prints the variable <mark>x</mark> by referring to it's name. We can do the same using pointers by referring to it's memory address via another variable that points to variable <mark>x</mark>.</p>\n\n<p>To do this, we must use <mark>&amp;</mark> operator to get the address and <code>*</code> to return the value stored in the address of variable <mark>x</mark> like this:</p>\n\n<pre><code>package main\n\nimport \"fmt\"\n\nfunc main() {\n    x := 10\n    p := &amp;x\n    fmt.Println(x)   // prints 10\n    fmt.Println(*p)  // also, prints 10\n}\n</code></pre>\n\n<p>Hmm, that was pretty straight forward.</p>\n\n<h2>So, why was it created?</h2>\n\n<p>In the modern era, most high-level programming languages are capable of handling memory allocation (like <strong>Java</strong> or <strong>C#</strong>), automatically.</p>\n\n<p>But when <strong>C</strong> was developed, computers weren't as powerful as today but that also meant the programmers must create systems that made use of memory and speed, efficiently. Which is why some tasks do require it when programming low-level embedded systems or microcontrollers.</p>\n\n<h2>Why use them?</h2>\n\n<p>Whenever you pass a variable to a function, you're basically creating a copy of the variable. But if you're using pointers, you just have to pass the address of the variable and in most cases, a pointer is much smaller in size than the value being pointed at.</p>\n\n<p>It allows you share data and it's quite appropriate when it comes to modifying the data being passed to it.</p>\n\n<p>To some extent, it might seem efficient but there are some tradeoffs, when you're going to talk about optimization.</p>\n\n<h2>Do pointers really optimize your application?</h2>\n\n<p>I was thinking if pointers are used to optimize applications, I mean, you don't have to duplicate data and it saves memory, so why not?</p>\n\n<p>Turns out that there are a few points that I came across:</p>\n\n<ol>\n<li>Accessing values can use up memory though not so much but it can add up.</li>\n<li>Data will be placed on top of heap stack which increases the memory overhead and can be cleaned up the garbage collector.</li>\n</ol>\n\n<p>Most programmers tend to avoid using it in order to make their codebase less complex and reduce the increased work for the garbage collector.</p>\n\n<p>Apart from that, there are some concerns when it comes to the security of the application implying that it could be unsafe when using pointers.</p>\n\n<h2>Takeaway</h2>\n\n<p>Pointers are useful but don't think of using it, blindly, by assuming that it might give you a boost in performance.</p>\n\n<p>Hope you found this article useful!</p>\n\n<h2>Readings</h2>\n\n<ul>\n<li><a href=\"http://duramecho.com/ComputerInformation/WhyCPointers.html\">Why C has pointers?</a></li>\n<li><a href=\"https://www.quora.com/Why-dont-we-use-pointers-in-Java-but-we-use-them-in-C-and-C++\">Why do we use pointers in Java but we use them in C and C++</a></li>\n</ul>\n", "index": 59}, {"section": "til", "title": "Hello, Go!", "link": "til/posts/hello-go", "date": "August 1st, 2020", "date_alt": "01.08.2020", "year": "2020", "date_raw": "2020-08-01", "slug": "hello-go", "category": "Go", "categories": [{"title": "Go", "link": "/category/go/"}], "summary": "", "reading_time": "2 minutes read", "preview_image_url": "", "filename": "content/til/52_2020_08_01_hello-go.md", "status": "active", "content": "<p>After reading a lot of articles about using Go as a programming language to write high-performing concurrent web applications and services yet maintain a clean codebase, I thought of starting to learn it to see what's it about and so far, it's been great!</p>\n\n<p>This mini-tutorial will show you how to install Go on your system and write a simple \"Hello, World\" program.</p>\n\n<p><strong>Note: This tutorial will go through installing Go on Linux.</strong></p>\n\n<h2>Install Go</h2>\n\n<p>Make sure you have the latest updates and upgrades on your Linux system before installing Go.</p>\n\n<p>You need to download the binary file from their <a href=\"https://golang.org/dl/\">official package</a>. Find the version that suits your OS and architecture.</p>\n\n<pre><code>cd /tmp\nwget https://golang.org/dl/go1.14.6.linux-amd64.tar.gz\n</code></pre>\n\n<p>Extract the downloaded archive and install it in the <code>/usr/local</code> directory (as per the standards):</p>\n\n<pre><code>sudo tar -xvf go1.14.6.linux-amd64.tar.gz\nsudo mv go /usr/local\n</code></pre>\n\n<h2>Set up environment</h2>\n\n<p>Now, we need to set up three variables:</p>\n\n<ul>\n<li><code>GOROOT</code>: Location of where your Go package is installed.</li>\n<li><code>GOPATH</code>: Location of your work directory.'</li>\n<li><code>PATH</code>: Tells bash on where to look for programs that are being executed.</li>\n</ul>\n\n<p>Open up your <code>.bashrc</code> file and add these lines at the end of the file:</p>\n\n<pre><code>export GOROOT=/usr/local/go\nexport GOPATH=$HOME/go\nexport PATH=$GOPATH/bin:$GOROOT/bin:$PATH\n</code></pre>\n\n<p>Save your <code>.bashrc</code> file and update the current shell session:</p>\n\n<pre><code>source ~/.bashrc\n</code></pre>\n\n<h2>Verify your installation</h2>\n\n<p>Type the following command to ensure that your Go installation is successful:</p>\n\n<pre><code>go version go1.14.6 linux/amd64\n</code></pre>\n\n<h2>Hello, world!</h2>\n\n<p>As per traditions, whenever you learn a programming language, you start off with a \"Hello, world!\" program, so here it is:</p>\n\n<pre><code>package main\n\nimport \"fmt\"\n\nfunc main() {\n    fmt.Printf(\"Hello, world!\\n\")\n} \n</code></pre>\n\n<h2>Conclusion</h2>\n\n<p>I just started learning it today and at first, you might have the tendency to write code in Go the same way you write in any other language but beware, it doesn't work that way. It forces you to write good code including the way it formats the code using the <code>gofmt</code> tool.</p>\n\n<p>Lots of cool things are coming!</p>\n\n<p>Stay tuned for more.</p>\n", "index": 52}, {"section": "til", "title": "How to delete files inside a zip file?", "link": "til/posts/how-to-delete-files-inside-a-zip-file", "date": "July 21st, 2020", "date_alt": "21.07.2020", "year": "2020", "date_raw": "2020-07-21", "slug": "how-to-delete-files-inside-a-zip-file", "category": "Terminal", "categories": [{"title": "Terminal", "link": "/category/terminal/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/51_2020_07_21_how-to-delete-files-inside-a-zip-file.md", "status": "active", "content": "<p>Ever compressed your project directory but forgot to delete that useless file or folder and turns out the compresed file is larger than it's supposed to be? </p>\n\n<p>Here's a quick solution you can try:</p>\n\n<p>If you want to delete a file inside a <code>.zip</code> file, try this:</p>\n\n<pre><code>zip --delete file.zip \"file.ext\"\n</code></pre>\n\n<p>And if you want to delete a folder, try this:</p>\n\n<pre><code>zip --delete file.zip \"folder/*\"\n</code></pre>\n\n<p>Hope this helps you out!</p>\n", "index": 51}, {"section": "til", "title": "Find the difference between two arrays", "link": "til/posts/find-the-difference-between-two-arrays", "date": "July 18th, 2020", "date_alt": "18.07.2020", "year": "2020", "date_raw": "2020-07-18", "slug": "find-the-difference-between-two-arrays", "category": "JavaScript", "categories": [{"title": "JavaScript", "link": "/category/javascript/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/46_2020_07_18_find-the-difference-between-two-arrays.md", "status": "active", "content": "<p>Finding the difference between two sets i.e. Set A and Set B is basically returning a new set that contains values of Set A that don't exist in Set B or vice-versa.</p>\n\n<p>Here's an example:</p>\n\n<pre><code>var a = [1,2,3,4,5];\nvar b = [1,1,2,3,4];\n</code></pre>\n\n<p>I wrote a shorter implementation using JavaScript's <code>.filter()</code> method:</p>\n\n<pre><code>function array_diff(a,b){\n    return a.filter(i =&gt; b.indexOf(i) === -1);\n}    \n</code></pre>\n\n<p>Once you execute this method, you'll get the following as a result:</p>\n\n<pre><code>var c = array_diff(a,b);\nconsole.log(c) // returns [5]\n</code></pre>\n\n<h2>BONUS: What does the .filter() method do?</h2>\n\n<p>This method returns a new array with elements that pass the conditions provided by a callback function.</p>\n\n<p>If the conditions aren't passed, you'll receive an empty array.</p>\n\n<p>In this article, <code>(i =&gt; b.indexOf(i) === -1)</code> is considered as the callback function in which the <code>i</code> refers to the index of the current element of array A and is then used as a parameter to check if the element doesn't exist in array B.</p>\n\n<p>The neat thing about this method is that it doesn't mutate on the array that it's being called from.</p>\n\n<p>Read more about <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\">Array.prototype.filter()</a> on Mozilla's developer documentation.</p>\n", "index": 46}, {"section": "til", "title": "How to duplicate tables in MySQL?", "link": "til/posts/how-to-duplicate-tables-in-mysql", "date": "July 18th, 2020", "date_alt": "18.07.2020", "year": "2020", "date_raw": "2020-07-18", "slug": "how-to-duplicate-tables-in-mysql", "category": "MySQL", "categories": [{"title": "MySQL", "link": "/category/mysql/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/47_2020_07_18_how-to-duplicate-tables-in-mysql.md", "status": "active", "content": "<p>This trick comes in handy whenever you wanted to reuse a table, perform data migrations or maybe even take a backup of the table before any of your experiments mess up your data.</p>\n\n<p>Executing the following query will help you create a new table with the structure of the old table:</p>\n\n<pre><code>CREATE TABLE schema.new_table LIKE schema.old_table;\n</code></pre>\n\n<p>If you want the data as well, try this:</p>\n\n<pre><code>CREATE TABLE schema.new_table LIKE schema.old_table;\nINSERT schema.new_table SELECT * FROM schema.old_table;\n</code></pre>\n\n<p>You can use this query to copy tables from one schema to another schema too. Hope this helps you out! &#x1F604;</p>\n", "index": 47}, {"section": "til", "title": "Find the number of uppercase and lowercase letters in a string", "link": "til/posts/find-the-number-of-uppercase-and-lowercase-letters-in-a-string", "date": "July 18th, 2020", "date_alt": "18.07.2020", "year": "2020", "date_raw": "2020-07-18", "slug": "find-the-number-of-uppercase-and-lowercase-letters-in-a-string", "category": "Regular Expressions", "categories": [{"title": "Regular Expressions", "link": "/category/regular-expressions/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/50_2020_07_18_find-the-number-of-uppercase-and-lowercase-letters-in-a-string.md", "status": "active", "content": "<p>The usual approach of counting the number of uppercase and lower letters in a string is done by using a counter and a loop:</p>\n\n<pre><code>var upperCount = 0;\nvar lowerCount = 0;\nvar str = \"AbCdEfGhiJkL\";\nfor(var i=0; i&amp;lt;str.length; i++){\n    if(str[i] == str[i].toUpperCase()){\n        upperCount++;\n    }\n    else{\n        lowerCount++;\n    }\n}\n</code></pre>\n\n<p>That's nice but here's shorter and faster implementation:</p>\n\n<pre><code>var str = \"AbCdEfGhiJkL\";\nvar lowerCount = str.length - str.replace(/[A-Z]/g, '').length;\nvar upperCount = str.length - str.replace(/[a-z]/g, '').length;\n</code></pre>\n\n<p>The <code>lowerCount</code> variable is taking the difference of the lengths between the original string and the string with lowercase letters only because the <code>.replace()</code> method replaced the pattern of uppercase letters <code>[A-Z]</code> with empty spaces. The <code>upperCount</code> variable does the opposite of what the <code>lowerCount</code> variable does.</p>\n\n<p>Hope you found this trick useful!</p>\n", "index": 50}, {"section": "til", "title": "Replace all occurrences found on a string using Regular Expressions", "link": "til/posts/replace-all-occurrences-found-on-a-string-using-regular-expressions", "date": "July 18th, 2020", "date_alt": "18.07.2020", "year": "2020", "date_raw": "2020-07-18", "slug": "replace-all-occurrences-found-on-a-string-using-regular-expressions", "category": "Regular Expressions", "categories": [{"title": "Regular Expressions", "link": "/category/regular-expressions/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/49_2020_07_18_replace-all-occurrences-found-on-a-string-using-regular-expressions.md", "status": "active", "content": "<p>Let's say you have the following string and you must replace all occurrences of <strong>\"Hello\"</strong> with <strong>\"Bye\"</strong>:</p>\n\n<pre><code>var str = \"Hello Hello Hello World\";\n</code></pre>\n\n<p>You may think of using the <code>.replace()</code> method to solve this problem:</p>\n\n<pre><code>var newStr = str.replace(\"Hello\", \"Bye\")\n</code></pre>\n\n<p>But unfortunately, it only replaces the first occurrence in the string:</p>\n\n<pre><code>console.log(newStr); // returns \"Bye Hello Hello World\" as the output.\n</code></pre>\n\n<p>Using the power of Regular Expressions, you can replace all occurrences in one go:</p>\n\n<pre><code>function replaceAll(str, search, replace){\n    var re = new RegExp(search, \"g\");\n    return str.replace(re, replace);\n}    \n</code></pre>\n\n<p>Now, when you execute the following, you'll get a string that replaced all occurrences:</p>\n\n<pre><code>var newStr = replaceAll(str, \"Hello\", \"Bye\");\nconsole.log(newStr); // returns \"Bye Bye Bye World\" as the output.\n</code></pre>\n\n<p>Until next time, then!</p>\n", "index": 49}, {"section": "til", "title": "Create a unique multidimensional array using a key index", "link": "til/posts/create-a-unique-multidimensional-array-using-a-key-index", "date": "July 18th, 2020", "date_alt": "18.07.2020", "year": "2020", "date_raw": "2020-07-18", "slug": "create-a-unique-multidimensional-array-using-a-key-index", "category": "PHP", "categories": [{"title": "PHP", "link": "/category/php/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/48_2020_07_18_create-a-unique-multidimensional-array-using-a-key-index.md", "status": "active", "content": "<p>Let's say, you have a multidimensional array like this:</p>\n\n<pre><code>&lt;?php\n$cars = [\n    [\n        \"id\" =&gt; 1,\n        \"name\" =&gt; \"Mercedes Benz\",\n        \"color\" =&gt; \"Black\"\n    ],\n    [\n        \"id\" =&gt; 2,\n        \"name\" =&gt; \"Toyota\",\n        \"color\" =&gt; \"Red\"\n    ],\n    [\n        \"id\" =&gt; 3,\n        \"name\" =&gt; \"Toyota\",\n        \"color\" =&gt; \"White\"\n    ],\n    [\n        \"id\" =&gt; 4,\n        \"name\" =&gt; \"Nissan\",\n        \"color\" =&gt; \"Grey\"\n    ],\n];\n?&gt;\n</code></pre>\n\n<p>And say, you want to be able to return unique cars by <code>name</code> or <code>color</code>, use this method:</p>\n\n<pre><code>&lt;?php\nfunction multi_array_unique($array, $key) {\n    $i = 0;\n    $temp_array = [];\n    $key_array = [];\n\n    foreach($array as $val) {\n        // insert only unique keys\n        if (!in_array($val[$key], $key_array)) {\n            $key_array[$i] = $val[$key];\n            $temp_array[$i] = $val;\n        }\n        $i++;\n    }\n    return $temp_array;\n}\n?&gt;\n</code></pre>\n\n<p>Call this method from anywhere in your code like this:</p>\n\n<pre><code>&lt;?php\n$unique_cars = multi_array_unique($cars, \"name\");\ndd($unique_cars);\n?&gt;\n</code></pre>\n\n<p>And now, you'll get something like this:</p>\n\n<pre><code>&lt;?php\n[\n    [\n        \"id\" =&gt; 1,\n        \"name\" =&gt; \"Mercedes Benz\",\n        \"color\" =&gt; \"Black\"\n    ],\n    [\n        \"id\" =&gt; 2,\n        \"name\" =&gt; \"Toyota\",\n        \"color\" =&gt; \"Red\"\n    ],\n    [\n        \"id\" =&gt; 4,\n        \"name\" =&gt; \"Nissan\",\n        \"color\" =&gt; \"Grey\"\n    ],\n];\n?&gt;\n</code></pre>\n\n<p>You might wonder why I tried this instead of PHP's <code>array_unique()</code> method and the reason I didn't use it is because it doesn't support multidimensional arrays.</p>\n\n<p>Hope you found this useful!</p>\n", "index": 48}, {"section": "til", "title": "Extract YouTube Channel ID from URL", "link": "til/posts/extract-youtube-channel-id-from-url", "date": "July 13th, 2020", "date_alt": "13.07.2020", "year": "2020", "date_raw": "2020-07-13", "slug": "extract-youtube-channel-id-from-url", "category": "PHP", "categories": [{"title": "PHP", "link": "/category/php/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/45_2020_07_13_extract-youtube-channel-id-from-url.md", "status": "active", "content": "<p>Using PHP's in-built function, <code>parse_url</code>, you can write a helper method to pull the channel ID off a YouTube URL especially if you're pulling videos using YouTube's Data API. Here's the code:</p>\n\n<pre><code>&lt;?php\npublic function extractChannelID($url){\n    // Parse the link and trim any whitespaces\n    $parsed_link = parse_url(rtrim($url, '/'));\n\n    // Return the channel ID if it matches the pattern\n    if (isset($parsed_link['path']) &amp;&amp; preg_match('/^\\/channel\\/(([^\\/])+?)$/', $parsed_link['path'], $matches)) {\n        return $matches[1];\n    }\n\n    throw new Exception(\"This {$url} is not a valid YouTube channel URL\");\n    return null;\n}\n?&gt;\n</code></pre>\n\n<p>Writing tiny methods like these can help save time and be reusable in more than one context. </p>\n\n<p>Hope you find this tip useful! &#x1F601;</p>\n", "index": 45}, {"section": "til", "title": "Using zipcloak to encrypt files within an archive", "link": "til/posts/using-zipcloak-to-encrypt-files-within-an-archive", "date": "July 7th, 2020", "date_alt": "07.07.2020", "year": "2020", "date_raw": "2020-07-07", "slug": "using-zipcloak-to-encrypt-files-within-an-archive", "category": "Linux", "categories": [{"title": "Linux", "link": "/category/linux/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/44_2020_07_07_using-zipcloak-to-encrypt-files-within-an-archive.md", "status": "active", "content": "<p>Whenever you're sending a bunch of files or an archive that contains sensitive or confidential information, it's wise to encrypt before you send it to the person that you intend to.</p>\n\n<p>Using <code>zipcloak</code>, you'll be able to encrypt files within your existing archive.</p>\n\n<p>Do the following after you've <a href=\"til/posts/zip-a-file\">created a zip archive</a>:</p>\n\n<pre><code>zipcloak files.zip    \n</code></pre>\n\n<p>Now, you'll be prompted twice to enter a new password and verify your entered password. If they match, your archive will get encrypted. So whenever, you try to unzip or open using an Archive Manager, you'll be prompted to enter the password or else, you won't be able to access it.</p>\n\n<p>You also have the choice of not encrypting the original archive and creating a new one instead, just like this:</p>\n\n<pre><code>zipcloak files.zip -O encrypted.zip    \n</code></pre>\n\n<p>On the other hand, if you do wish to remove the encryption from your archive, just type the following:</p>\n\n<pre><code>zipcloak -d files.zip\n</code></pre>\n\n<p>And you'll be prompted again to enter your password before it removes it's encryption.</p>\n\n<p>Hope this helps you out! &#x1F601;</p>\n", "index": 44}, {"section": "til", "title": "How to cache your queries on your Laravel application?", "link": "til/posts/how-to-cache-your-queries-on-your-laravel-application", "date": "July 5th, 2020", "date_alt": "05.07.2020", "year": "2020", "date_raw": "2020-07-05", "slug": "how-to-cache-your-queries-on-your-laravel-application", "category": "Laravel", "categories": [{"title": "Laravel", "link": "/category/laravel/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/43_2020_07_05_how-to-cache-your-queries-on-laravel.md", "status": "active", "content": "<p>Although, Laravel is a good framework, it's quite heavy when it comes to executing queries especially if you're using the <a href=\"https://laravel.com/docs/7.x/eloquent\">Eloquent ORM</a> instead of the normal <a href=\"https://laravel.com/docs/7.x/queries\">query builder</a>.</p>\n\n<p>But Laravel does offer the option of caching your queries in the server and will only make calls to your database if there's a change in content.</p>\n\n<p>Quite handy when you're having a content-heavy website and huge amount of user traffic.</p>\n\n<p>Using the <code>Cache</code> class, you can cache your queries like this:</p>\n\n<pre><code>&lt;?php\n$apples = \\Cache::rememberForever('apples_cache', function(){\n    return FruitsModel::where('item_name', 'LIKE', '%apples')\n        -&gt;get();\n});\n?&gt;\n</code></pre>\n\n<p>In the above example, <code>apples_cache</code> is the key that stores your queries of apples forever and which will be used to obtain your cached results from the server. </p>\n\n<p>Oh, be sure to create distinctive names for different types of queries or else, you'll end up being confused! &#128540;</p>\n\n<p>You can also give it a time limit in milliseconds:</p>\n\n<pre><code>&lt;?php\n$apples = \\Cache::remember('apples_cache', 300000, function(){\n    return FruitsModel::where('item_name', 'LIKE', '%apples')\n        -&gt;get();\n});\n?&gt;\n</code></pre>\n\n<p>Hope this tip helps you out! &#x1F600;</p>\n", "index": 43}, {"section": "til", "title": "Looping infinitely around an array", "link": "til/posts/looping-infinitely-around-an-array", "date": "July 4th, 2020", "date_alt": "04.07.2020", "year": "2020", "date_raw": "2020-07-04", "slug": "looping-infinitely-around-an-array", "category": "Algorithms", "categories": [{"title": "Algorithms", "link": "/category/algorithms/"}], "summary": "", "reading_time": "2 minutes read", "preview_image_url": "", "filename": "content/til/42_2020_07_04_looping-infinitely-around-an-array.md", "status": "active", "content": "<p>Sometimes, I find myself in a situation where I might have a fixed array of colors, text, numbers or something like that but I want to loop around infinitely like a carousel.</p>\n\n<p>Let's say we have an array like this:</p>\n\n<pre><code>var colors = [\"#111\", \"#222\", \"#333\"];\n</code></pre>\n\n<p>The code is an array of three colors that we want to apply to, hmmm, say a list of HTML DOM elements like <code>&lt;div&gt;</code> containers or any element that you prefer. In this example, we'll add some colors to a bunch of <code>&lt;div&gt;</code> elements that has the classname <code>.card</code> or we'll just call them \"cards\".</p>\n\n<h2>Behold, the Modulus operator!</h2>\n\n<p>You may think of writing different conditions or loops to achieve a solution but a more elegant one is by using the Modulus operator a.k.a the Remainder operator (<code>%</code>). Using this operator gives you the remainder after the division of a number.</p>\n\n<p>Hmm, confused? Okay, here's a simple example of how a Modulus operator would be like:</p>\n\n<blockquote>\n  <p>In plain english, if you have 10 apples and you divide them by 4 and by doing so, you'll end up with 2 sets of 4 apples and the remaining set would be 2 apples. Thus, the remainder is 2.</p>\n</blockquote>\n\n<p>Did that make sense? If not, then try the following code in your browser:</p>\n\n<pre><code>var x = 10 % 4;\nconsole.log(x); // output will be 2\n</code></pre>\n\n<p>Let's say we have 10 \"cards\" and we want every 3 three cards to have 3 different colors, we must just define a way to determine the index of each color while iterating through a loop of cards. So, we can easily get the index by doing so:</p>\n\n<pre><code>var currentColor = colors[i % colors.length-1];\n</code></pre>\n\n<p>Here's the full code:</p>\n\n<pre><code>var elements = document.querySelectorAll('.card');\nfor(var i=0; i&amp;lt;elements.length; i++){\n    var currentColor = colors[i % colors.length-1];\n    elements[i].style.backgroundColor = currentColor;\n}\n</code></pre>\n\n<p>The following code will apply the colors to each \"card\" with respect to it's order and will reset back to the first color once it's reached it's last color based on the remainder of the next iteration in the loop.</p>\n\n<p>Read about <a href=\"https://en.wikipedia.org/wiki/Modulo_operation\">Modulus Operation</a> to know more about it.</p>\n", "index": 42}, {"section": "til", "title": "Enable HTTP Strict Transport Security (HSTS)", "link": "til/posts/enable-http-strict-transport-security-hsts", "date": "June 22nd, 2020", "date_alt": "22.06.2020", "year": "2020", "date_raw": "2020-06-22", "slug": "enable-http-strict-transport-security-hsts", "category": "Apache", "categories": [{"title": "Apache", "link": "/category/apache/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/40_2020_06_22_enable-http-strict-transport-security-hsts.md", "status": "active", "content": "<p>As part of a project that I was working on, I learnt about <a href=\"https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\">HTTP Strict Transport Security</a> protocol which tells the browser about making future web requests over HTTPS only. So, even if you attempt to use <code>http://</code>, the browser will force you to use <code>https://</code> URLs in the future.</p>\n\n<p>You can enable it by writing this header in your <code>.htaccess</code> file in your <code>public</code> directory:</p>\n\n<pre><code>Header always set Strict-Transport-Security \"max-age=31536000\" env=HTTPS\n</code></pre>\n\n<p>Please note that once you enable this protocol, your web application is committed to using SSL i.e. you won't be able to use insecure HTTP for your web application.</p>\n", "index": 40}, {"section": "til", "title": "Forcing HTTP to HTTPS redirect after enabling SSL", "link": "til/posts/forcing-http-to-https-redirect-after-enabling-ssl", "date": "June 22nd, 2020", "date_alt": "22.06.2020", "year": "2020", "date_raw": "2020-06-22", "slug": "forcing-http-to-https-redirect-after-enabling-ssl", "category": "Apache", "categories": [{"title": "Apache", "link": "/category/apache/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/41_2020_06_22_forcing-http-to-https-redirect-after-enabling-ssl.md", "status": "active", "content": "<p>You can manually force HTTP to HTTPS after enabling your SSL certificate by adding the following condition at the beginning of your <code>.htaccess</code> file in your <code>public</code> directory:</p>\n\n<pre><code>RewriteCond %{HTTP:X-Forward-Proto} !=https\nRewriteRule .* https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]\n</code></pre>\n\n<p>Save your file and restart your Apache server and now, your web application will redirect all your users to <code>https://</code> instead of <code>http://</code> URLs in the future.</p>\n", "index": 41}, {"section": "til", "title": "Enable copy-paste clipboard in URxvt Terminal Emulator", "link": "til/posts/enable-copy-paste-clipboard-in-urxvt-terminal-emulator", "date": "June 20th, 2020", "date_alt": "20.06.2020", "year": "2020", "date_raw": "2020-06-20", "slug": "enable-copy-paste-clipboard-in-urxvt-terminal-emulator", "category": "Linux", "categories": [{"title": "Linux", "link": "/category/linux/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/39_2020_06_20_enable-copy-paste-in-urxvt-terminal.md", "status": "active", "content": "<p>In my current Arch Linux installation, I decided to use a window manager called i3. It's really awesome and it comes with a really lightweight terminal emulator called <strong>urxvt</strong>. It's very minimal and I lked it but when I tried to copy-paste text from one terminal to another, I wasn't able to.</p>\n\n<p>However, thanks to the internet, I did some research and figured a way out.</p>\n\n<h2>1. Install xClip</h2>\n\n<p>First, you need to ensure that you have installed the <code>xclip</code> package, which will be used to copy-paste text in the emulator.</p>\n\n<p>Type the following command to install the package:</p>\n\n<pre><code>pacman -S xclip\n</code></pre>\n\n<h2>2. Activate Clipboard using Perl</h2>\n\n<p>Now, you have to paste these custom commands into your <code>clipboard</code> file, which is found in <code>/usr/lib/urxvt/perl</code> directory:</p>\n\n<pre><code># paste selection from clipboard\nsub paste {\n     my ($self) = @_;\n     my $content = `/usr/bin/xclip -loop 1 -out -selection clipboard` ;\n     $self-&gt;tt_write ($content);\n}\n\n# copy text to clipbard on selection\nsub on_sel_grab {\n     my $query = $_[0]-&gt;selection;\n     open (my $pipe, '| /usr/bin/xclip -in -selection clipboard') or die;\n     print $pipe $query;\n     close $pipe;\n }\n</code></pre>\n\n<h2>3. Modify your .Xresources</h2>\n\n<p>Add these keybindings to your <code>.Xresources</code> file:</p>\n\n<pre><code>URxvt.keysym.Shift-Control-V: perl:clipboard:paste\nURxvt.iso14755: False\nURxvt.perl-ext-common: default,clipboard\n</code></pre>\n\n<p>After adding it, refresh your <code>.Xresources</code> settings:</p>\n\n<pre><code>xrdb -merge .Xresources\n</code></pre>\n\n<p>Reboot your terminal and try selecting some text from your terminal using your mouse and paste it using <code>Ctrl</code>+<code>Shift</code>+<code>V</code> and it should work! </p>\n\n<p>That's it! Enjoy &#x1F603;</p>\n", "index": 39}, {"section": "til", "title": "Configuring audio drivers in Arch Linux", "link": "til/posts/configuring-audio-drivers-in-arch-Linux", "date": "June 20th, 2020", "date_alt": "20.06.2020", "year": "2020", "date_raw": "2020-06-20", "slug": "configuring-audio-drivers-in-arch-Linux", "category": "Linux", "categories": [{"title": "Linux", "link": "/category/linux/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/38_2020_06_20_control-audio-volume-from-the-terminal.md", "status": "active", "content": "<p>Yesterday, I thought of testing my Arch Linux system's audio and turns out, I didn't even install it yet! &#x1F612;</p>\n\n<p>Well, thanks to <a href=\"https://wiki.archlinux.org\">ArchWiki</a>, it was simple enough to install to make the audio work on my old laptop. Just install the following packages:</p>\n\n<pre><code>pacman -S alsa-firmware alsa-lib alsa-utils\n</code></pre>\n\n<p>Reboot the system once you're done installing the packages. Depending on your window manager, you should be able to see your sound icon being active.</p>\n\n<h2>Bonus: Bash script to control your volume from the terminal</h2>\n\n<p>In my current laptop, I still haven't mapped out the keys to control the audio volume, so I thought of writing a small method in my <code>.bashrc</code> file, so that I can control it from my terminal.</p>\n\n<p>Open your favorite text editor and Add this method in your <code>.bashrc</code> file:</p>\n\n<pre><code># simple volume control\nvolume(){\n    x=5\n    if [ $1 == 'up' ]\n    then\n        amixer set Master $x%+ &amp;&gt; /dev/null\n    elif [ $1 == 'down' ]\n    then\n        amixer set Master $x%- &amp;&gt; /dev/null\n    elif [ $1 == 'toggle' ]\n    then\n        amixer set Master toggle &amp;&gt; /dev/null\n    fi\n}\n</code></pre>\n\n<p>Save the file, close your edit and refresh your file by typing:</p>\n\n<pre><code>source .bashrc\n</code></pre>\n\n<p>Now, it should work when you type any of these commands:</p>\n\n<pre><code>volume up\nvolume down\nvolume toggle\n</code></pre>\n\n<p>Hope this tiny script helps you out! </p>\n", "index": 38}, {"section": "til", "title": "Troubleshoot time-related SSL errors on secure websites", "link": "til/posts/troubleshoot-time-related-ssl-errors-on-secure-websites", "date": "June 14th, 2020", "date_alt": "14.06.2020", "year": "2020", "date_raw": "2020-06-14", "slug": "troubleshoot-time-related-ssl-errors-on-secure-websites", "category": "SSL", "categories": [{"title": "SSL", "link": "/category/ssl/"}], "summary": "", "reading_time": "2 minutes read", "preview_image_url": "", "filename": "content/til/37_2020_06_14_troubleshoot-time-related-errors-on-secure-websites.md", "status": "active", "content": "<p>As I was configuring Arch Linux setup on my old HP 8460p laptop, I noticed that I wasn't able to access any site using Chrome or Firefox as I was faced with a weird error:</p>\n\n<p><!--- <img src=\"../../../static/til_images/ssl-time-error.png\" alt=\"SSL Certificate Error\" />-->\n<img src=\"../../../static/til_images/ssl-time-error.png\" style=\"width: 500px;\" /></p>\n\n<p>I was quite confused and thought it might be an issue with my WiFi card or probably some server issue but turns out it was neither of them.</p>\n\n<p>On the side of my screen, I noticed my system time was displaying 4 hours ahead of the current local time, which is wrong. So, I did a little research and turns out my suspicions were correct, it's a time-related issue.</p>\n\n<h2>How is time related to secure websites?</h2>\n\n<p>Well, each website that uses SSL or that begins with <code>https://</code> are only valid for a period of time before getting expired. If the website that you're trying to visit presents a certificate with a time and date that doesn't match with your system's clock, Firefox will prevent you from accessing the page.</p>\n\n<h2>How to fix it?</h2>\n\n<p>Actually, the fix is quite simple. All you have to is just set the correct date and time on your system and you're good to go!</p>\n\n<p>If you're using Linux, just do the following:</p>\n\n<h3>1. Set up your timezone</h3>\n\n<p>You can look up for your timezones by executing the following:</p>\n\n<pre><code>timedatectl list-timezones | less\n</code></pre>\n\n<p>Once, you've found your timezone, execute the following by replacing <code>Continent/Country</code> with your timezone:</p>\n\n<pre><code>timedatectl set-timezone Continent/Country\n</code></pre>\n\n<h3>2. Manually set your local time</h3>\n\n<p>Execute the following to set up your time, locally on your system:</p>\n\n<pre><code>timedatectl set-time \"yyyy-MM-dd hh:mm:ss\"\n</code></pre>\n\n<h3>3. Set the hardware clock from the system clock</h3>\n\n<p>The following command sets the hardware clock from the system clock:</p>\n\n<pre><code>hwclock --systohc\n</code></pre>\n\n<p>Now, that you've executed them, you should be able to view the correct time on your system by executing <code>timedatectl status</code> and you should see something like this:</p>\n\n<pre><code>               Local time: Sun 2020-06-14 21:04:04 +04\n           Universal time: Sun 2020-06-14 17:04:04 UTC\n                 RTC time: Sun 2020-06-14 17:04:05    \n                Time zone: Asia/Dubai (+04, +0400)    \nSystem clock synchronized: no                         \n              NTP service: inactive \n</code></pre>\n\n<p>Although, this issue was time-related, you may face the same kind of error for various other reasons. Try reading more on how to <a href=\"https://support.mozilla.org/en-US/kb/troubleshoot-time-errors-secure-websites\">troubleshoot</a> errors like these from Mozilla's official documentation.</p>\n", "index": 37}, {"section": "til", "title": "Transfer files remotely using SCP", "link": "til/posts/transfer-files-remotely-using-scp", "date": "June 13th, 2020", "date_alt": "13.06.2020", "year": "2020", "date_raw": "2020-06-13", "slug": "transfer-files-remotely-using-scp", "category": "Linux", "categories": [{"title": "Linux", "link": "/category/linux/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/36_2020_06_13_transfer-files-remotely-using-scp.md", "status": "active", "content": "<p>Do you want to transfer files remotely from one UNIX-based system to another? Try using the <code>scp</code> tool, which is a shorthand for <strong>Secure Copy Protocol</strong>. It's based off the SSH protocol using it as a means to securely transfer files from a local machine to one or more remote machines.</p>\n\n<p>Here's a code snippet that can help you out to transfer from computer A to computer B:</p>\n\n<pre><code>scp your_local_file user@ipaddress:/directory_to_store\n</code></pre>\n\n<p>And transfer from computer B to computer A:</p>\n\n<pre><code>scp user@ipaddress:/directory/file_name your_local_directory\n</code></pre>\n\n<p>Oh, before you transfer files to another computer, make sure that you have permissions to access it first. If you don't have one, then create a new account using <code>useradd</code> on your remote system.</p>\n", "index": 36}, {"section": "til", "title": "How to manually configure your WiFi on Arch Linux?", "link": "til/posts/how-to-manually-configure-your-wifi-on-arch-linux", "date": "June 9th, 2020", "date_alt": "09.06.2020", "year": "2020", "date_raw": "2020-06-09", "slug": "how-to-manually-configure-your-wifi-on-arch-linux", "category": "Linux", "categories": [{"title": "Linux", "link": "/category/linux/"}], "summary": "", "reading_time": "2 minutes read", "preview_image_url": "", "filename": "content/til/35_2020_06_09_how-to-manually-configure-your-wifi-on-arch-linux.md", "status": "active", "content": "<p>Recently, I thought of playing around with Arch Linux to learn more about Linux under-the-hood and to see if it can become my new daily driver.</p>\n\n<p>As I booted from live USB, I tried connecting to my WiFi using <code>wifi-menu</code> but it never worked after selecting my network name and entering the credentials.</p>\n\n<p>So, I did a little bit of research in <a href=\"https://wiki.archlinux.org\">ArchWiki</a> and forums and I figured a way to set it up manually using <code>netctl</code> by myself.</p>\n\n<p><code>netctl</code> is a network profile manager and it's apparently an Arch Linux project.</p>\n\n<h2>1. Select your interface</h2>\n\n<p>Before you begin to set up your WiFi connection from your computer, check if your network interface is being detected:</p>\n\n<pre><code>iwconfig\n</code></pre>\n\n<p>Since it's a WiFi connection, your interface most probably must be <code>wlan0</code>. If you see it, then set the interface up:</p>\n\n<pre><code>ip link set wlan0 up\n</code></pre>\n\n<h2>2. Scan for networks</h2>\n\n<p>Now, that your interface, use it to scan for your WiFi network:</p>\n\n<pre><code>iwlist wlan0 scan | less\n</code></pre>\n\n<p>Once, you execute this command, you must be able to see your WiFi's SSID (or network name).</p>\n\n<p>Now, put your interface down for a while:</p>\n\n<pre><code>ip link set wlan0 down\n</code></pre>\n\n<h2>3. Create a network profile</h2>\n\n<p>Alright, go to <code>/etc/netctl/examples/</code> directory and make a copy of the <code>wireless-wpa</code> file to the <code>/etc/netctl</code> directory:</p>\n\n<pre><code>cd /etc/netctl/examples\ncp /etc/netctl/examples/wireless-wpa /etc/netctl/your-wifi-name\n</code></pre>\n\n<p>Now, go back to <code>/etc/netctl/</code> directory and open the <code>your-wifi-name</code> file with your preferred text editor and edit the following only:</p>\n\n<pre><code>ESSID: your-wifi-name\nkey: your-wifi-password\n</code></pre>\n\n<p>After you're done editing, save the file.</p>\n\n<h2>4. Test network profile</h2>\n\n<p>To test if your profile is working, do the following:</p>\n\n<pre><code>netctl start your-wifi-name\nping -c 3 www.google.com\n</code></pre>\n\n<p>In case, you get an error, try doing this:</p>\n\n<pre><code>ip link set dev wlan0 down\nnetctl start your-wifi-name\nping -c 3 www.google.com\n</code></pre>\n\n<p>If you're able to ping, then it works. Else, edit your network profile and try connecting to it again.</p>\n\n<h2>5. Enable network profile</h2>\n\n<p>If you've reached this stage that means your network profile must be working fine. Just do the following to enable the network profile to run the internet throughout the setup:</p>\n\n<pre><code>netctl enable your-wifi-name\n</code></pre>\n\n<p>Try reading more about using <a href=\"https://wiki.archlinux.org/index.php/Netctl\">netctl</a> in Arch Linux's official wikipage.</p>\n", "index": 35}, {"section": "til", "title": "Add search functionality to your static site", "link": "til/posts/add-search-functionality-to-your-static-site", "date": "June 6th, 2020", "date_alt": "06.06.2020", "year": "2020", "date_raw": "2020-06-06", "slug": "add-search-functionality-to-your-static-site", "category": "JavaScript", "categories": [{"title": "JavaScript", "link": "/category/javascript/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/34_2020_06_06_add-search-functionality-to-your-static-site.md", "status": "active", "content": "<p>If you have a static site or a blog generated using a static-site generator but want to add a simple search functionality? This could be of your interest.</p>\n\n<p>I'll take you through an example on how to build a simple search engine using a JSON file and AJAX requests.</p>\n\n<h2>1. Generate a JSON dump of your site</h2>\n\n<p>Although, it's not a database but it can act as an alternative to having one. Your JSON dump can contain any metadata that you wanted your users to search in your site. In my case, I thought of allowing the user to search <code>title</code> and <code>category</code>. </p>\n\n<p>Is your site generated using Python and want to create a JSON dump? <a href=\"til/posts/read-and-write-json-to-a-file-in-python\">Read this article</a> for more information.</p>\n\n<h2>2. Build search functionality</h2>\n\n<p>I won't go through the aspects of UI design in this article as I feel that it's subjective and depends on one's preferences but let's keep it simple enough for this tutorial.</p>\n\n<p>Before you begin writing the function, place this component in your HTML template:</p>\n\n<pre><code>&lt;div class=\"searchbox\"&gt;\n    &lt;input id=\"searchinput\" type=\"text\"&gt;\n    &lt;div id=\"searchresults\"&gt;\n        &lt;ul&gt;&lt;/ul&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Anyway, here's the function and you can place it directly on your template or in a separate <code>.js</code> file:</p>\n\n<pre><code>var _url = \"path-of-your-file.json\";\n\n$(document).ready(function(){\n    $('#searchinput').keyup(function(e){\n        var keyword = $(this).val();\n        var code = e.keyCode ? e.keyCode : e.which;\n\n        if(code == 13){\n            $.ajax({\n                url: _url,\n                type: \"GET\",\n                async: false,\n            }).done(function(data){\n                var results = \"\";\n                if(data.articles.length &gt; 0){\n                    $.each(data.articles, function(key, value){\n                        if(v.title.search(pattern) != -1 || v.category.search(pattern) != -1){\n                            results += `&lt;li&gt;&lt;a href=\"${v.slug}\"&gt;${v.title}&lt;/a&gt;&lt;/li&gt;`;\n                        }\n                    });\n                    $(\"#searchresults ul\").html(results);\n                }\n            });\n        }\n    });\n});\n</code></pre>\n\n<p>That's it! Now, when you execute your script, you should be able to view your search results just like as if it were using a database.</p>\n\n<p>If you want to make it similar to mine, please feel free to inspect the code on the browser or go to my <a href=\"https://github.com/megacolorboy/personal-blog/blob/master/static/js/search.js\">repository</a> to see how it works.</p>\n", "index": 34}, {"section": "til", "title": "Read and Write JSON to a file in Python", "link": "til/posts/read-and-write-json-to-a-file-in-python", "date": "June 5th, 2020", "date_alt": "05.06.2020", "year": "2020", "date_raw": "2020-06-05", "slug": "read-and-write-json-to-a-file-in-python", "category": "Python", "categories": [{"title": "Python", "link": "/category/python/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/33_2020_06_05_read-and-write-json-to-a-file-in-python.md", "status": "active", "content": "<p>You can make use of the built-in <code>json</code> package in Python to read and write JSON data to a file.</p>\n\n<h2>Writing JSON to a file</h2>\n\n<p>You can store the information in a dictionary or <code>dict</code> object, which can contain any type of data like integers, booleans, arrays or nested objects.</p>\n\n<p>By using a <code>dict</code> object, the <code>json</code> package will transform your dictionary into a serialized JSON string.</p>\n\n<pre><code>import json\n\ndataObj = {}\ndataObj['posts'] = []\ndataObj['posts'].append({\n    'title': 'Hello world',\n    'category': 'Introduction',\n    'slug': 'hello-world'\n})\n\nwith open('data.json', 'w') as file:\n    json.dump(dataObj, file)\n</code></pre>\n\n<h2>Reading JSON from a file</h2>\n\n<p>Reading is as easy as writing to a file. Using the same package again, we can parse the JSON string directly from the file.</p>\n\n<pre><code>import json\n\nwith open('data.json', 'r') as file:\n    data = json.load(file)\n    for item in data['posts']:\n        print 'Title: ' + item['title']\n        print 'Category: ' + item['category']\n        print 'Slug: ' + item['slug']\n</code></pre>\n\n<p>I read about different package alternatives like <code>simplejson</code> but I guess for now, this is a great way to get started especially, if you're working with web applications and are interacting with a serialized JSON data on a daily basis.</p>\n", "index": 33}, {"section": "til", "title": "Build a menu tree using recursion", "link": "til/posts/build-a-menu-tree-using-recursion", "date": "June 3rd, 2020", "date_alt": "03.06.2020", "year": "2020", "date_raw": "2020-06-03", "slug": "build-a-menu-tree-using-recursion", "category": "Algorithms", "categories": [{"title": "Algorithms", "link": "/category/algorithms/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/31_2020_06_03_build-a-menu-tree-using-recursion.md", "status": "active", "content": "<p>Hmm, what is the most efficient way to build a menu tree? &#x1F605;</p>\n\n<p>Most people would go for a brute force solution if it's a straightforward menu but would that be possible if we intend to create multiple levels of menu items?</p>\n\n<p>Sure, you could but as the number of loops increases, the complexity of time increases too. Not to forget, you'll end up writing code that'll look messy and unscalable.</p>\n\n<p>I always loved the idea and simplicity of using recursion. So, I thought of exercising my recursion skills by writing a method that can generate a dynamic menu with <strong>x</strong> number of parent and child menu items.</p>\n\n<p>The following example is written in PHP:</p>\n\n<pre><code>&lt;?php\nclass FooController extends Controller {\n    protected $menuHTML = \"\";\n\n    private function menuItems() {\n        return [\n            [\n                'title' =&gt; 'Item 1',\n                'link' =&gt; '/item-1'\n            ],\n            [\n                'title' =&gt; 'Item 2',\n                'link' =&gt; '/item-2',\n                'child_items' =&gt; [\n                    [\n                       'title' =&gt; 'Item 2.1',\n                       'link' =&gt; '/item-2.1'\n                    ],       \n                    [\n                        'title' =&gt; 'Item 2.2',\n                        'link' =&gt; '/item-2.2'\n                    ],       \n                ]\n            ],\n            [\n                'title' =&gt; 'Item 3',\n                'link' =&gt; '/item-3'\n            ],\n            [\n                'title' =&gt; 'Item 4',\n                'link' =&gt; '/item-4'\n            ],\n        ];\n    }\n\n    // Build a menu tree\n    private function buildMenu($menu) {\n        foreach($menu as $menuItem){\n            $this-&gt;menuHTML .= '&lt;li class=\"item\"&gt;';\n            $this-&gt;menuHTML .= '&lt;a href=\"'.$menuItem['link'].'\"&gt;'.$menuItem['title'].'&lt;/a&gt;';\n\n            // Check if it has any child items\n            if(array_key_exists(\"child_items\", $menuItem){\n                $this-&gt;menuHTML .= '&lt;ul class=\"submenu\"&gt;';\n                $this-&gt;buildMenu($menuItem['child_items']);\n                $this-&gt;menuHTML .= '&lt;/ul&gt;';\n            }\n\n            $this-&gt;menuHTML .= '&lt;/li&gt;'\n        }\n    }\n\n    // Return the complete menu\n    private function getMenu($menu) {\n        $this-&gt;buildMenu($menu);\n        return '&lt;ul class=\"mainmenu\"&gt;'.$this-&gt;menuHTML.'&lt;/ul&gt;';\n    }\n\n    public function __construct() {\n        pre($this-&gt;getMenu($this-&gt;menuItems());\n        die;\n    }\n}\n?&gt;\n</code></pre>\n\n<p>Once you run it, you'll see something like this:</p>\n\n<pre><code>&lt;ul class=\"mainmenu\"&gt;\n    &lt;li class=\"item\"&gt;&lt;a href=\"/item-1\"&gt;Item 1&lt;/a&gt;&lt;/li&gt;\n    &lt;li class=\"item\"&gt;&lt;a href=\"/item-2\"&gt;Item 2&lt;/a&gt;\n        &lt;ul class=\"submenu\"&gt;\n            &lt;li class=\"item\"&gt;&lt;a href=\"/item-2.1\"&gt;Item 2.1&lt;/a&gt;&lt;/li&gt;\n            &lt;li class=\"item\"&gt;&lt;a href=\"/item-2.2\"&gt;Item 2.2&lt;/a&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/li&gt;\n    &lt;li class=\"item\"&gt;&lt;a href=\"/item-3\"&gt;Item 3&lt;/a&gt;&lt;/li&gt;\n    &lt;li class=\"item\"&gt;&lt;a href=\"/item-4\"&gt;Item 4&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p>There a lot of ways to achieve this same result using recursion but it sure is easier to read, scalable and extensible, ain't it?</p>\n", "index": 31}, {"section": "til", "title": "Using default function parameters in Internet Explorer", "link": "til/posts/using-default-function-parameters-in-internet-explorer", "date": "June 3rd, 2020", "date_alt": "03.06.2020", "year": "2020", "date_raw": "2020-06-03", "slug": "using-default-function-parameters-in-internet-explorer", "category": "JavaScript", "categories": [{"title": "JavaScript", "link": "/category/javascript/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/32_2020_06_03_default-function-parameters-in-internet-explorer.md", "status": "active", "content": "<p>Today, I wrote a simple method that fetches images from the database via AJAX and also, I defined an empty object as a default parameter:</p>\n\n<pre><code>function fetchImages(obj={}){\n    // some code here...\n}\n\nfetchImages();\n</code></pre>\n\n<p>The default <code>obj</code> parameter would contain extra parameters like <code>id</code>, <code>slug</code> and <code>page</code>, which would be then used to fetch a particular group of images, else, it'll fetch a random set of images.</p>\n\n<p>This method worked fine in Google Chrome and Mozilla Firefox but not in Internet Explorer. I thought of inspecting the code and I was facing weird errors like <code>undefined</code> or <code>Expected: ')'</code> on the IE console.</p>\n\n<p>Luckily, I had compared it to the other methods that didn't have any default parameters, so I did a little research and turns out that according to <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/default_parameters\">Mozilla's documentation</a>, default function parameters are proposed by the ES6 syntax and at this point, I realized that Internet Explorer <strong>doesn't support ES6 syntax</strong>. What a bummer! &#x1F612;</p>\n\n<p>However, there's a way to prevent this from happening by rewriting the method like this:</p>\n\n<pre><code>function fetchImages(obj){\n    // Check if obj is defined, else make it assign it as an empty object.\n    var data = obj || {};\n\n    // some code here...\n}\n</code></pre>\n\n<p>And BAM! The method worked flawlessly just as it's intended to do so. &#x1F60E;</p>\n\n<p>Addtionally, you may refer to the <a href=\"http://kangax.github.io/compat-table/es6/\">ECMAScript 6 Compatibility table</a> that you might find it quite helpful to check browser compatiblity for Internet Explorer versions 11 and under.</p>\n", "index": 32}, {"section": "til", "title": "How to identify the current target of an event?", "link": "til/posts/how-to-identify-the-current-target-of-an-event", "date": "June 1st, 2020", "date_alt": "01.06.2020", "year": "2020", "date_raw": "2020-06-01", "slug": "how-to-identify-the-current-target-of-an-event", "category": "JavaScript", "categories": [{"title": "JavaScript", "link": "/category/javascript/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/29_2020_06_01_how-to-identify-the-current-target-of-an-event.md", "status": "active", "content": "<p>Using the <code>event.currentTarget</code> property which belongs to the <code>Event</code> interface can help you in many ways to identify target of the current event especially if you want to fetch attributes or modify the classname of an element that belongs to a group of elements sharing the same classname.</p>\n\n<p>There are many examples but I chose to write a small snippet of highlighting a tab:</p>\n\n<pre><code>function highlightTab(e){\n    // Find elements that has the classname 'active' \n    // and remove them\n    if(document.querySelector('div.tab_item.active') !== null){\n        document.querySelector('div.tab_item.active').classList.remove('active');\n    }\n\n    // Add active class to target node\n    e.currentTarget.className += \" active\";\n\n    // Add active class to target's child node\n    // e.currentTarget.querySelector('a.child_anchor_link').className += \" active\";\n\n    // Add active class to target's parent node\n    // e.currentTarget.parentNode.className += \" active\";\n}\n</code></pre>\n\n<p>Read <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Event/currentTarget\">Mozilla's official documentation</a> to know more about getting the current target of an event and it's compatibility with different web browsers.</p>\n", "index": 29}, {"section": "til", "title": "Allow inline elements in CKEditor", "link": "til/posts/allow-inline-elements-in-ckeditor", "date": "June 1st, 2020", "date_alt": "01.06.2020", "year": "2020", "date_raw": "2020-06-01", "slug": "allow-inline-elements-in-ckeditor", "category": "JavaScript", "categories": [{"title": "JavaScript", "link": "/category/javascript/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/30_2020_06_01_allow-inline-elements-in-ckeditor.md", "status": "active", "content": "<p>Using CKEditor is awesome but I hate it when it removes inline elements like <code>&lt;span&gt;</code>, <code>&lt;i&gt;</code> or any DOM elements that contain attributes like classnames or ID, by default.</p>\n\n<p>Well, CKEditor's <a href=\"https://ckeditor.com/docs/ckeditor4/latest/guide/dev_allowed_content_rules.html\">documentation</a> states that you can allow it by adding this line to your configuration:</p>\n\n<pre><code>var editor = CKEDITOR.replace('textarea_edit',{\n    allowedContent: true,\n});\n</code></pre>\n\n<p>After adding this line, CKEditor will stop removing those elements from your HTML content but it's also open to all tags. </p>\n\n<p>You can set rules to allow only specific ones like this:</p>\n\n<pre><code>var editor = CKEDITOR.replace('textarea_edit',{\n    allowedContent: 'span; i; ul; li; a[!href]'\n});\n</code></pre>\n\n<p>Hope this helps you out! &#x1F60A;</p>\n", "index": 30}, {"section": "til", "title": "Check if the current route exists before fetching it's parameters", "link": "til/posts/check-if-the-current-route-exists-before-fetching-its-parameters", "date": "May 30th, 2020", "date_alt": "30.05.2020", "year": "2020", "date_raw": "2020-05-30", "slug": "check-if-the-current-route-exists-before-fetching-its-parameters", "category": "Laravel", "categories": [{"title": "Laravel", "link": "/category/laravel/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/27_2020_05_30_check-if-the-current-route-exists-before-fetching-its-parameters.md", "status": "active", "content": "<p>If you've ever come across this type of error when you're trying to fetch parameters of the current route:</p>\n\n<pre><code>Symfony\\Component\\Debug\\Exception\\FatalThrowableError: Call to member function parameters() on null\n</code></pre>\n\n<p>It's probably because the route doesn't exist, which is why it failed to call the <code>parameters()</code> function. It can be easily resolved by checking if the route exists before calling the function:</p>\n\n<pre><code>&lt;?php\nnamespace App\\Http\\Controllers;\nuse Route;\n\nclass FooController extends Controller {\n    public function __construct(Request $request){\n        // insert code here...\n    }\n\n    public function foo(Request $request){\n        $params = $request-&gt;route() ? Route::current()-&gt;parameters() : '';\n        return $params;\n    }\n}\n?&gt;\n</code></pre>\n\n<p>Although, the sample code above is to fetch parameters of the current route, you can apply this before calling any method from the <code>Route</code> class.</p>\n\n<p>This works for version 5.2 and above.</p>\n", "index": 27}, {"section": "til", "title": "Queues & Stacks", "link": "til/posts/queues-and-stacks", "date": "May 30th, 2020", "date_alt": "30.05.2020", "year": "2020", "date_raw": "2020-05-30", "slug": "queues-and-stacks", "category": "Algorithms + Data Structures", "categories": [{"title": "Algorithms", "link": "/category/algorithms/"}, {"title": "Data Structures", "link": "/category/data-structures/"}], "summary": "", "reading_time": "2 minutes read", "preview_image_url": "", "filename": "content/til/28_2020_05_30_stacks-vs-queues.md", "status": "active", "content": "<p>Let's look at the differences between the two data structures:</p>\n\n<ol>\n<li><strong>Queues</strong>: First-In First-Out</li>\n<li><strong>Stacks</strong>: Last-In Last-Out</li>\n</ol>\n\n<h2>Queues</h2>\n\n<p>This follows a <strong>First-In First-Out</strong> processing order i.e. the first element added to a queue will be processed first. A queue should support two operations:</p>\n\n<ul>\n<li>Enqueue</li>\n<li>Dequeue</li>\n</ul>\n\n<h3>Enqueue</h3>\n\n<p>Adds the element to the tail of a queue. The tail position gets incremented.</p>\n\n<h3>Dequeue</h3>\n\n<p>Removes the first element of a queue i.e. the head element. Once, it's removed, the subsequent element becomes the new head element of the queue. The position of the new head element gets incremented and the previous one is assigned a negative integer like -1 or some garbage value. </p>\n\n<p><strong>Implementation of a standard queue using C++:</strong></p>\n\n<pre><code>class Queue {\n    private:\n        int pos;\n        vector&lt;int&gt; data;\n\n    public:\n        Queue() {\n            pos = 0;\n        }\n\n        bool enqueue(int value) {\n            data.push_back(value);\n            return true;\n        }\n\n        bool dequeue() {\n            if(isEmpty()){\n                return false;\n            }\n            pos++;\n            return true;\n        }\n\n        int front() {\n            return data[pos];\n        }\n\n        bool isEmpty() {\n            return pos &gt;= data.size();\n        }\n}\n</code></pre>\n\n<p>In terms of memory management, a standard Queue is quite inefficient and incapable of handling dynamic memory.</p>\n\n<h2>Stacks</h2>\n\n<p>This follows a <strong>Last-In First-Out</strong> processing order i.e. the last element added to a queue will be the first to be removed. Just like queues, it has two simple operations:</p>\n\n<ul>\n<li>Push</li>\n<li>Pop</li>\n</ul>\n\n<h3>Push</h3>\n\n<p>Each element is pushed towards the end of the stack. Think of it as a card deck where you stack a card on top of another card.</p>\n\n<h3>Pop</h3>\n\n<p>It removes the most recent element i.e. the newly added element from the stack.</p>\n\n<p><strong>Implementation of a stack using C++:</strong></p>\n\n<pre><code>class Stack {\n    private:\n        vector&amp;ltint&gt; data;\n    public:\n        void push(int value) {\n            data.push_back(value);\n        }\n\n        bool isEmpty() {\n            return data.empty();\n        }\n\n        int top() {\n            return data.back();\n        }\n\n        bool pop() {\n            if(!isEmpty()) {\n                data.pop_back();\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n}\n</code></pre>\n\n<p>Unlike queues, stacks are easier to implement and pretty efficient at managing dynamic memory.</p>\n\n<p>Oh, if you ever get to use these, don't worry about implementing them, nearly all programming languages have their own implementations of <code>stack</code> and <code>queue</code> that comes with it's own standard library.</p>\n", "index": 28}, {"section": "writings", "title": "Launched a microblog site", "link": "writings/posts/launched-a-microblog-site", "date": "May 29th, 2020", "date_alt": "29.05.2020", "year": "2020", "date_raw": "2020-05-29", "slug": "launched-a-microblog-site", "category": "Update", "categories": [{"title": "Update", "link": "/category/update/"}], "summary": "A tiny experiment to see how it could improve my writing productivity.", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/writings/57_2020_05_29_launched-a-microblog-site.md", "status": "active", "content": "<p>Ever since I've been working from home (due to COVID19 pandemic), I hardly find time to write any posts on my blog and I felt that it was counter-productive whenever I wanted to start a new one after a long time.</p>\n\n<p>And then, I came across this trend of <strong>TIL</strong> a.k.a <strong>Today I Learned</strong> on GitHub and one of my favorite ones is written by <a href=\"https://github.com/jbranchaud/til/blob/master/README.md\">Josh Branchaud</a>.</p>\n\n<h2>What is this about?</h2>\n\n<p>Unlike writing long articles, which takes a lot of time, I believe that by having a microblog and writing short articles could help improve my productivity in writing.</p>\n\n<p>So, I thought of sharing whatever I have learned on a day-to-day basis and accumulate this knowledge in a \"repository\" where anyone could learn from, thus is why I started this microblog. Besides, as of writing this article, I wrote 25 short articles in a month.</p>\n\n<h2>What kind of articles can we expect?</h2>\n\n<p>It'd be wonderful to say that I can talk about anything over here but currently, I'm restricting it to Computer Science, Mathematics, Software Engineering and Digital Design.</p>\n\n<h2>So what about your main blog?</h2>\n\n<p>Oh, I'm not ignoring it! The main blog will be there but now that I have segregated it, it'll allow me to take some time to plan and write content-heavy articles. There'll be more articles coming in a few months time.</p>\n\n<p><a href=\"../../til\">Click here</a> to view my microblog and let me know what you think about it! &#x1F604;</p>\n\n<p>Stay tuned for more!</p>\n", "index": 57}, {"section": "til", "title": "Select all elements except the current element", "link": "til/posts/select-all-elements-except-the-current-element", "date": "May 28th, 2020", "date_alt": "28.05.2020", "year": "2020", "date_raw": "2020-05-28", "slug": "select-all-elements-except-the-current-element", "category": "jQuery", "categories": [{"title": "jQuery", "link": "/category/jquery/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/26_2020_05_28_select-all-elements-except-the-current-element.md", "status": "active", "content": "<p>If you don't want the current element to be selected in an array of elements that belongs to same class or type, just use the <code>.not()</code> method like the example below:</p>\n\n<pre><code>$(\".btn\").click(function(){\n    $(\".btn\").not(this).text('selected');\n});\n</code></pre>\n\n<p>The above code will change the text for all buttons except the current element.</p>\n", "index": 26}, {"section": "til", "title": "Extract a specific folder from a zipped archive", "link": "til/posts/extract-a-specific-folder-from-a-zipped-archive", "date": "May 28th, 2020", "date_alt": "28.05.2020", "year": "2020", "date_raw": "2020-05-28", "slug": "extract-a-specific-folder-from-a-zipped-archive", "category": "Terminal", "categories": [{"title": "Terminal", "link": "/category/terminal/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/25_2020_05_28_extract-a-specific-folder-from-a-zipped-archive.md", "status": "active", "content": "<p>First, you need to view what's inside of the <code>.zip</code> archive:</p>\n\n<pre><code>unzip -v archive.zip\n</code></pre>\n\n<p>Once, you've found the folder you wanted to extract, just type this:</p>\n\n<pre><code>unzip archive.zip \"folder_to_extract/*\" -d .\n</code></pre>\n", "index": 25}, {"section": "til", "title": "Remove patterns from multiple files", "link": "til/posts/remove-patterns-from-multiple-files", "date": "May 27th, 2020", "date_alt": "27.05.2020", "year": "2020", "date_raw": "2020-05-27", "slug": "remove-patterns-from-multiple-files", "category": "Terminal", "categories": [{"title": "Terminal", "link": "/category/terminal/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/23_2020_05_27_remove-patterns-from-multiple-files.md", "status": "active", "content": "<p>If you wanted to remove a specific pattern in a list of files, like the ones below:</p>\n\n<pre><code>23_2020_03_01_article-three.md\n22_2020_02_01_article-two.md\n21_2020_01_01_article-one.md\n</code></pre>\n\n<p>You can simply do that using Regular Expressions and the <code>rename</code> tool:</p>\n\n<pre><code>rename 's/[0-9]+_[0-9]+_[0-9]+_[0-9]+_//' *.md\n</code></pre>\n\n<p>Now, the desired output should look like this:</p>\n\n<pre><code>article-three.md\narticle-two.md\narticle-one.md\n</code></pre>\n\n<p>This should come in handy if you're lazy to rename each file manually! :)</p>\n", "index": 23}, {"section": "til", "title": "Rename extensions of multiple files", "link": "til/posts/rename-extensions-of-multiple-files", "date": "May 27th, 2020", "date_alt": "27.05.2020", "year": "2020", "date_raw": "2020-05-27", "slug": "rename-extensions-of-multiple-files", "category": "Bash", "categories": [{"title": "Bash", "link": "/category/bash/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/24_2020_05_27_rename-extensions-of-multiple-files.md", "status": "active", "content": "<p>In this example, we're going to change a list of <code>.txt</code> files to <code>.md</code> files:</p>\n\n<pre><code>#!/bin/bash\n\nshopt -s nullglob\nfiles=($(ls -v *.txt))\n\nfor file in \"${files[@]}\"\ndo\n    mv ${file} ${file}.md\ndone\n</code></pre>\n\n<p>s\nYou can use modify this script to rename any extension you want.</p>\n", "index": 24}, {"section": "til", "title": "Create a symbolic storage link", "link": "til/posts/symbolic-storage-link", "date": "May 25th, 2020", "date_alt": "25.05.2020", "year": "2020", "date_raw": "2020-05-25", "slug": "symbolic-storage-link", "category": "Laravel", "categories": [{"title": "Laravel", "link": "/category/laravel/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/18_2020_05_25_symbolic-storage-link.md", "status": "active", "content": "<p>When using Laravel, the <code>public</code> directory is used for files that are publicly accessible. By default, it's stored in <code>local</code> and often stored in this <code>storage/app/public</code> directory. You can make it easily accessible by using the following command:</p>\n\n<pre><code>php artisan storage:link\n</code></pre>\n\n<p>Once, it has been created, you can use access those files using the <code>public_path</code> or <code>asset</code> methods.</p>\n\n<pre><code>&lt;?php\necho public_path('images/sample_1.jpg');\necho asset('images/sample_2.jpg');\n?&gt;\n</code></pre>\n", "index": 18}, {"section": "til", "title": "Including and excluding files in zip", "link": "til/posts/include-exclude-files.zip", "date": "May 25th, 2020", "date_alt": "25.05.2020", "year": "2020", "date_raw": "2020-05-25", "slug": "include-exclude-files.zip", "category": "Terminal", "categories": [{"title": "Terminal", "link": "/category/terminal/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/11_2020_05_25_include-exclude-files-zip.md", "status": "active", "content": "<p>When zipping a directory or a bunch of files, there'll be a lot of stuff that you want to include and exclude.</p>\n\n<p>To exclude a file:</p>\n\n<pre><code>zip -r files.zip . -x file_1 file_2\n</code></pre>\n\n<p>Alternatively, you can choose to include files:</p>\n\n<pre><code>zip -r files.zip . -i file_1 file_2\n</code></pre>\n", "index": 11}, {"section": "til", "title": "Find a file by extension", "link": "til/posts/find-file-by-ext", "date": "May 25th, 2020", "date_alt": "25.05.2020", "year": "2020", "date_raw": "2020-05-25", "slug": "find-file-by-ext", "category": "Terminal", "categories": [{"title": "Terminal", "link": "/category/terminal/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/10_2020_05_25_find-file-by-ext.md", "status": "active", "content": "<p>This comes in handy whenever I want to look for files that exists with a specific extension in a computer or server:</p>\n\n<pre><code>find . -name \"*.ext\"\n</code></pre>\n\n<p>In addition, sometimes, you might want to look for a bunch of files with a specific extension but with matching keywords:</p>\n\n<pre><code>find .name \"*.ext\" | grep \"keyword\"\n</code></pre>\n\n<p>Hope you found this helpful!</p>\n", "index": 10}, {"section": "til", "title": "Check branch status", "link": "til/posts/check-status", "date": "May 25th, 2020", "date_alt": "25.05.2020", "year": "2020", "date_raw": "2020-05-25", "slug": "check-status", "category": "Git", "categories": [{"title": "Git", "link": "/category/git/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/04_2020_05_25_check-status.md", "status": "active", "content": "<p>Ever wondered if you've edited or committed anything in your project before pushing it to your repository, do this:</p>\n\n<pre><code>git status\n</code></pre>\n", "index": 4}, {"section": "til", "title": "Enable spellcheck", "link": "til/posts/enable-spellcheck", "date": "May 25th, 2020", "date_alt": "25.05.2020", "year": "2020", "date_raw": "2020-05-25", "slug": "enable-spellcheck", "category": "VIM", "categories": [{"title": "VIM", "link": "/category/vim/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/07_2020_05_25_enable-spellcheck.md", "status": "active", "content": "<p>This can be useful when you're writing stuff, just do the following:</p>\n\n<pre><code>:set spellcheck=[lang]\n</code></pre>\n", "index": 7}, {"section": "til", "title": "View hardware info", "link": "til/posts/view-hardware-info", "date": "May 25th, 2020", "date_alt": "25.05.2020", "year": "2020", "date_raw": "2020-05-25", "slug": "view-hardware-info", "category": "Linux", "categories": [{"title": "Linux", "link": "/category/linux/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/21_2020_05_25_view-hardware-info.md", "status": "active", "content": "<p>Want to check the specs of your system? Just type this:</p>\n\n<pre><code>lshw\n</code></pre>\n\n<p>Too long? Then type this for a shorter version:</p>\n\n<pre><code>lshw -short\n</code></pre>\n", "index": 21}, {"section": "til", "title": "Quit VIM", "link": "til/posts/quit-vim", "date": "May 25th, 2020", "date_alt": "25.05.2020", "year": "2020", "date_raw": "2020-05-25", "slug": "quit-vim", "category": "VIM", "categories": [{"title": "VIM", "link": "/category/vim/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/13_2020_05_25_quit-vim.md", "status": "active", "content": "<p>One of the most infamous issues that new users of VIM faces when using it for the first time. Press <code>:q</code> to quit VIM</p>\n\n<p>If you've worked on a file and want to save and quit? Just type <code>:wq!</code>.</p>\n\n<p>I hope that solved your quitting issue with VIM.</p>\n", "index": 13}, {"section": "til", "title": "Check Ubuntu version", "link": "til/posts/check-ubuntu-version", "date": "May 25th, 2020", "date_alt": "25.05.2020", "year": "2020", "date_raw": "2020-05-25", "slug": "check-ubuntu-version", "category": "Linux", "categories": [{"title": "Linux", "link": "/category/linux/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/05_2020_05_25_check-ubuntu-version.md", "status": "active", "content": "<p>Want to know the current version of your Ubuntu distro? Type this:</p>\n\n<pre><code>lsb_release -r\n</code></pre>\n", "index": 5}, {"section": "til", "title": "Save a file", "link": "til/posts/save-a-file", "date": "May 25th, 2020", "date_alt": "25.05.2020", "year": "2020", "date_raw": "2020-05-25", "slug": "save-a-file", "category": "VIM", "categories": [{"title": "VIM", "link": "/category/vim/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/14_2020_05_25_save-a-file.md", "status": "active", "content": "<p>Want to save your work? Type <code>:w</code></p>\n\n<p>Type <code>:wq!</code> to save your file and quit VIM at the same time.</p>\n", "index": 14}, {"section": "til", "title": "Using SSH with a private key", "link": "til/posts/ssh-with-private-key", "date": "May 25th, 2020", "date_alt": "25.05.2020", "year": "2020", "date_raw": "2020-05-25", "slug": "ssh-with-private-key", "category": "Terminal", "categories": [{"title": "Terminal", "link": "/category/terminal/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/17_2020_05_25_ssh-with-private-key.md", "status": "active", "content": "<p>Got a <em>.pem</em> key but don't know how to SSH to your server, just do this:</p>\n\n<pre><code>ssh -i name_of_key user@domain -p 22\n</code></pre>\n\n<h2>BONUS: Convert .ppk to .pem key</h2>\n\n<p>Recently, I started working from home and as a programmer, it's pretty common to access the company server for development purposes. </p>\n\n<p>Back in the office, I used to access it using <a href=\"https://www.putty.org\">PuTTY</a> but now that I'm using a linux machine, I thought of accessing it via Terminal but there's a catch, I can't use <em>.ppk</em> key to access it.</p>\n\n<p>So, I did a little research and figured that I can easily convert it using <code>puttygen</code></p>\n\n<p>Open up your terminal and type:</p>\n\n<pre><code>sudo apt install putty-tools\n</code></pre>\n\n<p>Now, convert your private key to PEM format:</p>\n\n<pre><code>puttygen yourprivate.ppk -O private-openssh -o your_new_key.pem\n</code></pre>\n\n<p>That's it and you're good to go!</p>\n", "index": 17}, {"section": "til", "title": "Set up reCaptcha in Laravel", "link": "til/posts/set-up-recaptcha", "date": "May 25th, 2020", "date_alt": "25.05.2020", "year": "2020", "date_raw": "2020-05-25", "slug": "set-up-recaptcha", "category": "Laravel", "categories": [{"title": "Laravel", "link": "/category/laravel/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/15_2020_05_25_set-up-recaptcha.md", "status": "active", "content": "<p>I mean, come on, you need to have a reCaptcha in your forms, no matter what.</p>\n\n<p>Here are the steps:</p>\n\n<h2>1. Install using Composer</h2>\n\n<pre><code>composer require anhskohbo/no-captcha\n</code></pre>\n\n<h2>2. Add provider and alias to configuration</h2>\n\n<p>Open your <code>config/app.php</code> file and add this to your providers array:</p>\n\n<pre><code>&lt;?php\nAnhskohbo\\NoCaptcha\\NoCaptchaServiceProvider::class,\n?&gt;\n</code></pre>\n\n<p>And this to your aliases array:</p>\n\n<pre><code>&lt;?php\n'NoCaptcha' =&gt; Anhskohbo\\NoCaptcha\\Facades\\NoCaptcha::class,\n?&gt;\n</code></pre>\n\n<h2>3. Publish configuration</h2>\n\n<pre><code>php artisan vendor:publish --provider=\"Anhskohbo\\NoCaptcha\\NoCaptchaServiceProvider\"\n</code></pre>\n\n<h2>4. Add sitekey and secret key to .env file</h2>\n\n<p>Open your <code>.env</code> file and add this:</p>\n\n<pre><code>NOCAPTCHA_SITEKEY=yoursitekey\nNOCAPTCHA_SECRET=yoursecret\n</code></pre>\n\n<h2>How to use it?</h2>\n\n<p>Now, you can use it in your validator using like this:</p>\n\n<pre><code>&lt;?php\n$validate = Validator::make(Input::all(),[\n    'g-recaptcha-response' =&gt; 'required|captcha'\n]);\n?&gt;\n</code></pre>\n", "index": 15}, {"section": "til", "title": "Clear all lines", "link": "til/posts/clear-all-lines", "date": "May 25th, 2020", "date_alt": "25.05.2020", "year": "2020", "date_raw": "2020-05-25", "slug": "clear-all-lines", "category": "VIM", "categories": [{"title": "VIM", "link": "/category/vim/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/06_2020_05_25_clear-all-lines.md", "status": "active", "content": "<ol>\n<li>Switch to normal mode by pressing <code>ESC</code> key</li>\n<li>Press <code>gg</code> and it will take you to first line of the file.</li>\n<li>Then type <code>dG</code> and it will clear all the lines from start to the end of the file.</li>\n</ol>\n", "index": 6}, {"section": "til", "title": "Find files containing specific text", "link": "til/posts/find-files-specific-text", "date": "May 25th, 2020", "date_alt": "25.05.2020", "year": "2020", "date_raw": "2020-05-25", "slug": "find-files-specific-text", "category": "Terminal", "categories": [{"title": "Terminal", "link": "/category/terminal/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/09_2020_05_25_find-files-specific-text.md", "status": "active", "content": "<p>This helped me a lot whenever I'm in a remote server trying to find a keyword or specific text amongst a bunch of files.</p>\n\n<p>This command will save you a lot of time:</p>\n\n<pre><code>grep -rwn [path] -e 'pattern'\n</code></pre>\n\n<ul>\n<li><code>r</code> stands for recursion</li>\n<li><code>n</code> displays the line number</li>\n<li><code>w</code> matches the whole word</li>\n</ul>\n\n<p>Refer to <code>man find</code> pages for more info.</p>\n", "index": 9}, {"section": "til", "title": "View the filesize in human-readable format", "link": "til/posts/check-file-size", "date": "May 25th, 2020", "date_alt": "25.05.2020", "year": "2020", "date_raw": "2020-05-25", "slug": "check-file-size", "category": "Terminal", "categories": [{"title": "Terminal", "link": "/category/terminal/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/02_2020_05_25_check-file-size.md", "status": "active", "content": "<p>Wanted to view the size of a file in terminal but don't understand the number of bytes displayed? No worries, just type this command and it'll display the size of the in human-readable format:</p>\n\n<pre><code>du -sh filename.ext\n</code></pre>\n", "index": 2}, {"section": "til", "title": "Zip a file", "link": "til/posts/zip-a-file", "date": "May 25th, 2020", "date_alt": "25.05.2020", "year": "2020", "date_raw": "2020-05-25", "slug": "zip-a-file", "category": "Terminal", "categories": [{"title": "Terminal", "link": "/category/terminal/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/22_2020_05_25_zip-a-file.md", "status": "active", "content": "<p>This comes in handy especially whenever you want to download multiples files from a server or take backups.</p>\n\n<pre><code>zip [option] output_file input1 input2\n</code></pre>\n\n<p>For example: if you want to zip an entire directory with it's file contents, just do this:</p>\n\n<pre><code>zip -r myfiles.zip folder/\n</code></pre>\n", "index": 22}, {"section": "til", "title": "Insert mode", "link": "til/posts/insert-mode", "date": "May 25th, 2020", "date_alt": "25.05.2020", "year": "2020", "date_raw": "2020-05-25", "slug": "insert-mode", "category": "VIM", "categories": [{"title": "VIM", "link": "/category/vim/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/12_2020_05_25_insert-mode.md", "status": "active", "content": "<p>I get it, a lot of people are confused on how to start typing on VIM. All you have to do is press the <code>A</code> key, the editor will be switched to <strong>insert mode</strong>.</p>\n\n<p>Press <code>ESC</code> key to switch back to <strong>normal mode</strong>. </p>\n", "index": 12}, {"section": "til", "title": "Check RAM and disk space", "link": "til/posts/check-ram-disk-space", "date": "May 25th, 2020", "date_alt": "25.05.2020", "year": "2020", "date_raw": "2020-05-25", "slug": "check-ram-disk-space", "category": "Terminal", "categories": [{"title": "Terminal", "link": "/category/terminal/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/03_2020_05_25_check-ram-disk-space.md", "status": "active", "content": "<h2>RAM space</h2>\n\n<p>Type the following command to view available memory in your system:</p>\n\n<pre><code>free -h\n</code></pre>\n\n<h2>Disk space</h2>\n\n<p>Type the following command to view available disk space in your system:</p>\n\n<pre><code>df -h\n</code></pre>\n", "index": 3}, {"section": "til", "title": "Symbolic storage link in shared hosting", "link": "til/posts/symlink-shared-hosting", "date": "May 25th, 2020", "date_alt": "25.05.2020", "year": "2020", "date_raw": "2020-05-25", "slug": "symlink-shared-hosting", "category": "Laravel", "categories": [{"title": "Laravel", "link": "/category/laravel/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/19_2020_05_25_symlink-shared-hosting.md", "status": "active", "content": "<p>If you're hosting a laravel project via cPanel, chances are that it could be a shared hosting server and that means you can't really use <code>php artisan storage:link</code> for this.\nBut don't worry, there's another way to this. Just follow the steps below:</p>\n\n<h2>1. Create a symlink</h2>\n\n<p>In your <code>public_html/public</code> directory, remove the <code>storage</code> folder. Next, create a <code>symlink.php</code> file in your <code>public_html</code> directory and add the following code:</p>\n\n<pre><code>&lt;?php\n$targetFolder = $_SERVER['DOCUMENT_ROOT'].'/storage/app/public';\n$linkedFolder = $_SERVER['DOCUMENT_ROOT'].'/public/storage';\nsymlink($targetFolder, $linkedFolder);\necho \"done\";\n?&gt;\n</code></pre>\n\n<h2>2. Create a custom route to access storage</h2>\n\n<p>Alright, this is kind of a hack but it works extremely fine. Just add the following route in your <code>routes/web.php</code> file:</p>\n\n<pre><code>&lt;?php\nRoute::get('/storage/anyfolder/{filename}', function($filename){\n    // Your folder path\n    $folder_path = storage_path('app/public/anyfolder/'.$filename);\n\n    // check if the file exists\n    if(!File::exists($folder_path)) {\n        abort(404);\n    }\n\n    $file = File::get($folder_path);\n    $type = File::mimeType($folder_path);\n\n    $response = Response::make($file, 200);\n    $response-&gt;header(\"Content-Type\", $type);\n\n    return $response;\n})\n?&gt;\n</code></pre>\n\n<p>Now, you can access your images or any other assets easily using: </p>\n\n<pre><code>&lt;?php\nasset('storage/anyfolder/'.$filename)\n?&gt;\n</code></pre>\n\n<p>Hope this helps you out!</p>\n", "index": 19}, {"section": "til", "title": "Integrate Excel into your Laravel project", "link": "til/posts/integrate-excel-into-your-laravel-project", "date": "May 25th, 2020", "date_alt": "25.05.2020", "year": "2020", "date_raw": "2020-05-25", "slug": "integrate-excel-into-your-laravel-project", "category": "Laravel", "categories": [{"title": "Laravel", "link": "/category/laravel/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/08_2020_05_25_integrate-excel-into-your-laravel-project.md", "status": "active", "content": "<p>Before you integrate Excel into your application, make sure your project meets the following requirements:</p>\n\n<ul>\n<li>PHP v7.0 or greater</li>\n<li>Laravel v5.5 or greater</li>\n<li>PhpSpreadsheet v1.6 or greater</li>\n</ul>\n\n<h2>Download the package</h2>\n\n<p>Download the <code>maatwebsite/excel</code> package using Composer:</p>\n\n<pre><code>composer require maatwebsite/excel\n</code></pre>\n\n<h2>Add it to service provider</h2>\n\n<p>By default, this will be done automatically when you're installing the package but if you want to do it yourself, add this in your <code>config/app.php</code> file:</p>\n\n<pre><code>&lt;?php\n// ...\n'providers' =&gt; [\n    // ...\n    Maatwebsite\\Excel\\ExcelServiceProvider::class,\n],\n\n// ...\n'aliases' =&gt; [\n    // ...\n    'Excel' =&gt; 'Maatwebsite\\Excel\\Facades\\Excel::class',\n],\n?&gt;;\n</code></pre>\n\n<h2>Publish your configuration</h2>\n\n<p>Last but not the least, run the <code>vendor:publish</code> command using <code>artisan</code> to publish your configuration:</p>\n\n<pre><code>php artisan vendor:publish -provider=\"Maatwebsite\\Excel\\ExcelServiceProvider\"\n</code></pre>\n\n<p>Upon publishing, the <code>config/excel.php</code> configuration file will be created where you can make your changes.</p>\n\n<p>Hope this helps you out!</p>\n", "index": 8}, {"section": "til", "title": "View battery status", "link": "til/posts/view-battery-status", "date": "May 25th, 2020", "date_alt": "25.05.2020", "year": "2020", "date_raw": "2020-05-25", "slug": "view-battery-status", "category": "Linux", "categories": [{"title": "Linux", "link": "/category/linux/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/20_2020_05_25_view-battery-status.md", "status": "active", "content": "<p>This comes in handy if you're using the terminal in full screen but still want to know your battery life. Just type the following:</p>\n\n<pre><code>upower -i /org/freedesktop/UPower/devices/battery_BAT0\n</code></pre>\n", "index": 20}, {"section": "til", "title": "Set up a new repository", "link": "til/posts/set-up-repo", "date": "May 25th, 2020", "date_alt": "25.05.2020", "year": "2020", "date_raw": "2020-05-25", "slug": "set-up-repo", "category": "Git", "categories": [{"title": "Git", "link": "/category/git/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/16_2020_05_25_set-up-repo.md", "status": "active", "content": "<p>Are you new to using Git? Then this is for you.</p>\n\n<h2>1. Set up a Git account</h2>\n\n<p>Go to <a href=\"https://www.github.com\">GitHub</a> and create your account with your email address.</p>\n\n<h2>2. Create a repository</h2>\n\n<p>Just create a new project with whatever you wanted. For this, you can just create <code>git-starter-repo</code> or something like that.</p>\n\n<h2>3. Initialize git in your project directory</h2>\n\n<p>Now, go to your project directory and initialize git by doing the following:</p>\n\n<pre><code>git init\n</code></pre>\n\n<h2>4. Add your files</h2>\n\n<p>Add your files to the repository by doing the following:</p>\n\n<pre><code>git add .\n</code></pre>\n\n<p>Or if you want add selected files:</p>\n\n<pre><code>git add file_1 file_2\n</code></pre>\n\n<h2>5. Commit your changes</h2>\n\n<p>Before you push your changes, you need to write a message about what changes are done:</p>\n\n<pre><code>git commit -m \"this is my first commit\"\n</code></pre>\n\n<h2>6. Link your project to the repo</h2>\n\n<p>Do the following to link your project to the repo that you've created in step 1:</p>\n\n<pre><code>git remote add origin https://github.com/youraccount/repositoryname.git\n</code></pre>\n\n<h2>7. Push changes</h2>\n\n<p>You can decide which branch you wanted to push but initially, you'll have one branch, which is called <code>master</code>:</p>\n\n<pre><code>git push -u origin master\n</code></pre>\n\n<p>Or if you have an existing branch, just replace <code>master</code> with <code>yourbranchname</code>.</p>\n\n<p>Hope that helps you out!</p>\n", "index": 16}, {"section": "til", "title": "Checkout branch", "link": "til/posts/checkout-branch", "date": "May 25th, 2020", "date_alt": "25.05.2020", "year": "2020", "date_raw": "2020-05-25", "slug": "checkout-branch", "category": "Git", "categories": [{"title": "Git", "link": "/category/git/"}], "summary": "", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/til/01_2020_05_25_checkout-branch.md", "status": "active", "content": "<p>Want to create a new branch in your project? Simple, just do this:</p>\n\n<pre><code>git checkout -b new_branch\n</code></pre>\n\n<p>By doing this, you'll automatically be shifted to a new branch of your project. To check which branch you're working on, type this:</p>\n\n<pre><code>git branch\n</code></pre>\n\n<p>And you should be able to see your current branch marked with a <code>*</code>:</p>\n\n<pre><code>master\n* new_branch\n</code></pre>\n", "index": 1}, {"section": "writings", "title": "Writing a book on how to build ReactJS applications", "link": "writings/posts/writing-a-book-on-how-to-build-reactjs-applications", "date": "March 13th, 2020", "date_alt": "13.03.2020", "year": "2020", "date_raw": "2020-03-13", "slug": "writing-a-book-on-how-to-build-reactjs-applications", "category": "Personal Challenge", "categories": [{"title": "Personal Challenge", "link": "/category/personal-challenge/"}], "summary": "I'm challenging myself to write a book on how to build simple applications using ReactJS", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/writings/56_2020_03_13_writing-a-small-book-on-building-reactjs-applications.md", "status": "active", "content": "<p>Over the past few months, I've been spending some of my free time to learn ReactJS and I've got to say, I really like it and got a hang of it after lots of trials and errors.</p>\n\n<p>Just to make it clear, I didn't become a ReactJS expert or something but I figured that writing a book on something that you've learnt would help you understand the material much more deeper.</p>\n\n<p>And since I do believe in it, I decided to challenge myself to write a book on it.</p>\n\n<h2>What's the aim of the book?</h2>\n\n<p>I aim to cover the fundamentals and concepts of ReactJS using a progressive and an example-driven approach. You know like on how to write reusable UI components, handle user events and interactions and managing state and props of a component.</p>\n\n<p>By the end of this book, the reader will have solid understanding of React's concepts and be able to build cool applications using it.</p>\n\n<h2>When's it going to be released?</h2>\n\n<p>Honestly, I didn't plan on the size of the book yet but the practical content for it i.e. the actual code and applications are ready. I aim to release it somewhere around <strong>late April 2020</strong>.</p>\n\n<h2>Are you planning to monetize it?</h2>\n\n<p>Umm, nope! I believe that knowledge should be accessible for everyone and I plan on making the book open source, so that it can get updated as per the latest changes.</p>\n\n<h2>Conclusion</h2>\n\n<p>I know it's a short article but I feel like I wanted to challenge myself with a small goal for this year.</p>\n\n<p>Let's see how it goes!</p>\n", "index": 56}, {"section": "writings", "title": "Using Laravel events and listeners in your application", "link": "writings/posts/using-laravel-events-and-listeners-in-your-application", "date": "February 7th, 2020", "date_alt": "07.02.2020", "year": "2020", "date_raw": "2020-02-07", "slug": "using-laravel-events-and-listeners-in-your-application", "category": "Programming", "categories": [{"title": "Programming", "link": "/category/programming/"}], "summary": "Sharing my experiences of using events and listeners in my Laravel application.", "reading_time": "4 minutes read", "preview_image_url": "", "filename": "content/writings/54_2020_02_07_using-laravel-events-and-listeners-in-your-application.md", "status": "active", "content": "<p>Recently, I have started learning Laravel and now, I'm building an application for my new company using this amazing framework.</p>\n\n<p>My senior developer was curious and thought of having a conversation with me that went like this:</p>\n\n<pre><code>Senior dev: Hmm, can I have a look at your code?\n\nMe: Oh sure, here take a look.\n\nSenior: (Goes through project file structure)\n\nSenior: So, have you ever thought of using events in your application?\n\nMe: Yeah, I wrote a custom JavaScript file to handle and fire events on the client-side like validating the forms and passing async requests to the server.\n\nSenior: Hmm, that's okay but I'm talking using events in Laravel.\n</code></pre>\n\n<p>At this point, I was pretty clueless and I didn't know what the heck was going on. Events in PHP? I mean, I know about it in JavaScript because of it's event-driven architecture that we are all familiar with. But in PHP? I didn't know that.</p>\n\n<p>Still confused, he proceeds to explain about it's concepts in an abstract manner and thanks to him, it induced my curiosity by asking myself: <strong><em>What's the deal in between using events over function calls using a route on a standard controller?</em></strong></p>\n\n<p>In today's article, I'll be talking about why and when to use events over function calls using Laravel in your application.</p>\n\n<h2>What's an event?</h2>\n\n<p>An event is a piece of reusable logic stored somewhere in your application that has a set of listeners waiting to be executed, if triggered.</p>\n\n<p>Let's say, you have a simple CRUD application that involves user registration. Whenever a user registers, you may want to perform certain actions, such as:</p>\n\n<ul>\n<li>Adding them into your mailing list</li>\n<li>Confirmation of account</li>\n</ul>\n\n<p>You can add more but this is just to give you an idea. Let's see take a look at two different approaches:</p>\n\n<ol>\n<li><a href=\"#approach-1\">Functional</a></li>\n<li><a href=\"#approach-2\">Events and Listeners</a></li>\n</ol>\n\n<h3><a id=\"approach-1\"></a> Functional</h3>\n\n<p>If you're using an MVC framework (Laravel, in our case), you'd do this in a controller with a bunch of methods like so:</p>\n\n<pre><code>&lt;?php\nnamespace App\\Http\\Controllers;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\User;\n\nclass UserController extends Controller {\n    public function index() {\n        // insert code to view users page\n    }\n\n    public function create(Request $request) {\n        $arr = [\n            'username' =&gt; $request-&gt;username,\n            'email' =&gt; $request-&gt;email,\n            'password' =&gt; bcrypt('something')\n        ];\n\n        $user = User::create($arr);\n\n        $this-&gt;sendConfirmationEmail($user);\n        $this-&gt;subscribeToMailingList($user);\n    }\n\n    // Send confirmation email to user\n    private function sendConfirmationEmail($user) {\n        // insert code\n    }\n\n    // Subscribe user to mailing list\n    private function subscribeToMailingList($user) {\n        // insert code\n    }\n}\n?&gt;\n</code></pre>\n\n<p>This is approach is self-contained and simple to follow but you're also adding in a lot of responsibility to your controller.</p>\n\n<p>Not only that, what if the user wants to register from another place in your application, in that case, you'll have to duplicate your logic in multiple places.</p>\n\n<h3><a id=\"approach-2\"></a> Events and Listeners</h3>\n\n<p>Using this approach, you can split this into <mark>Event</mark> and <mark>Listener</mark> files in your application.</p>\n\n<pre><code>&lt;?php\nnamespace App\\Http\\Controllers;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\User;\n\nclass UserController extends Controller {\n    public function index() {\n        // insert code to view users page\n    }\n\n    public function create(Request $request) {\n        $arr = [\n            'username' =&gt; $request-&gt;username,\n            'email' =&gt; $request-&gt;email,\n            'password' =&gt; bcrypt('something')\n        ];\n\n        $user = User::create($arr);\n\n        // Emit event\n        event(new UserRegistered($user));\n    }\n}\n?&gt;\n</code></pre>\n\n<p>This is how your <mark>UserRegistered</mark> event would look like:</p>\n\n<pre><code>&lt;?php\nnamespace App\\Events;\n\nuse Illuminate\\Queue\\SerializeModels;\nuse App\\User;\n\nclass UserRegistered {\n    use SerializesModels;\n\n    public $user;\n\n    public function __construct(User $user) {\n        $this-&gt;user = $user;\n    }\n}\n?&gt;\n</code></pre>\n\n<p>And this is how your <mark>SendConfirmationEmail</mark> listener would look like:</p>\n\n<pre><code>&lt;?php\nnamespace App\\Listeners;\n\nuse App\\Events\\UserRegistered;\n\nclass SendConfirmationEmail {\n\n    public function __construct(User $user) {\n        // insert code\n    }\n\n    public function handle(UserRegister $event) {\n        // insert code\n    }\n}\n?&gt;\n</code></pre>\n\n<p>Using this approach, you can use the <mark>UserRegistered</mark> event anywhere you wanted in your application. No matter what happens, it will trigger the same actions as it was intended to do so. If you want to add a new functionality, create a new listener and register it with the event in your <mark>EventServiceProvider</mark> file like this:</p>\n\n<pre><code>&lt;?php\nprotected $listen = [\n    'App\\Events\\UserRegistered' =&gt; [\n    'App\\Listeners\\SendConfirmationEmail',\n    ],\n];\n?&gt;\n</code></pre>\n\n<p>If you follow this approach, your logic complexity is toned down and the controller will have less responsibility.</p>\n\n<h2>Why use events and listeners over function calls?</h2>\n\n<p>Just like this answer that I found on <a href=\"https://stackoverflow.com/questions/4503723/why-use-event-listeners-over-function-calls\">StackOverflow</a> question regarding events and listeners over calling functions:</p>\n\n<blockquote>\n  <p>You might not be in control of the code that's doing the calling. Or even if you are, you don't want to introduce dependencies into that code.</p>\n</blockquote>\n\n<p>Think about it, what if you built an API or library that you want people to use but don't want them to modify the source code. Instead, you could provide a documentation that states specific events are raised under specific circumstances, in turn, they can write code that responds to such events.</p>\n\n<p>I'm sure that there are more examples as to where this methodology might be applied.</p>\n\n<h2>When to use it?</h2>\n\n<p>Truth be told, it depends. If you have a simple application, then a functional approach is all you need but it's a larger and more complicated application, using Events and Listeners can be a better option.</p>\n\n<h2>Conclusion</h2>\n\n<p>Please note, I'm not an expert at this topic as I'm still learning and I thought of sharing what I had learnt. If you have any suggestions or thoughts, please share it with me on <a href=\"https://twitter.com/megacolorboy\">Twitter</a> or <a href=\"mailto:megacolorboy@gmail.com\">send me</a> a message to my inbox.</p>\n\n<p>Hope you liked reading this article.</p>\n\n<p>Stay tuned for more.</p>\n\n<h2>Extras</h2>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/4503723/why-use-event-listeners-over-function-calls\">Why use event listeners over function calls</a></li>\n<li><a href=\"https://stackoverflow.com/questions/17377442/meaning-of-event-in-php\">The meaning of events in PHP</a></li>\n<li><a href=\"https://laravel.com/docs/6.x/events\">Laravel Events</a></li>\n</ul>\n", "index": 54}, {"section": "writings", "title": "The Circle Packing Algorithm", "link": "writings/posts/the-circle-packing-algorithm", "date": "December 8th, 2019", "date_alt": "08.12.2019", "year": "2019", "date_raw": "2019-12-08", "slug": "the-circle-packing-algorithm", "category": "Algorithms + Art", "categories": [{"title": "Algorithms", "link": "/category/algorithms/"}, {"title": "Art", "link": "/category/art/"}], "summary": "Implemented a mathematically beautiful generative pattern that looks deceivingly complex to the human.", "reading_time": "2 minutes read", "preview_image_url": "", "filename": "content/writings/53_2019_12_02_the-circle-packing-algorithm.md", "status": "active", "content": "<iframe width=\"100%\" height=\"485\" src=\"/static/projects/circle-packing\"></iframe>\n\n<p>Beautiful, isn't it? It might look complex but it's mathematically quite impressive. Making this pattern wasn't hard but it definitely took a lot of trial and error to get it right and honestly, I don't really know if it's this is the most efficient way to generate this pattern.</p>\n\n<p>This article isn't a tutorial but rather, I'll be talking about the algorithm itself. However, you can check out the source code in my <a href=\"https://github.com/megacolorboy/BlogProjects\">GitHub repository</a>.</p>\n\n<h2>How it works?</h2>\n\n<p>In order to achieve that \"stacked\" effect, there are two things to keep in mind:</p>\n\n<ol>\n<li>Generate circles with a random radius</li>\n<li>Look for collisions with other circles</li>\n</ol>\n\n<p>The logic is quite similar to the <a href=\"https://stackoverflow.com/questions/306316/determine-if-two-rectangles-overlap-each-other\">Overlapping Rectangles</a> problem except this is done with circles.</p>\n\n<h2>Generate circles with dynamic radius</h2>\n\n<p>This method will help generate valid circles with a random radius. Circles that don't overlap or collide with other circles are considered to be valid.</p>\n\n<pre><code>// Generate a valid circle\nconst generateCircle = () =&gt; {\n    let newCircle;\n    let isValidCircle = false;\n\n    for(let i=0; i&lt;attempts; i++) {\n        newCircle = {\n            x: Math.floor(Math.random() * width),\n            y: Math.floor(Math.random() * width),\n            radius: minRadius\n        };\n\n        if(checkForCollision(newCircle)) {\n            continue;\n        }\n        else {\n            isValidCircle = true;\n            break;\n        }\n    }\n\n    if(!isValidCircle) { return; }\n\n    for(let i=minRadius; i&lt;=maxRadius; i++) {\n        newCircle.radius = i;\n        if(checkForCollision(newCircle)) {\n            newCircle.radius--;\n            break;\n        }\n    }\n\n    circles.push(newCircle);\n    drawCircleOnCanvas(context, newCircle, colors[Math.floor(Math.random() * colors.length)]);\n}\n</code></pre>\n\n<h2>Look for collision with other circles</h2>\n\n<p>Thanks to some online research, I was able implement the <a href=\"https://en.wikipedia.org/wiki/Euclidean_distance\">Euclidean Distance</a> equation that helped with calculating the distances between each circle and detect for collisions. Along with that, I also found another article on <a href=\"http://www.mathsmutt.co.uk/files/tcirc.htm\">Touching Circles</a> that was quite useful.</p>\n\n<p>These are the formulas used to detect the collision:</p>\n\n<ol>\n<li><p>Find the distance between two centres\n\\[ AB = \\sqrt{ (x2 - x1)^2 - (y2 - y1)^2} \\]</p></li>\n<li><p>Calculate the radii of both circles.\n\\[R = r1 + r2\\]</p></li>\n</ol>\n\n<p>If the radii is greater than or equal to the euclidean distance of both circles, then it's a valid circle with no collisions.</p>\n\n<pre><code>// Check for collision in a canvas\nconst checkForCollision = (newCircle) =&gt; {\n\n    let x2 = newCircle.x;\n    let y2 = newCircle.y;\n    let r2 = newCircle.radius;\n\n\n    // Determine the euclidean distance between two circle\n    // using Pythagorean Theorem.\n\n    // Refer to: \n    // https://en.wikipedia.org/wiki/Euclidean_distance\n\n    for(let i=0; i&lt;circles.length; i++) {\n\n        let otherCircle = circles[i];\n        let r1 = otherCircle.radius;\n        let x1 = otherCircle.x;\n        let y1 = otherCircle.y;\n        let xx = ((x2 - x1) * (x2 - x1));\n        let yy = ((y2 - y1) * (y2 - y1));\n        let radii = r2 + r1;\n        let euclidDistance = Math.sqrt(xx + yy);\n\n        if(radii &gt;= euclidDistance) {\n            return true;\n        }\n    }\n\n    // Check collision on top\n    if(x2 + r2 &gt;= width || \n        x2 - r2 &lt;= 0) {\n        return true;\n    }\n\n    // Check collision on bottom\n    if(y2 + r2 &gt;= width || \n        y2 - r2 &lt;= 0) {\n        return true;\n    }\n\n    //else return false\n    return false;\n}\n</code></pre>\n\n<h2>Conclusion</h2>\n\n<p>I'm thinking of implementing more generative patterns like <a href=\"https://en.wikipedia.org/wiki/Triangle_mesh\">Triangular Mesh</a> and Piet Mondrian's <a href=\"https://en.wikipedia.org/wiki/Composition_with_Red_Blue_and_Yellow\">Red, Blue and Yellow composition</a>.</p>\n\n<p>Hope you liked reading this article.</p>\n\n<p>Stay tuned for more!</p>\n", "index": 53}, {"section": "writings", "title": "Deploy your Laravel app on Heroku", "link": "writings/posts/deploy-your-laravel-app-on-heroku", "date": "November 29th, 2019", "date_alt": "29.11.2019", "year": "2019", "date_raw": "2019-11-29", "slug": "deploy-your-laravel-app-on-heroku", "category": "Tutorial", "categories": [{"title": "Tutorial", "link": "/category/tutorial/"}], "summary": "Learn how to deploy your Laravel application along with a database on Heroku.", "reading_time": "4 minutes read", "preview_image_url": "", "filename": "content/writings/52_2019_11_29_deploy-your-laravel-app-on-heroku.md", "status": "active", "content": "<p>In my <a href=\"/posts/getting-started-with-laravel-homestead\">previous article</a>, I talked about how to setup your environment for developing your Laravel applications. Today, I'll be talking about deploying your application along with a database on Heroku.</p>\n\n<p>I wrote a simple CRUD application using Laravel but didn't understand on how to host it. I tried to host it on free shared hosting service but apparently, most of them don't support PHP system calls like <mark>proc_open()</mark>. However, if it was a VPS hosting service, it's supported but ain't nobody got time for shelling out cash for a test drive.</p>\n\n<p>As an alternative, I went on google and discovered that Heroku does support my requirements and it worked flawlessly, which is why I thought of sharing this information to others as well.</p>\n\n<p>If you're a developer who's at the early stages of learning Laravel (like me &#x1f606;), then this article is for you.</p>\n\n<h2>Prerequisites</h2>\n\n<p>You'll be doing some minor configurations, so you should be fine as long as you have a stable internet connection, familiar with using the CLI (Command Line Interface) and have some PHP knowledge.</p>\n\n<p>If you're a Windows user, please <a href=\"https://gitforwindows.org\">Git for Windows</a>. Else, if you're a Linux or macOS user, you should be fine.</p>\n\n<h2>How to deploy?</h2>\n\n<p>You can ignore the first two steps if you already know about Heroku and how to work with it but please follow the rest of the steps:</p>\n\n<ol>\n<li><a href=\"#step-1\">Install Heroku</a></li>\n<li><a href=\"#step-2\">Create a Heroku repository</a></li>\n<li><a href=\"#step-3\">Define Procfile</a></li>\n<li><a href=\"#step-4\">Push Laravel app to repository</a></li>\n<li><a href=\"#step-5\">Add configuration variables</a></li>\n<li><a href=\"#step-6\">Setup your database</a></li>\n</ol>\n\n<h3><a id=\"step-1\"></a> Install Heroku CLI</h3>\n\n<p>You can install this directly from the command line by typing the following:</p>\n\n<pre><code>sudo snap install heroku --classic\n</code></pre>\n\n<h3><a id=\"step-2\"></a> Create a Heroku repository</h3>\n\n<p>If you don't have a Heroku account yet, <a href=\"https://heroku.com\">create an account</a> now and once you're done with that, type the following:</p>\n\n<pre><code>heroku login\n</code></pre>\n\n<p>Follow the login instructions from the command line prompt, fill in your login credentials and you'll be in!</p>\n\n<p>Once, you're done with that, create a repository by doing the following:</p>\n\n<pre><code>heroku create\n</code></pre>\n\n<p>In a few seconds, you'll get a randomly generated domain address, which is the link to your Heroku repository. If you can't remember the link, it's fine, you can make changes to it in your Heroku account.</p>\n\n<h3><a id=\"step-3\"></a> Define Procfile</h3>\n\n<p>In case, you don't know what's a Procfile, it's a file that specifies the commands that needs to be executed by the application on startup. You can declare a variety of process types, <a href=\"https://devcenter.heroku.com/articles/procfile\">click here</a> to learn more.</p>\n\n<p>Since our application is PHP based, we need to add some specific command that selects the server on boot, I chose Apache server for this project:</p>\n\n<pre><code>cd your_laravel_project\ntouch Procfile\necho \"web: vendor/bin/heroku-php-apache2 web/\" &amp;gt; Procfile\n</code></pre>\n\n<h3><a id=\"step-4\"></a> Push Laravel app to repository</h3>\n\n<p>It's similar to pushing your code into your GitHub, except this time, it's your Heroku repository. Type the following in your command line:</p>\n\n<pre><code>git add .\ngit commit -m \"pushing application to repo\"\ngit push heroku master\n</code></pre>\n\n<p>To check if your application is launched, type the following:</p>\n\n<pre><code>heroku open\n</code></pre>\n\n<p>At this stage, you might face <mark>Error 500</mark>, that's normal because we'll take care of that in the next step.</p>\n\n<h3><a id=\"step-5\"></a> Configure your Heroku environment</h3>\n\n<p>We need to add some config variables that changes the way your app behaves. So, let's start adding it:</p>\n\n<pre><code>heroku config:set APP_DEBUG=true\nheroku config:set APP_KEY=yourlaravelapplicationkey\nheroku config:set APP_URL=https://yourwebsite.herokuapp.com\nheroku config:set REDIRECT_HTTPS=true\n</code></pre>\n\n<p>In this configuration, you have done the following:\n- Enabled debug mode\n- Set your Laravel application's base64 encrypted key\n- The website's URL\n- Force HTTPS redirect (Useful, when you're calling external assets that uses HTTPS protocol)</p>\n\n<p><strong>Note:</strong> You can find your <mark>APP_KEY</mark> in your <mark>.env</mark> file that's found in your project directory.</p>\n\n<h3><a id=\"step-6\"></a> Setup your database</h3>\n\n<p>Initially, I built the database on MySQL but I later learnt that Heroku gives a free PostgreSQL starter database. I've never tried PostgreSQL before but it's quite similar to MySQL, so you shouldn't worry about your schema as Laravel supports PostgreSQL and MySQL databases by default.</p>\n\n<p>Type the following in the command line:</p>\n\n<pre><code>heroku addons:create heroku-postgresql:hobby-dev\n</code></pre>\n\n<p>This will create a PostgreSQL database and sets a <mark>DATABASE_URL</mark>, which contains the username and password to the database. To check it, type the following:</p>\n\n<pre><code>heroku config\n</code></pre>\n\n<p>Now, go to your project directory and open the <mark>config/database.php</mark>  file and add the following:</p>\n\n<pre><code>&lt;?php\n// Place these variables above\n$url = parse_url(getenv(\"DATABASE_URL\"));\n$host = $url[\"host\"]??null;\n$username = $url[\"user\"]??null;\n$password = $url[\"pass\"]??null;\n$database = substr($url[\"path\"], 1)??null;\n\n// Replace the default connection\n'default' =&gt; env('DB_CONNECTION', 'pgsql_prod'),\n\n// Under the connections attribute, create a new connection called 'pgsql_prod'\n'pgsql_production' =&gt; [\n    'driver' =&gt; 'pgsql',\n    'host' =&gt; $host,\n    'database' =&gt; $database,\n    'username' =&gt; $username,\n    'password' =&gt; $password,\n    'charset' =&gt; 'utf-8',\n    'prefix' =&gt; '',\n    'schema' =&gt; 'public',\n],\n?&gt;\n</code></pre>\n\n<p>Push the new changes to your repository:</p>\n\n<pre><code>git add .\ngit commit -m \"configured database\"\ngit push heroku master\n</code></pre>\n\n<p>One last step, we need to create the tables from your schema, so type the following:</p>\n\n<pre><code>heroku run php /app/artisan migrate --seed\n</code></pre>\n\n<p>Follow the command line prompt and voila, you have successfully deployed your Laravel application with a database on Heroku.</p>\n\n<h2>Conclusion</h2>\n\n<p>Well, I hope you found this article really useful especially if you're a beginner. If you do find this useful, please share it with others too!</p>\n\n<p>Stay tuned for more!</p>\n", "index": 52}, {"section": "writings", "title": "Getting started with Laravel Homestead", "link": "writings/posts/getting-started-with-laravel-homestead", "date": "November 16th, 2019", "date_alt": "16.11.2019", "year": "2019", "date_raw": "2019-11-16", "slug": "getting-started-with-laravel-homestead", "category": "Tutorial", "categories": [{"title": "Tutorial", "link": "/category/tutorial/"}], "summary": "Wanted to install Laravel but scared of configuring files on your host operating system? This article is for you.", "reading_time": "4 minutes read", "preview_image_url": "", "filename": "content/writings/51_2019_11_15_getting-started-with-laravel-homestead.md", "status": "active", "content": "<p>I started learning Laravel and I thought of writing a small tutorial on how to setup your own local development environment for Laravel projects with Laravel Homestead and Vagrant.</p>\n\n<h2>What is Laravel Homestead?</h2>\n\n<p>It's an official package from Laravel that provides a neat development environment that comes along with a Vagrant box that has pre-installed software. Read their <a href=\"https://laravel.com/docs/6.x/homestead\">documentation</a> to know more about it.</p>\n\n<p><strong>Note:</strong> The examples of this tutorial are applicable to any developer that uses any UNIX-based operating systems such as macOS or any Linux distributions like Ubuntu. If you're using Windows, I recommend that you install <a href=\"https://gitforwindows.org\">Git for Windows</a> on your local machine.</p>\n\n<h2>Prerequisites</h2>\n\n<p>The only requirement for this tutorial is that you should be familiar with using the command-line interface.</p>\n\n<h2>Install VirtualBox and Vagrant</h2>\n\n<p><a href=\"https://virtualbox.org\">VirtualBox</a> is the software used to run a virtual machine with a sandbox operating system within your own computer.</p>\n\n<p><a href=\"https://vagrantup.com\">Vagrant</a> is a software that's used to manage a development environment. Through the command-line, you can perform any operation such as installing an OS, configuration, deployment and so on.</p>\n\n<p>You can install VirtualBox and Vagrant via the command-line:</p>\n\n<pre><code>sudo apt install virtualbox vagrant\n</code></pre>\n\n<p>Once you're done installing them, you should add the <mark>laravel/homestead</mark> box to your Vagrant installation using the following command:</p>\n\n<pre><code>vagrant box add laravel/homestead\n</code></pre>\n\n<p>To check if it has been installed, use the following command:</p>\n\n<pre><code>vagrant box list | grep \"homestead\"\n</code></pre>\n\n<p>Using VirtualBox and Vagrant allows you to simulate your Laravel development environment without messing up any configurations on your hosting system. Even if you did, no worries, Vagrant boxes are disposable, so you can destroy and create a new box again in minutes.</p>\n\n<h2>Download Laravel Homestead</h2>\n\n<p>You can install Homestead by cloning it's repository onto your local machine by typing the following command:</p>\n\n<pre><code>git clone https://github.com/laravel/homestead.git ~/projects/Homestead\n</code></pre>\n\n<h3>Generate configuration file</h3>\n\n<p>Once you're done cloning the repository, go inside the <mark>projects/Homestead</mark> directory and run the <mark>init.sh</mark> or <mark>init.bat</mark> (for Windows) to create the <mark>Homestead.yaml</mark> configuration file:</p>\n\n<pre><code>cd projects/Homestead\nbash init.sh\n</code></pre>\n\n<p>Open the default <mark>Homestead.yaml</mark> file and make the following changes:</p>\n\n<pre><code>---\nip: \"192.168.10.10\"\nmemory: 2048\ncpus: 2\nprovider: virtualbox\n\nauthorize: ~/.ssh/id_rsa.pub\n\nkeys:\n    - ~/.ssh/id_rsa\n\nfolders:\n    - map: ~/projects/code\n      to: /home/vagrant/projects/code\n\nsites:\n    - map: homestead.test\n      to: /home/vagrant/projects/code/public\n\ndatabases:\n    - homestead\n</code></pre>\n\n<h3>Generate SSH key</h3>\n\n<p>The documentation for Laravel Homestead doesn't really talk about generating SSH keys used to access the Vagrant box. Use the following command to generate it using <mark>ssh-keygen</mark> on the command-line:</p>\n\n<pre><code>ssh-keygen -t rsa -C \"root@homestead\"\n</code></pre>\n\n<h3>Map the project's shared folder</h3>\n\n<p>Make sure that you have created a folder named <mark>code</mark> in your <mark>projects</mark> directory. This folder will keep all of your Laravel project files in sync between your local machine and Homestead environment.</p>\n\n<h2>Installing Laravel</h2>\n\n<p>Time to install Laravel into your virtual machine. So, get switch on your virtual machine by doing the following in the command-line:</p>\n\n<pre><code>vagrant up\n</code></pre>\n\n<p>As you're switching it on for the first time, depending on your internet connection, it might take somewhere around 10-20 minutes to getting it running but it'll be fine afterwards.</p>\n\n<p>Alright, login to your Vagrant machine by doing the following the command-line:</p>\n\n<pre><code>vagrant ssh\n</code></pre>\n\n<p>Once you're in, go to your <mark>code</mark> directory and type the following in the command-line:</p>\n\n<pre><code>composer global require laravel/installer\n</code></pre>\n\n<h2>Create a new project</h2>\n\n<p>Now, it's time to create a new Laravel project by simply typing the following command:</p>\n\n<pre><code>laravel new projectname\n</code></pre>\n\n<p>It'll take some time to generate the necessary files and boilerplate code and after that, you're good to go!</p>\n\n<p>Oh, you should be able to see the Laravel project files in your local machine as it's synced with the virtual machine and local machine. That means, any changes made on either machines will be synced and reflected on both ends.</p>\n\n<h2>Map your hosts file</h2>\n\n<p>One last step, make sure you map your project's test domain onto your local machine's <mark>hosts</mark> file.</p>\n\n<p>Open a text-editor of your choice and do the following in the <mark>etc/hosts</mark> file:</p>\n\n<pre><code>127.0.0.1   localhost\n::1         localhost\n\n# Add this line (Note: It can be any URL)\n127.0.0.1   homestead.test\n</code></pre>\n\n<p>Now, go to your browser and type <mark>homestead.test</mark> and you should be able to see your Laravel project's sample layout.</p>\n\n<h2>Conclusion</h2>\n\n<p>As mentioned, in the beginning of this article, I have started to learn Laravel and I'll be building some projects and writing out my experiences about it soon.</p>\n\n<p>I hope you liked reading this article and please share it with others if you do find this tutorial useful.</p>\n\n<p>Stay tuned for more!</p>\n", "index": 51}, {"section": "writings", "title": "Build your own Static Site Generator using Python", "link": "writings/posts/build-your-own-static-site-generator-using-python", "date": "October 27th, 2019", "date_alt": "27.10.2019", "year": "2019", "date_raw": "2019-10-27", "slug": "build-your-own-static-site-generator-using-python", "category": "Tutorial", "categories": [{"title": "Tutorial", "link": "/category/tutorial/"}], "summary": "Are you curious enough to build your own Static Site Generator? This article is for you.", "reading_time": "6 minutes read", "preview_image_url": "", "filename": "content/writings/50_2019_10_23_build-your-own-static-site-generator-using-python.md", "status": "active", "content": "<p>If you are curious about web development, you must have came across names like Jekyll, Hugo, Gatsby and more. These names that I mentioned are called Static Site generators. In fact, this website that you're on, is powered by a static site generator and I really like it so far.</p>\n\n<p>In today's article, you'll learn how to build your own Static Site Generator using Python, create a blog and host it on Netlify for free. Please note, that this is a basic tutorial that would show the bare-metals of this generator.</p>\n\n<p>These are the pre-requisities to this tutorial:</p>\n\n<ul>\n<li>Basic understanding of Python, Git, HTML and Markdown</li>\n<li>Basic knowledge of file I/O</li>\n<li>Know-how on using the command-line</li>\n</ul>\n\n<p>If you don't know them, it's okay, you can still do your own research on Google and learn on-the-go!</p>\n\n<p>Before we jump in, let's see why is it the latest craze!</p>\n\n<h2>Why is it popular?</h2>\n\n<p>Take a blog, it's a dynamic web application that consists of a lot of sections like blog posts, archives and categories. Each time, a user visits a blog post, it sends a GET request to the server, fetches the data, then generates a webpage along with the fetched data on-the-fly. However, with a static site generator, you only serve pre-rendered files, so you don't have to generate or create anything on-the-fly, it's already there!</p>\n\n<p>Apart from that, applications like a blog are usually database-dependant and you need to host it somewhere with a price. Not only that, but it does have security risks. With static site generators, you write your content on a markdown file and then convert it into static HTML files, which can then be used to host your website on services like GitHub Pages or Netlify for free and you don't have to worry about any security issues.</p>\n\n<h2>What are the functionalities?</h2>\n\n<p>These are the functionalities that we'd require in a blog:</p>\n\n<ul>\n<li>Display all blog articles</li>\n<li>Pagination module</li>\n<li>A page for each article</li>\n</ul>\n\n<p>So, let's go ahead and start with building the project.</p>\n\n<h2>Time to build it!</h2>\n\n<p>Let's plan before we dive in straight into coding it. This is the file structure we'll be following in this tutorial:</p>\n\n<h3>Create file structure</h3>\n\n<p>This is the file structure we're going to follow in this tutorial, so create it before you proceed with the tutorial.</p>\n\n<pre><code>\\blog-ssg\n    \\content\n    \\output\n    \\templates\n    make_entry.py\n    ssg.py\n    ssglib.py\n</code></pre>\n\n<p>Next, install the following dependencies using <mark>pip</mark>:</p>\n\n<pre><code>pip install markdown2\npip install jinja2\n</code></pre>\n\n<h3>Generate markdown files</h3>\n\n<p>Go to your <mark>make_entry.py</mark> file and copy-paste this code. This will be used to generate markdown file for you to edit instead of having to create it manually all the time.</p>\n\n<pre><code>import os, sys\nfrom glob import glob\nfrom datetime import datetime\n\n# This is the Markdown template\nTEMPLATE = \"\"\"\ntitle: {title}\ndate: {date}\nslug: {slug}\ncategory: Write category here.\nsummary: Write summary here.\n\nWrite content here.\n\"\"\"\n\ndef suffix(d):\n    return 'th' if 11&lt;=d&lt;=13 else {'1':'st', '2':'nd', '3':'rd'}.get(d%10, 'th')\n\ndef custom_strftime(format, t):\n    return t.strftime(format).replace('{S}', str(t.day) + suffix(t.day))\n\n# Generate file number by looking at the number blog articles in the directory\ndef gen_file_no(file_path, existing_files):\n    \"\"\"\n        If no files are found,\n        then this is the first file.\n    \"\"\"\n    if not existing_files:\n        return 1\n\n    \"\"\"\n        Look for the biggest file number\n        and return the bigger one\n    \"\"\"\n    prefixes = [filename.replace(file_path,\"\")[:2] for filename in existing_files]\n    biggest_prefix = max(prefixes, key= lambda n: int(n))\n    return int(biggest_prefix) + 1\n\n# Generate slug for the blog article\ndef gen_slug(title):\n    title = \"\".join(x for x in title if x.isalnum() or x == ' ')\n    title = title.lower().strip(\"\").replace(' ','-')\n    return title\n\n# Create entry\ndef make_entry(title, file_type):\n    if file_type == \"articles\":\n        file_path = \"content/\" + file_type + \"/\"\n\n        # Create folders if they didn't exist\n        if not os.path.exists(file_path):\n            os.makedirs(os.path.dirname(file_path))\n\n        today = datetime.today()\n\n        slug = gen_slug(title)\n        file_no = gen_file_no(file_path, existing_files=glob(file_path + \"*.md\"))\n        blog_file_path = file_path + \"{:0&gt;2}_{}_{:0&gt;2}_{:0&gt;2}_{}.md\".format(file_no, today.year, today.month, today.day, slug)\n\n        post_date = datetime.strptime(str(today.date()), '%Y-%m-%d')\n        post_date = custom_strftime('%B {S}, %Y', post_date)\n\n        t = TEMPLATE.strip().format(title=title,\n            year=today.year,\n            month=today.month,\n            date=post_date,\n            slug=slug)      \n\n        with open(blog_file_path, 'w') as w:\n            w.write(t)\n\n        print blog_file_path\n\nif __name__ == '__main__':\n    if len(sys.argv) &gt; 1:\n        make_entry(sys.argv[1], sys.argv[2])\n    else:\n    print \"Enter blog title and article type\"\n</code></pre>\n\n<p>To create a blog entry, just type this in your terminal:</p>\n\n<pre><code>python make_entry.py \"Article Name\" articles\n</code></pre>\n\n<h3>Create a library</h3>\n\n<p>This library must have the following functionalities:</p>\n\n<ul>\n<li><a href=\"#stub-1\">Fetch content from Markdown files</a></li>\n<li><a href=\"#stub-2\">Create templates</a></li>\n<li><a href=\"#stub-3\">Generate index page</a></li>\n<li><a href=\"#stub-4\">Generate articles from Markdown to HTML</a></li>\n<li><a href=\"#stub-5\">Generate pagination module</a></li>\n<li><a href=\"#stub-6\">Generate blog</a></li>\n</ul>\n\n<p>So, create a new file named <mark>ssglib.py</mark> and let's do each of the functionality step-by-step to gain a deeper understanding of each method/function in the library.</p>\n\n<p>Before that, add the following lines to the file:</p>\n\n<pre><code>import os, random, sys\nfrom datetime import datetime\nfrom jinja2 import Environment, PackageLoader\nfrom markdown2 import markdown\nfrom argparse import Namespace\n\n# Jinja2 Environment\nenv = Environment(loader=PackageLoader('ssg','templates'))\n</code></pre>\n\n<h4><a id=\"stub-1\"></a> Fetch content from Markdown files</h4>\n\n<p>This method will fetch content from all of the Markdown files that resides in the <mark>content/articles</mark> folder.</p>\n\n<pre><code># Get Markdown files from content directory\ndef get_markdown_files(section):\n    POSTS = {}\n\n    file_path = 'content/'\n\n    for md_file in os.listdir(file_path):\n        md_file_path = os.path.join(file_path, md_file)\n\n        # if it's not a directory, read it\n        if not os.path.isdir(md_file_path):\n            with open(md_file_path, 'r') as file:\n                POSTS[md_file] = markdown(file.read(), extras=['metadata'])\n\n    return POSTS\n</code></pre>\n\n<h4><a id=\"stub-2\"></a> Create templates</h4>\n\n<p>You'll need to create two templates, one for home page and the other is for your articles. All templates will reside in the <mark>templates</mark> folder.</p>\n\n<p>This is the template for the home page of your blog and you can name this as <mark>index.html</mark>:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;My Blog&lt;/title&gt;\n    &lt;base href=\"/\"/&gt;\n    &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;main&gt;\n        &lt;div class=\"posts-list\"&gt;\n            {% for post in posts %}\n            &lt;a href=\"posts/{{ post.slug }}/\"&gt;\n                &lt;p&gt;{{ post.date }} &amp;mdash; {{ post.title }}&lt;/p&gt;\n            &lt;/a&gt;\n            {% endfor %}\n        &lt;/div&gt;\n\n        &lt;div class=\"paginator\"&gt;\n            {% if curr == 2 %}\n                &lt;a class=\"prev\" href=\"/\" rel=\"prev\"&gt;Newer&lt;/a&gt;\n            {% elif prev != 0 %}\n                &lt;a class=\"prev\" href=\"/pages/{{prev}}\" rel=\"prev\"&gt;Newer&lt;/a&gt;\n            {% else %}\n                &lt;a class=\"prev inactive\"&gt;Newer&lt;/a&gt;\n            {% endif %}\n\n            &lt;p&gt;{{curr}} &lt;span&gt;of&lt;/span&gt; {{total}}&lt;/p&gt;\n\n            {% if next != 0 %}\n                &lt;a class=\"next\" href=\"/pages/{{next}}\" rel=\"next\"&gt;Older&lt;/a&gt;\n            {% else %}\n                &lt;a class=\"next inactive\"&gt;Older&lt;/a&gt;\n            {% endif %}\n        &lt;/div&gt;\n\n    &lt;/main&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>This is the template for the article page and you can name this as <mark>article.html</mark>:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;{{ post.title }}&lt;/title&gt;\n    &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;meta name=\"author\" content=\"Your name\"&gt;\n    &lt;meta name=\"description\" content=\"{{ post.summary }}.\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;main class=\"article-main\"&gt;\n        &lt;div class=\"article-info\"&gt;\n            &lt;div&gt;\n                &lt;h5&gt;{{ post.category }}&lt;/h5&gt;\n                &lt;h1&gt;{{ post.title }}&lt;/h1&gt;\n                &lt;p&gt;{{ post.summary }}&lt;/p&gt;\n                &lt;h6&gt;Your name &amp;mdash; {{ post.date }}&lt;/h6&gt;\n            &lt;/div&gt;    \n        &lt;/div&gt;\n        &lt;article class=\"article-container\"&gt;\n            &lt;div class=\"content\"&gt;\n            {{ post.content }}\n            &lt;/div&gt;\n        &lt;/article&gt;\n    &lt;/main&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Though, this is just a bare-bone template, you can be creative and make your own changes to it by making it visually-appealing!</p>\n\n<h4><a id=\"stub-3\"></a> Generate index page</h4>\n\n<p>This method will create your index page. The index page will contain the links for each article.</p>\n\n<pre><code>def index(POSTS, isPaginate=True):\n    posts_metadata = get_posts_metadata(POSTS)\n    if not isPaginate:\n        template = env.get_template('index-alt.html')\n        html_content = template.render(posts=posts_metadata)\n        index_path = 'output/index.html'\n        write_to_file(index_path, html_content.encode('utf-8'))\n    else:\n        args = {\n            \"template\": env.get_template('index.html'),\n            \"posts_metadata\": posts_metadata,\n\n            # Keeps tracks the current post\n            \"curr_posts_index\": 0,\n\n            # Total number of posts\n            \"total_posts\": len(POSTS),\n\n            # Number of posts per page\n            \"posts_per_page\": 8,\n\n            # Directory to hold the pages\n            \"main_pages_path\": \"output/pages/\"\n        }\n        pagination(args)\n</code></pre>\n\n<h4><a id=\"stub-4\"></a> Generate articles from Markdown to HTML</h4>\n\n<p>This method will convert your Markdown content into HTML pages. One thing to note, each blog post will have it's own folder name with it's own slug and <mark>index.html</mark> file, so that it'll be easier to access the article.</p>\n\n<pre><code># Generate all posts\ndef articles(POSTS, post_template):\n    for post in POSTS:\n        post_metadata = POSTS[post].metadata\n        post_data = {\n            'content': POSTS[post],\n            'slug': post_metadata['slug'],\n            'title': post_metadata['title'],\n            'summary': post_metadata['summary'],\n            'category': post_metadata['category'],\n            'date': post_metadata['date']\n        }\n        post_html_content = post_template.render(post=post_data)\n        post_file_path = 'output/posts/{slug}/index.html'.format(slug=post_metadata['slug'])\n        create_directory(post_file_path)\n        write_to_file(post_file_path, post_html_content.encode('utf-8'))\n</code></pre>\n\n<h4><a id=\"stub-5\"></a> Generate pagination module</h4>\n\n<p>Depending on the amount of blog articles you want to display, it will create <strong><em>total number of posts / article per page</em></strong> pages on the home page. They will look identical to the index page and these pages will be created in <mark>output/pages</mark> folder.</p>\n\n<pre><code># Pagination module\ndef pagination(args):\n\n    x = Namespace(**args)\n\n    # Number of pages (for pagination)\n    num_pages = (x.total_posts/x.posts_per_page)\n\n    # Create a page directory, if it doesn't exist\n    create_directory(x.main_pages_path) \n\n    for pagenum in range(0, num_pages+1):\n        # This will contain metadata of every x number of posts per page\n        page_metadata = []\n        page_path = \"\"\n        curr_page = pagenum+1\n\n        if curr_page == 1:\n            page_path = \"output/index.html\" \n        else:\n            page_path = \"output/pages/{page}/index.html\".format(page=curr_page)\n\n        create_directory(page_path)\n\n        # Internal counter to keep track of posts per page\n        posts_counter = 0\n\n        for j in range(x.curr_posts_index, len(x.posts_metadata)):\n            page_metadata.append(x.posts_metadata[j])\n            posts_counter = posts_counter+1\n\n            # If it reached it's limit, break\n            if posts_counter == x.posts_per_page:\n                x.curr_posts_index = j+1\n                break\n\n        # Create links for previous and next pages\n        prev_page = 0 if curr_page == 1 else curr_page-1\n        next_page = 0 if curr_page == num_pages+1 else curr_page+1\n\n        # Render the page\n        html_content = x.template.render(\n            posts=page_metadata, \n            curr=curr_page,\n            prev=prev_page, \n            next=next_page,\n            total=num_pages+1\n        )\n\n        write_to_file(page_path, html_content.encode('utf-8'))\n</code></pre>\n\n<h4><a id=\"stub-6\"></a> Generate blog</h4>\n\n<p>This is the main function that will generate the entire blog including all of the article pages.</p>\n\n<pre><code># Generate blog -- Main function\ndef main(section):\n    sections = ['articles']\n    if section in sections:\n        POSTS = get_markdown_files(section)\n        if section == \"articles\":\n            posts_template = env.get_template('article.html')\n            index(POSTS, True)\n            articles(POSTS, posts_template)\n    else:\n        print \"This section doesn't exist.\"\n</code></pre>\n\n<p>Take a look at the source code for both <mark>ssglib.py</mark> and <mark>ssg.py</mark> and feel free to tinker around with it.</p>\n\n<p><strong>Source code for</strong> <mark>ssglib.py</mark>:</p>\n\n<pre><code>#!usr/bin/python\nimport os, random, sys\nfrom datetime import datetime\nfrom jinja2 import Environment, PackageLoader\nfrom markdown2 import markdown\nfrom argparse import Namespace\n\n# Jinja2 Environment\nenv = Environment(loader=PackageLoader('ssg','templates'))\n\n# Write to file\ndef write_to_file(path, content):\n    with open(path, 'w') as file:\n        file.write(content)\n        file.close()\n\n# Create directory\ndef create_directory(path):\n    if not os.path.exists(path):\n        os.makedirs(os.path.dirname(path))\n\n# Get Markdown files from content directory\ndef get_markdown_files(section):\n    POSTS = {}\n\n    file_path = 'content/'\n\n    for md_file in os.listdir(file_path):\n        md_file_path = os.path.join(file_path, md_file)\n\n        # if it's not a directory, read it\n        if not os.path.isdir(md_file_path):\n            with open(md_file_path, 'r') as file:\n                POSTS[md_file] = markdown(file.read(), extras=['metadata'])\n\n    return POSTS\n\n\"\"\"\nCollect metadata of all the posts\nfor home page and sort them \nin reversed order\n\n@param: \n    POSTS =&gt; Dictionary\n\"\"\"\ndef get_posts_metadata(POSTS):\n    posts_metadata = []\n    for k,v in sorted(POSTS.items(), reverse=True):\n        posts_metadata.append(v.metadata)\n    return posts_metadata\n\n\"\"\"\n    @params:\n    POSTS =&gt; Dictionary\n    template =&gt; jinja template\n    isPaginate =&gt; boolean to enable pagination\n\"\"\"\ndef index(POSTS, isPaginate=True):\n\n    posts_metadata = get_posts_metadata(POSTS)\n\n    if not isPaginate:\n        template = env.get_template('index-alt.html')\n        html_content = template.render(posts=posts_metadata)\n        index_path = 'output/index.html'\n        write_to_file(index_path, html_content.encode('utf-8'))\n\n    else:\n        args = {\n            \"template\": env.get_template('index.html'),\n            \"posts_metadata\": posts_metadata,\n\n            # Keeps tracks the current post\n            \"curr_posts_index\": 0,\n\n            # Total number of posts\n            \"total_posts\": len(POSTS),\n\n            # Number of posts per page\n            \"posts_per_page\": 8,\n\n            # Directory to hold the pages\n            \"main_pages_path\": \"output/pages/\"\n        }\n\n        pagination(args)\n\n# Generate all posts\ndef articles(POSTS, post_template):\n    for post in POSTS:\n        post_metadata = POSTS[post].metadata\n        post_data = {\n            'content': POSTS[post],\n            'slug': post_metadata['slug'],\n            'title': post_metadata['title'],\n            'summary': post_metadata['summary'],\n            'category': post_metadata['category'],\n            'date': post_metadata['date']\n        }\n        post_html_content = post_template.render(post=post_data)\n        post_file_path = 'output/posts/{slug}/index.html'.format(slug=post_metadata['slug'])\n        create_directory(post_file_path)\n        write_to_file(post_file_path, post_html_content.encode('utf-8'))\n\n# Generate pages\ndef pagination(args):\n\n    x = Namespace(**args)\n\n    # Number of pages (for pagination)\n    num_pages = (x.total_posts/x.posts_per_page)\n\n    # Create a page directory, if it doesn't exist\n    create_directory(x.main_pages_path) \n\n    for pagenum in range(0, num_pages+1):\n        # This will contain metadata of every x number of posts per page\n        page_metadata = []\n        page_path = \"\"\n        curr_page = pagenum+1\n\n        if curr_page == 1:\n            page_path = \"output/index.html\" \n        else:\n            page_path = \"output/pages/{page}/index.html\".format(page=curr_page)\n\n        create_directory(page_path)\n\n        # Internal counter to keep track of posts per page\n        posts_counter = 0\n\n        for j in range(x.curr_posts_index, len(x.posts_metadata)):\n            page_metadata.append(x.posts_metadata[j])\n            posts_counter = posts_counter+1\n\n            # If it reached it's limit, break\n            if posts_counter == x.posts_per_page:\n                x.curr_posts_index = j+1\n                break\n\n        # Create links for previous and next pages\n        prev_page = 0 if curr_page == 1 else curr_page-1\n        next_page = 0 if curr_page == num_pages+1 else curr_page+1\n\n        # Render the page\n        html_content = x.template.render(\n            posts=page_metadata, \n            curr=curr_page,\n            prev=prev_page, \n            next=next_page,\n            total=num_pages+1\n        )\n        write_to_file(page_path, html_content.encode('utf-8'))\n\n# Generate blog -- Main function\ndef main(section):\n    sections = ['articles']\n    if section in sections:\n        POSTS = get_markdown_files(section)\n        if section == \"articles\":\n            posts_template = env.get_template('article.html')\n            index(POSTS, True)\n            articles(POSTS, posts_template)\n    else:\n        print \"This section doesn't exist.\"\n</code></pre>\n\n<p><strong>Source code for</strong> <mark>ssglib.py</mark></p>\n\n<pre><code>import ssglib\nfrom ssglib import (os, random, sys, datetime, \nEnvironment, PackageLoader, markdown)\n\nif __name__ == '__main__':\n    if len(sys.argv) &gt; 1:\n        ssglib.main(sys.argv[1])\n    else:\n        print \"Enter section name you want to generate.\"\n</code></pre>\n\n<p>To generate your blog, type the following in your command-line:</p>\n\n<pre><code>python ssg.py articles\n</code></pre>\n\n<p>Make sure you have a local HTTP server running on your computer, if you don't install this using NPM on your command-line:</p>\n\n<pre><code>npm i live-server\n</code></pre>\n\n<p>Alright, your blog is generated and now, it's time to launch it to the internet!</p>\n\n<h3>Deploy project on Netlify</h3>\n\n<p>As I had mentioned in the previous article, I'm currently hosting my blog on Netlify. If you want to know more about it, <a href=\"/posts/migrating-to-netlify\">click here</a>.</p>\n\n<p>Let's go through the steps to deploying your blog:</p>\n\n<h4>1. Create a GitHub repository</h4>\n\n<p>If you have a GitHub account, continue reading. If not, <a href=\"https://github.com\">go here</a>.</p>\n\n<p>Create a repository with any name you like and push all your files into the repository.</p>\n\n<h4>2. Connect to Netlify</h4>\n\n<p>Create an account on Netlify.com and then connect to your GitHub account. After that, you have to select the repository that has your static files (Not the python code).</p>\n\n<h4>3. Sit and Relax</h4>\n\n<p>At this stage, your blog will be deployed automatically and you'll be given a unique URL to view your website.</p>\n\n<p>If you have a custom domain, I suggest you follow the instructions and make the necessary changes in the <mark>CNAME</mark> and <mark>A</mark> records.</p>\n\n<p>Don't worry about the SSL certificate, it does take some time to activate, it took me like 7-8 hours to get it working.</p>\n\n<h2>Conclusion</h2>\n\n<p>If you've completed this tutorial, give a yourself a pat in the back because now you know how static site generators work and you've built and hosted your own blog on the internet.</p>\n\n<p>Hope you liked reading this article and please share it to others too!</p>\n\n<p>Stay tuned for more!</p>\n", "index": 50}, {"section": "writings", "title": "Migrating to Netlify", "link": "writings/posts/migrating-to-netlify", "date": "September 14th, 2019", "date_alt": "14.09.2019", "year": "2019", "date_raw": "2019-09-14", "slug": "migrating-to-netlify", "category": "Update", "categories": [{"title": "Update", "link": "/category/update/"}], "summary": "My thoughts on why I made the switch and how it improves my workflow.", "reading_time": "3 minutes read", "preview_image_url": "", "filename": "content/writings/49_2019_09_14_migrating-to-netlify.md", "status": "active", "content": "<p>When I converted my website to a static site using a custom-built static site generator using Python, I came across topics like <strong><em>\"Hosting your website on GitHub Pages\"</em></strong>. At the time, I thought that I didn't really need it because my website was hosted on <a href=\"https://www.hostinger.in\">Hostinger</a> and it pretty much had everything that I needed until it started to get on my nerves.</p>\n\n<p>Recently, my blog had been facing a lot of issues such as my website would face random downtime, hosting prices wasn't consistent and the FTP service for it was really annoying.</p>\n\n<p>So, I decided that I need to find a better hosting service for my blog.</p>\n\n<h2>Exploring GitHub Pages</h2>\n\n<p>Setting up your website was pretty easy using GitHub Pages, all you have to do was create a repository named <mark>websitename.github.io</mark> and you're done.</p>\n\n<p>Plus, unlike other hosting services, GitHub Pages hosts your website for free. That sounded like really amazing and it has really good security, caching and speed too.</p>\n\n<p>However, it was my first choice and like every other free hosting services, it does come with a few drawbacks that didn't fit my requirements. GitHub Pages offers a bandwidth limit of <strong><em>1GB</em></strong> and it didn't have good custom domain support. Also, I read that it had weird caching issues once you commit your changes to your repository.</p>\n\n<h2>Here comes, Netlify!</h2>\n\n<p>When I discovered Netlify, I was happy because it had free hosting, good custom domain support and a <strong><em>100GB</em></strong> soft bandwidth, which is really fitting my requirements.</p>\n\n<p>According to Netlify:</p>\n\n<blockquote>\n  <p>Make your site or web-app many times faster by bringing it closer to your users.</p>\n</blockquote>\n\n<p>The cool thing is that your website is not only pushed to a single server but to a global network of CDN nodes that can handle operations like automatic caching, smart rewrite and redirect rules and yes, blazing, fast loading speeds.</p>\n\n<p>Hosting your website on Netlify is simple as few clicks, all you have to do is upload your website on a Git repository then connect it to Netlify and it will deploy your website in less than 5 minutes.</p>\n\n<p>Updating my blog is easier now as now I just have to push my new commits to my GitHub repo and Netlify would automatically deploy it. Goodbye, FTP!</p>\n\n<h2>Configuring HTTPS and custom domain settings</h2>\n\n<p>Since I have a custom domain, I configured my domain to point to Netlify's load balancer IP address by changing the <mark>A</mark> and <mark>CNAME</mark> records in the DNS Zone editor. The HTTPS/SSL part was a bit annoying and it took some time, like 5-6 hours, but apart from that, it was a great experience in migrating to Netlify.</p>\n\n<h2>Conclusion</h2>\n\n<p>In short, my blog's static files are hosted on GitHub and automatically deployed on Netlify for free. I do have some future plans, like trying to roll out a commenting engine and light/dark themes for the blog.</p>\n\n<p>Hope you liked reading this article!</p>\n\n<p>Stay tuned!</p>\n", "index": 49}, {"section": "writings", "title": "Minesweeper Clone", "link": "writings/posts/minesweeper-clone", "date": "September 6th, 2019", "date_alt": "06.09.2019", "year": "2019", "date_raw": "2019-09-06", "slug": "minesweeper-clone", "category": "Personal Challenge", "categories": [{"title": "Personal Challenge", "link": "/category/personal-challenge/"}], "summary": "Wrote an old classic puzzle game using Javascript.", "reading_time": "2 minutes read", "preview_image_url": "", "filename": "content/writings/48_2019_09_06_minesweeper.md", "status": "active", "content": "<iframe src=\"/static/projects/minesweeper\" width='500' height='590'></iframe>\n\n<p>Before you read this article, play with the above game. The rule is simple, reveal one cell at a time by clicking on them, If the cell you've clicked on is clear, you'll see the number of mines that's adjacent to it. Else, if it's a mine, then all mines will explode and you lose the game. Reload the game by clicking the <strong><em>Reset</em></strong> button.</p>\n\n<p>The source code of the game can be found <a href=\"https://github.com/megacolorboy/BlogProjects/tree/master/minesweeper\">over here</a>.</p>\n\n<h2>Background</h2>\n\n<p>It's a classical puzzle game that gained immense popularity when it came along with Windows 3.1 OS. To be honest, I never really had any experience playing this game until a few days ago, I had a sudden curiosity as to how it works. I studied it's game mechanics on Wikipedia and it turned to be simple enough to write a clone in Javascript.</p>\n\n<h2>Game mechanics</h2>\n\n<p>What makes it interesting to play is it's simplicity in which all that matters is that you shouldn't click the cell that goes \"KABOOM!\".</p>\n\n<p>Here are some of the game mechanics:</p>\n\n<ul>\n<li><a href=\"#generate-cells\">Generate cells</a></li>\n<li><a href=\"#place-mines\">Placing the mines</a></li>\n<li><a href=\"#reveal-mines\">Reveal the mines</a></li>\n<li><a href=\"#scan-mines\">Scan for mines</a></li>\n<li><a href=\"#level-complete\">Level completion</a></li>\n</ul>\n\n<h3><a id=\"generate-cells\"></a> Generate cells</h3>\n\n<p>Generating the grid is pretty much straightforward. Each cell will have an attribute named <mark>data-mine</mark> with a boolean value of <mark>true</mark> or <mark>false</mark>.</p>\n\n<pre><code>//Generate minesweeper grid\nconst generateGrid = () =&gt; {\n    allowClick = true;\n    grid.innerHTML = \"\";\n    for(let i=0; i&amp;lt;size; i++) {\n        let row = grid.insertRow(i);\n        for(let j=0; j&amp;lt;size; j++) {\n            let cell = row.insertCell(j);\n            cell.onclick = function(){clickCell(this);}\n            let mine = document.createAttribute(\"data-mine\");\n            mine.value = \"false\";\n            cell.setAttributeNode(mine);\n        }\n    }\n    setMines();\n}\n</code></pre>\n\n<h3><a id=\"place-mines\"></a> Placing the mines</h3>\n\n<p>After the grid is generated, a mine will be added to each random cell.</p>\n\n<pre><code>//Set mines\nconst setMines = () =&gt; {\n    for(let i=0; i&amp;lt;size*2; i++) {\n        let r = Math.floor(Math.random() * size);\n        let c = Math.floor(Math.random() * size);\n        let cell = grid.rows[r].cells[c];\n        cell.setAttribute(\"data-mine\", \"true\");\n        if(testMode){cell.innerHTML = \"&amp;#x1f4a3;\";}\n    }\n}\n</code></pre>\n\n<h3><a id=\"reveal-mines\"></a> Reveal the mines</h3>\n\n<p>If you've clicked on a mine, every cell that has a mine will be exposed and then it's game over.</p>\n\n<pre><code>//Reveal mines\nconst revealMines = () =&gt; {\n    for(let i=0; i&amp;lt;size; i++) {\n        for(let j=0; j&amp;lt;size; j++) {\n            let cell = grid.rows[i].cells[j];\n            if(cell.getAttribute(\"data-mine\") === \"true\") {\n                cell.className = \"mine\";\n                cell.innerHTML = \"&amp;#x1f4a3;\";\n            }\n        }\n    }\n}\n</code></pre>\n\n<h3><a id=\"scan-mines\"></a> Scan for mines</h3>\n\n<p>When you click on a tile, there are 2 possibilities i.e. either the cell is a mine or not.</p>\n\n<p>If it's a mine, we know what happens, it's self explanatory. If it's not a mine, what happens then? Well, it'll start scanning for mines that are adjacent to it in all eight directions:</p>\n\n<table class=\"table\">\n    <tr>\n        <th>Direction</th>\n        <th>Coordinates</th>\n    </tr>\n    <tr>\n        <td>Top</td><td>(row - 1, col)</td>\n    </tr>\n    <tr>\n        <td>Bottom</td><td>(row + 1, col)</td>\n    </tr>\n    <tr>\n        <td>Left</td><td>(row, col - 1)</td>\n    </tr>\n    <tr>\n        <td>Right</td><td>(row, col + 1)</td>\n    </tr>\n    <tr>\n        <td>Top Left</td><td>(row - 1, col - 1)</td>\n    </tr>\n    <tr>\n        <td>Top Right</td><td>(row - 1, col + 1)</td>\n    </tr>\n    <tr>\n        <td>Bottom Left</td><td>(row + 1, col - 1)</td>\n    </tr>\n    <tr>\n        <td>Bottom Right</td><td>(row + 1, col + 1)</td>\n    </tr>\n</table>\n\n<p>If there aren't any mines adjacent to it, it'll reveal all adjacent cells via recursion.</p>\n\n<pre><code>    //Click a cell\n    const clickCell = (cell) =&gt; {\n        if(allowClick != false) {\n            //If it's a mine, game over\n            if(cell.getAttribute(\"data-mine\") === \"true\") {\n                alert(\"game over\");\n                revealMines();\n                allowClick = false;\n            }\n            //If it's not a mine, reveal the mines\n            else {\n                //Mark it as \"clicked\"\n                cell.className = \"clicked\";\n                scanForMines(cell);\n                checkGameStatus();\n            }       \n        }\n    }\n\n    //Scan for mines that are adjacent to the cell\n    const scanForMines = (cell) =&gt; {\n        let rowPos = cell.parentNode.rowIndex;\n        let colPos = cell.cellIndex;\n        let mineCount = 0;\n\n        for(let i=Math.max(rowPos-1, 0); i&amp;lt;Math.min(rowPos+1, size-1); i++) {\n            for(let j=Math.max(colPos-1, 0); j&amp;lt;Math.min(colPos+1, size-1); j++) {\n                let adjacentCell = grid.rows[i].cells[j];\n                if(adjacentCell.getAttribute(\"data-mine\") == \"true\") {\n                    mineCount++;\n                }\n            }\n        }\n\n        cell.innerHTML = mineCount &gt; 0 ? mineCount : \" \";\n\n        //If zero mines, then reveal all adjacent cells\n        if(mineCount == 0) {\n            for(let i=Math.max(rowPos-1, 0); i&amp;lt;Math.min(rowPos+1, size-1); i++) {\n                for(let j=Math.max(colPos-1, 0); j&amp;lt;Math.min(colPos+1, size-1); j++) {\n                    let adjacentCell = grid.rows[i].cells[j];\n                    if(adjacentCell.innerHTML == \"\") {\n                        clickCell(adjacentCell);\n                    }\n                }\n            }\n        }\n    }\n</code></pre>\n\n<h3><a id=\"level-complete\"></a> Level completion</h3>\n\n<p>If the player completed the game without clicking on any mine, the level is complete.</p>\n\n<pre><code>    //Check game status\n    const checkGameStatus = () =&gt; {\n        let levelComplete = true;\n        for(let i=0; i&amp;lt;size; i++) {\n            for (let j=0; j&amp;lt;size; j++) {\n                var cell = grid.rows[i].cells[j];\n                if((cell.getAttribute(\"data-mine\") == \"false\") &amp;&amp; (cell.innerHTML == \"\")) {\n                    levelComplete = false;\n                }\n            }\n        }\n\n        if(levelComplete) {\n            alert(\"Congratulations, you won!\");\n            revealMines();\n        }\n    }\n</code></pre>\n\n<h2>Conclusion</h2>\n\n<p>Well, that's about it. I had fun writing this game. Do you want me to build more games like this? Send me an email about it and I'll see what I can do from my end.</p>\n\n<p>Have fun playing the game and oh, don't blow yourself up! &#x1F61C;</p>\n\n<p>Hope you liked reading this article!</p>\n\n<p>Stay tuned for more!</p>\n", "index": 48}, {"section": "writings", "title": "Optimize your website performance", "link": "writings/posts/optimize-your-website-performance", "date": "July 25th, 2019", "date_alt": "25.07.2019", "year": "2019", "date_raw": "2019-07-25", "slug": "optimize-your-website-performance", "category": "Tips", "categories": [{"title": "Tips", "link": "/category/tips/"}], "summary": "Sharing my experiences on website optimization.", "reading_time": "9 minutes read", "preview_image_url": "", "filename": "content/writings/47_2019_07_25_optimize-your-website-performance.md", "status": "active", "content": "<p>This article is directed towards audiences who are keen on making their websites and web applications load faster and perform better.</p>\n\n<p>I won't be focusing on the SEO (Search Engine Optimization) part of it but rather, I'll be covering on how to overcome performance bottleneck issues. If you want to know more about SEO, you can go <a href=\"http://lmgtfy.com/?q=SEO+Optimization\">here</a>.</p>\n\n<p>Recently, I boosted my company's <a href=\"https://www.kit.ae\">website</a> from a lagging 10-30 seconds (I know, that's really embarassing!) to a smooth 1.7 to 2.5 seconds load speed, so that's why I thought of sharing my experiences and tips on this article.</p>\n\n<p>Before we get there, let's first understand what could probably make your website perform bad or load slowly. Afterwards, there'll be some strategies on how you could fix those issues and make it optimal.</p>\n\n<h2>Why is my website so slow?</h2>\n\n<p>You're not a developer if you've never heard this in your day-to-day life. In today's era, the standard average page load time is under 3 seconds, anything more than that, you might lose a visitor and that can affect your website's SEO in the long run.</p>\n\n<p>Here are some of the reasons, in my opinion:</p>\n\n<ul>\n<li><a href=\"#reason1\">Too many HTTP requests</a></li>\n<li><a href=\"#reason2\">Inefficient database calls/queries</a></li>\n<li><a href=\"#reason3\">Images aren't optimized</a></li>\n<li><a href=\"#reason4\">Improper page caching</a></li>\n<li><a href=\"#reason5\">Your codebase stinks</a></li>\n<li><a href=\"#reason6\">Shared Hosting Service</a></li>\n</ul>\n\n<h3><a id=\"reason1\"></a> Too many HTTP requests</h3>\n\n<p>According to GTMetrix, a web page should have an average of 92 requests but there are websites that have over 100+ requests and that's crazy, especially, if you try to access the website on a slower network.</p>\n\n<p>There can be many factors that contributes to an increase in HTTP requests:</p>\n\n<ul>\n<li>Too many images on a page</li>\n<li>CSS and JS files are not compressed and minified</li>\n<li>Calling external libaries like jQuery or Bootstrap from a Content-Delivery Network</li>\n<li>Loading all JS files at one go</li>\n</ul>\n\n<p>Since, each DOM element is generated in a top-down manner, it would display the completed page when all resources are loaded, hence is why you shouldn't have too many server requests.</p>\n\n<h3><a id=\"reason2\"></a> Inefficient database queries</h3>\n\n<p>Let's say, you have a page that displays a list of products from your SQL database and you execute this query:</p>\n\n<pre><code>SELECT * FROM products\n</code></pre>\n\n<p>Sorry, it's inefficient. Why? In a real-life scenario, a table may contain a lot of columns and multiply that with <strong>x</strong> number of database calls the server has to make for EVERY request that comes from a visitor. You get it, right?</p>\n\n<p>This could be worse if you have an unorganized database structure. Plan well, my friend.</p>\n\n<h3><a id=\"reason3\"></a> Images aren't optimized</h3>\n\n<p>Images that are uncompressed, have a higher resolution or large file size can be detrimental to the site's performance which creates an unpleasant user experience.</p>\n\n<h3><a id=\"reason4\"></a> Improper page caching</h3>\n\n<p>If you've built a dynamic page that displays a blog article, it probably performs a lot of requests/callbacks to generate a page with necessary information. Multiply that with <strong>x</strong> number of user sessions and that'll place a huge workload on the server.</p>\n\n<h3><a id=\"reason5\"></a> Your codebase stinks</h3>\n\n<p>This is a very deep problem especially if the code is never refactored in a very long time.</p>\n\n<p>Common causes of code smells are:</p>\n\n<ul>\n<li>Duplicate code</li>\n<li>Large methods or classes</li>\n<li>Too many parameters</li>\n<li>Long line of code</li>\n<li>Unnecessary uses of loops and conditions</li>\n<li>Unused code</li>\n</ul>\n\n<p>There's much more to this but if you're facing this, it's about time that you start fixing your codebase and keep it mint condition.</p>\n\n<h3><a id=\"reason6\"></a> Shared Server Hosting</h3>\n\n<p>Ah, this is the most common culprit. Many people host their websites on a shared server and guess what? Shared hosting means <strong><em>shared system resources</em></strong> because apart from your website, there could be 5 or more websites hosted on the same server.</p>\n\n<h2>How to overcome these issues?</h2>\n\n<p>Before we move on, let me just clarify that the techniques I've used below worked out for me but it may or may not work for you.</p>\n\n<p>Here are the following methods that worked out for me:</p>\n\n<ul>\n<li><a href=\"#tip1\">Compress &amp; Resize Images</a></li>\n<li><a href=\"#tip2\">Minify Javascript</a></li>\n<li><a href=\"#tip3\">CSS Preprocessors to the rescue!</a></li>\n<li><a href=\"#tip4\">Defer Javascript</a></li>\n<li><a href=\"#tip5\">Efficient database queries</a></li>\n<li><a href=\"#tip6\">PHP Page Caching</a></li>\n<li><a href=\"#tip7\">Refactor your codebase</a></li>\n<li><a href=\"#tip8\">LazyLoad DOM Elements</a></li>\n<li><a href=\"#tip9\">Dedicated Server</a></li>\n</ul>\n\n<h3><a id=\"tip1\"></a> Compress &amp; Resize Images</h3>\n\n<p>I'm sure that there are multiple ways to compress and resize an image like using Adobe Photoshop but what if there are hundreds and thousands of images? It'd be time consuming to do all of that.</p>\n\n<p>I created an ad hoc solution using a PHP-based image extension named <a href=\"https://github.com/Imagick/imagick\">ImageMagick</a>. This library is used to create and modify images using the ImageMagick Library.</p>\n\n<p>Since it can be used directly from the terminal, I wrote a small script using PowerShell to compress and resize the images in all folders in one go!</p>\n\n<p><strong>Snippet to resize images:</strong></p>\n\n<pre><code>magick mogrify -resize 256x256 -format *.jpg *.jpeg *.png\n</code></pre>\n\n<p><strong>Snippet to compress images:</strong></p>\n\n<pre><code>magick mogrify -quality 70% *.jpg *.jpeg *.png\n</code></pre>\n\n<p>The logic of the code is pretty straightforward. All it has to do is get a list of files with ends with image extensions (.jpg, .jpeg, .png) and modify the resolution to 640x480 and reduce the quality to a 70%.</p>\n\n<p>Previously, all images of the website combined was around 800MB and after executing the script, it went down to a mere 70MB. The quality of the images weren't ruined and the aspect ratio didn't change. That's quite astounding.</p>\n\n<h3><a id=\"tip2\"></a> Minify Javascript</h3>\n\n<p>Ever inspected someone's CSS or JS code on Chrome Debugger and saw something like this:</p>\n\n<pre><code>for(var a=[i=0];i&lt;20;a[i]=i++);\n</code></pre>\n\n<p>This code above is unreadable but it still retains it's previous functionality:</p>\n\n<pre><code>var array = [];\nfor (var i = 0; i &lt; 20; i++) {\n    array[i] = i;\n}\n</code></pre>\n\n<p>This process is known as <a href=\"https://en.wikipedia.org/wiki/Minification_(programming)\">minification</a>. It's a way of removing all spaces, unnecessary characters and comments that would help reduce the size of the source code and make it more efficient to be transferred over the network.</p>\n\n<p>Using a module bundler like Webpack, you can minify and merge all of your Javascript files into one sizeable chunk. Webpack's documentation is one of the worst that I have seen and I had to take help from StackOverflow to figure it out but however, it gets the job done. </p>\n\n<p>Want to know to configure it? Check out this <a href=\"https://stackoverflow.com/questions/43436754/using-webpack-with-an-existing-php-and-js-project\">thread from StackOverflow</a> for more in detail.</p>\n\n<h3><a id=\"tip3\"></a> CSS Preprocessors to the rescue!</h3>\n\n<p>Trust me, these are life-savers. I used to hate writing a lot of CSS but now, I like writing CSS because of this reason. I chose <strong><em>SASS</em></strong> as my CSS preprocessor and it's basically CSS-on-steroids!</p>\n\n<p>It's got some cool features like reusable CSS code, writing functions a.k.a <code>@mixin</code> and calling them using <code>@include</code>, nested syntaxes and import multiple CSS modules.</p>\n\n<p>Writing in <strong><em>SASS</em></strong> is no different than writing in CSS but it allows you to modularize and organize your code in a fashionable manner. This allows you to even split CSS code to different modules, especially, if your HTML component uses a lot of CSS elements.</p>\n\n<p>Oh, you can also create a minified version of your CSS code and push it into production.</p>\n\n<h3><a id=\"tip4\"></a> Defer Javascript</h3>\n\n<p>The <code>defer</code> attribute used in the <code>&lt;script&gt;</code> tag will allow the JS file to be executed after the page has finished parsing all the DOM elements.</p>\n\n<p>When the attribute is used, it'll look like this:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"script.js\" defer&gt;&lt;/script&gt;\n</code></pre>\n\n<p>This could save a lot of time especially if it contains code that is not critical.</p>\n\n<p>If you want to read more about it, click <a href=\"https://stackoverflow.com/questions/10808109/script-tag-async-defer\">here</a>.</p>\n\n<h3><a id=\"tip5\"></a> Efficient database queries</h3>\n\n<p>As mentioned above, inefficient database queries could be detrimental to your website's performance. You can get rid of it with the following methods:</p>\n\n<ul>\n<li>Maintain a good table structure</li>\n<li>Keep your database architecture organized. Read more about <a href=\"https://en.wikipedia.org/wiki/Database_normalization\">Database Normalization</a></li>\n<li>Keep your SQL query as simple as possible</li>\n</ul>\n\n<p>Usage of clauses like <code>WHERE</code>, <code>JOIN</code> and <code>GROUP BY</code> are important but when it comes to performance, use it wisely.</p>\n\n<h3><a id=\"tip6\"></a> PHP Page Caching</h3>\n\n<p>My company's website is mostly dynamic and I realized that all it does is fetch data from the servers to generate static information.</p>\n\n<p>So, I thought of writing a caching module, in which, when any given page is accessed in the website, it would create a fully-generated static page with an expiry time of 5 minutes. So, when another user enters the same page, it will serve the static page, so no more delays for anyone.</p>\n\n<p>This drastically reduced the load on the website's server because as mentioned <a href=\"#reason4\">above</a>, it takes a lot of resources to create a page, dynamically.</p>\n\n<p>You can find the source code of the caching module in my GitHub <a href=\"#\">repository</a>.</p>\n\n<h3><a id=\"tip7\"></a> Refactor your codebase</h3>\n\n<p>Refactoring has a lot of benefits and in fact, it could reduce the size of your website, fix any unfixed bugs and more. All of which can contribute to an improved performance of your website.</p>\n\n<p>So, please do yourself a favor and start cleaning up your codebase. If you don't know where to start, <a href=\"https://refactoring.guru/refactoring\">go here</a>.</p>\n\n<h3><a id=\"tip8\"></a> LazyLoad DOM Elements</h3>\n\n<p>Usually, whenever a page is opened by a user, it's contents are downloaded in a single go but this could be annoying if it disrupts the first view of the page.</p>\n\n<p>So, what LazyLoad does is that instead of loading all of the content in a bulk, it only displays part of the content when a part of the page is accessed. The pages are created with a placeholder and will replace it with actual content only when the user needs it.</p>\n\n<p>Examples of this can be seen in the form of:</p>\n\n<ul>\n<li>Image galleries</li>\n<li>Social media posts</li>\n<li>Infinite scrolling</li>\n<li>Pagination</li>\n</ul>\n\n<p>This technique helps in performance but might create a negative impact on SEO in terms of webpage rankings.</p>\n\n<p>If you want to give it a shot, try using this jQuery <a href=\"http://jquery.eisbehr.de/lazy/\">library</a>.</p>\n\n<h3><a id=\"tip9\"></a> Dedicated Server</h3>\n\n<p>Most hosting websites offer this service, you just have to buy a server and it would only host your website. </p>\n\n<p>It's highly configurable and you won't have any issues regarding performance, however, it doesn't come without an expensive price tag on it but if you're willing to pay, it can be a great long-term investment.</p>\n\n<h2>Conclusion</h2>\n\n<p>If you've reached here, thank you for reading!</p>\n\n<p>Let me know if any of these strategies have helped boost your website's performance and share it with other people too! Got more suggestions? Please send me an <a href=\"mailto:megacolorboy@gmail.com\">email</a> and we can talk more about it.</p>\n\n<p>Hope you liked reading this article!</p>\n\n<p>Stay tuned for more!</p>\n", "index": 47}, {"section": "writings", "title": "Build your own toy spellchecker", "link": "writings/posts/build-your-own-toy-spellchecker", "date": "July 19th, 2019", "date_alt": "19.07.2019", "year": "2019", "date_raw": "2019-07-19", "slug": "build-your-own-toy-spellchecker", "category": "Algorithms", "categories": [{"title": "Algorithms", "link": "/category/algorithms/"}], "summary": "Wrote a simple toy spellchecker using C++ by taking inspiration from Peter Norvig's article.", "reading_time": "4 minutes read", "preview_image_url": "", "filename": "content/writings/46_2019_06_28_build-your-own-toy-spellchecker.md", "status": "active", "content": "<p>Spellcheckers and autocorrect, aren't they magical? They do feel like magic to me. I mean, how is it able to predict what word do you want to type?</p>\n\n<p>According to <a href=\"https://norvig.com\">Norvig</a>, some of the most talented engineers at Google don't have a complete understanding of how a spellchecker works.</p>\n\n<p>Peter Norvig's <a href=\"https://norvig.com/spell-correct.html\">solution in Python</a> is so elegant and simple, I don't think anyone can write better than that. However, I wanted to know how it works, so I thought of building it to understand it's functionality. Also, an excuse to exercise my C++ skills.</p>\n\n<p>So, are you as curious as I am? If you are, I think you're in the right spot.</p>\n\n<h2>How it works?</h2>\n\n<p>Okay, so think about it? What does a spellchecker do? You type in a misspelled word and it returns a word with the highest probability, right? </p>\n\n<p>Well, there's a little bit more to it.</p>\n\n<h3>Create a word dictionary</h3>\n\n<p>First, we must create a dictionary, in order to do that, you need to extract words from a large piece of text and store it in a Hashmap in which each word will have a word count. In this example, I've used a Sherlock Holmes novel (which is around 6MB). The words are extracted from a novel instead of an actual dictionary because it can be used to create a simple Language Model.</p>\n\n<p><strong>Source code to create a dictionary:</strong></p>\n\n<pre><code>void SpellChecker::extractWords(string &amp;filename)\n{\n    ifstream infile;\n    infile.open(filename);\n    string x;\n    while(infile &amp;gt;&amp;gt; x)\n    {\n        x = filterAlpha(x);\n        dictionary[x]++;\n    }\n}\n\nstring SpellChecker::filterAlpha(string &amp;word)\n{\n    for(int i=0; i&amp;lt;word.size(); i++)\n    {\n        char ch = word[i];\n\n        if(ch &amp;lt; 0)\n        {\n            word[i] = '-';\n        }\n\n        if(isalpha(ch))\n        {\n            word[i] = tolower(ch);\n        }\n    }\n    return word;\n}\n</code></pre>\n\n<h3>Create a list of candidates</h3>\n\n<p>Second, we must able to predict/hypothesize the ways of editing text when the user types. It could be one of the following types of editing:</p>\n\n<ul>\n<li><a href=\"#inserts\">Adding a letter</a></li>\n<li><a href=\"#replaces\">Replacing a letter</a></li>\n<li><a href=\"#transposes\">Switching two adjacent letters</a></li>\n<li><a href=\"#deletes\">Removing a letter</a></li>\n</ul>\n\n<p>Based on the types of edits a user could make, we can generate a list of possible candidates by creating permutations using these edit methods mentioned above.</p>\n\n<h4><a id=\"inserts\"></a> Adding a letter</h4>\n\n<p>In this method, you generate a list of candidates by inserting a letter in every iteration.</p>\n\n<pre><code>void SpellChecker::inserts(string &amp;word, Vector &amp;result)\n{\n    for(int i=0; i&amp;lt;word.size()+1; i++)\n    {\n        for(int j=0; j&amp;lt;alphabets.size(); j++)\n        {\n            char ch = alphabets[j];\n            result.push_back(word.substr(0,i) + ch + word.substr(i));\n        }\n    }\n}\n</code></pre>\n\n<h4><a id=\"replaces\"></a> Replacing a letter</h4>\n\n<p>In this method, you generate a list of candidates by replacing each character with a letter from a list of alphabets in every iteration.</p>\n\n<pre><code>void SpellChecker::replaces(string &amp;word, Vector &amp;result)\n{\n    for(int i=0; i&amp;lt;word.size(); i++)\n    {\n        for(int j=0; j&amp;lt;alphabets.size(); j++)\n        {\n            char ch = alphabets[j];\n            result.push_back(word.substr(0,i) + ch + word.substr(i+1));\n        }\n    }\n}\n</code></pre>\n\n<h4><a id=\"transposes\"></a> Switching two adjacent letters</h4>\n\n<p>In this method, you generate a list of candidates by switcing two adjacent letters in every iteration. For example: the word \"ornage\" would look like this: \"orange\", when the letters \"n\" and \"a\" are swapped.</p>\n\n<pre><code>void SpellChecker::transposes(string &amp;word, Vector &amp;result)\n{\n    for(int i=0; i&amp;lt;word.size()-1; i++)\n    {\n        result.push_back(word.substr(0,i) + word[i+1] + word[i] + word.substr(i+2));\n    }\n}\n</code></pre>\n\n<h4><a id=\"deletes\"></a> Removing a letter</h4>\n\n<p>In this method, you generate a list of candidates by removing a letter in every iteration.</p>\n\n<pre><code>void SpellChecker::deletes(string &amp;word, Vector &amp;result)\n{\n    for(int i=0; i&amp;lt;word.size(); i++)\n    {\n        result.push_back(word.substr(0,i) + word.substr(i+1));\n    }\n}\n</code></pre>\n\n<p>All of these methods are called in one wrapper method:</p>\n\n<pre><code>void SpellChecker::edits(string &amp;word, Vector &amp;result)\n{\n    //Deletion\n    deletes(word, result);\n\n    //Transposition\n    transposes(word, result);\n\n    //Replacement\n    replaces(word, result);\n\n    //Insertion\n    inserts(word, result);\n}\n</code></pre>\n\n<h3>Extract the known words</h3>\n\n<p>Third, at this stage, the above step would've generated a huge list of words but 90% of them would be gibberish, so we need to \"clean\" the list and extract the known words using the dictionary we've created.</p>\n\n<pre><code>void SpellChecker::known_words(Vector&amp; results, Dictionary &amp;candidates)\n{\n    Dictionary::iterator end = dictionary.end();\n\n    for(int i=0; i&amp;lt;results.size(); i++)\n    {\n        Dictionary::iterator val = dictionary.find(results[i]);\n\n        if(val != end)\n        {\n            candidates[val-&gt;first] = val-&gt;second;\n        }\n    }\n}\n</code></pre>\n\n<p>The <mark>edits()</mark> method apply to words that have a edit distance of 1, what if it was 2 or more? Like if the user typed \"the\", it could've been \"then\" or \"they\". So, all you have to do is create a method that generates a new set of permutations based on the already generated list of edited words and extract the known words.</p>\n\n<pre><code>void SpellChecker::edits2(Vector &amp;result, Dictionary &amp;candidates)\n{\n    for(int i=0; i&amp;lt;result.size(); i++)\n    {\n        Vector edit2;\n\n        edits(result[i], edit2);\n        known_words(edit2, candidates);\n    }   \n}\n</code></pre>\n\n<h3>Display the correct word</h3>\n\n<p>In order to determine the correct word, the following possibilities are considered:</p>\n\n<ol>\n<li>Check if this word is in the dictionary, if it does, display it.</li>\n<li>Generate known words that have an edit distance of 1 and check in the dictionary, if it does, display it.</li>\n<li>Generate known words that have an edit distance of 2 and check in the dictionary, if it does, display it.</li>\n<li>If all else fails, this word is unique or not a known word.</li>\n</ol>\n\n<p></p>\n\n<pre><code>string SpellChecker::correct(string &amp;word)\n{\n    Vector result;\n    Dictionary candidates;\n\n    string file = \"big.txt\";\n\n    //1. if it's in the dictionary, display it\n    if(dictionary.find(word) != dictionary.end())\n    {\n        return word;\n    }\n\n    extractWords(file);\n\n    edits(word, result);\n    known_words(result, candidates);\n\n    //2. if it's a known word but one edit away\n    if(candidates.size() &amp;gt; 0)\n    {\n        return max_element(candidates.begin(), candidates.end())-&amp;gt;first;\n    }\n\n    //3. if it's a known word but two edits away\n    edits2(result, candidates);\n\n    if(candidates.size() &amp;gt; 0)\n    {\n        return max_element(candidates.begin(), candidates.end())-&amp;gt;first;\n    }\n\n    //4. Display nothing if it doesn't exist\n    return \"This word doesn't exist!\";\n}\n</code></pre>\n\n<p>However, for conditions 2 and 3, the word displayed would most likely have the highest word frequency in the dictionary.</p>\n\n<h2>Conclusion</h2>\n\n<p>Phew! I hope that wasn't a long read. Although, I've written this on C++, I plan to rewrite this on Javascript for some of my future projects.</p>\n\n<p>To be honest, I don't think it's completely accurate, although, I got most of the words correct when tested.</p>\n\n<p>The source code can be found on my <a href=\"https://www.github.com/megacolorboy/ToySpellChecker\">GitHub</a> repository.</p>\n\n<p>Hope you liked reading this article!</p>\n\n<p>Stay tuned for more!</p>\n", "index": 46}, {"section": "writings", "title": "The 15 Puzzle Game", "link": "writings/posts/the-15-puzzle-game", "date": "June 22nd, 2019", "date_alt": "22.06.2019", "year": "2019", "date_raw": "2019-06-22", "slug": "the-15-puzzle-game", "category": "Personal Challenge", "categories": [{"title": "Personal Challenge", "link": "/category/personal-challenge/"}], "summary": "A classical numbered puzzle that requires the player to place all the tiles in an ordered sequence.", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/writings/45_2019_06_21_the-15-puzzle-game.md", "status": "active", "content": "<iframe src=\"/static/projects/15-puzzle\" width=\"500\" height=\"500\"></iframe>\n\n<p>Before you read this article, play with the above puzzle. You can move the block around by <strong><em>left-clicking</em></strong> on a numbered tile that's adjacent to the empty tile.</p>\n\n<p>The source code for this puzzle can be found <a href=\"https://github.com/megacolorboy/BlogProjects/tree/master/15-puzzle\">over here</a>.</p>\n\n<h2>Background</h2>\n\n<p>This is a game that has been on my list of projects for a long time and I've finally decided to work on it last night. Although, this post has nothing to do with Artificial Intelligence, I was inspired to write this game when I studied about <a href=\"https://en.wikipedia.org/wiki/Heuristic_(computer_science)\">Heuristics</a> in the book named <a href=\"/posts/artificial-intelligence-a-modern-approach--chapter-1\">Artificial Intelligence: A Modern Approach</a> and on how it was applied to this game.</p>\n\n<h2>What are the game mechanics?</h2>\n\n<p>This game is played on a <strong><em>four-by-four</em></strong> grid with numbered tiles that are shuffled randomly. As you can see, there are <strong><em>15 numbered cells</em></strong> and <strong><em>1 empty cell</em></strong> in the grid, this is to allow movement of the tiles within the grid.</p>\n\n<p>However, the movement is limited to the numbered tiles that are adjacent to the empty tile.</p>\n\n<p>The player wins the game after ordering all the numbered tiles in the grid in an order of ascending sequence.</p>\n\n<h2>Source code</h2>\n\n<p>Here's the source code of the entire game:</p>\n\n<pre><code>var board = [], rows = 4, cols = 4;\nvar possibleMoves, zx, zy, oldzx = -1, oldzy = -1;\n\n//Generate 2D Board\nfunction generateBoard()\n{\n    for(var i=0; i&amp;lt;rows; i++)\n    {\n        board[i] = [];\n    }\n\n    for(var j=0; j&amp;lt;cols; j++)\n    {\n        for(var i=0; i&amp;lt;rows; i++)\n        {\n            board[j][i] = (i + j * 4) + 1;\n        }\n    }\n\n    //position of the empty cell in the grid i.e. 3,3\n    zx = zy = 3;\n    board[zx][zy] = 16;\n}\n\n//Generate the cells\nfunction generateCells()\n{\n    var grid = document.createElement(\"div\");\n    grid.className += \"board\";\n\n    document.body.appendChild(grid);\n\n    for(var j=0; j&amp;lt;4; j++)\n    {\n        for(var i=0; i&amp;lt;4; i++)\n        {\n            var cell = document.createElement(\"div\");\n            cell.className += \"cell\";\n            cell.id = \"cell_\" + (i + j * 4);\n            cell.row = i;\n            cell.col = j;\n            cell.addEventListener(\"click\", cellEventHandle, false);\n            cell.appendChild(document.createTextNode(\"\"));\n            grid.appendChild(cell);\n        }\n    }\n}\n\n/*\n    Determine the possible number of moves\n    based on the empty cell's coordinates.\n*/\nfunction genPossibleMoves()\n{\n    possibleMoves = [];\n    var ii, jj;\n\n    /*\n        Just for reference:\n        The empty cell can be moved in the following x,y coords:\n        -1,0, 0,-1, 1,0, 0,1\n    */\n    var xCoords = [-1, 0, 1, 0];\n    var yCoords = [0, -1, 0, 1];\n\n    for(var i=0; i&amp;lt;4; i++)\n    {\n        ii = zx + xCoords[i];\n        jj = zy + yCoords[i];\n\n        //If it's out of bounds, skip it\n        if(ii &amp;lt; 0 || jj &amp;lt; 0 || ii &amp;gt; 3 || jj &amp;gt; 3)\n        {\n            continue;\n        }\n\n        possibleMoves.push({x: ii, y: jj});\n    }\n}\n\nfunction updateCells()\n{\n    for(var j=0; j&amp;lt;cols; j++)\n    {\n        for(var i=0; i&amp;lt;rows; i++)\n        {\n            var cell_id = \"cell_\" + (i + j * 4);\n            var cell = document.getElementById(cell_id);\n            var val = board[i][j];\n\n            if(val &amp;lt; 16)\n            {\n                cell.innerHTML = (\"\" + val);\n                if(val % 2 == 0)\n                {\n                    cell.className = \"cell dark\";               \n                }\n                else\n                {\n                    cell.className = \"cell light\";\n                }\n            }\n            else\n            {\n                cell.innerHTML = \"\";\n                cell.className = \"empty\";\n            }\n        }\n    }\n}\n\n//Event handler for each cell\nfunction cellEventHandle(e)\n{\n    genPossibleMoves();\n\n    //Current coords of the cell\n    var r = e.target.row;\n    var c = e.target.col;\n    var pos = -1;\n    var isPossible = false;\n    // console.log(r + \",\" + c);\n\n    /*\n        Check if the current cell is \n        one of the possible moves\n    */\n    for(var i=0; i&amp;lt;possibleMoves.length; i++)\n    {\n        if(possibleMoves[i].x == r &amp;&amp; possibleMoves[i].y == c)\n        {\n            isPossible = true;\n            pos = i;\n            break;\n        }\n    }\n\n    if(isPossible)\n    {\n        var temp = possibleMoves[pos];\n\n        //Swap position of the empty cell\n        board[zx][zy] = board[temp.x][temp.y];\n        //Update the coordinates of the empty cell\n        zx = temp.x;\n        zy = temp.y;\n        board[zx][zy] = 16;\n        updateCells();\n\n        //Check if the game is over\n        if(is_game_over())\n        {\n            setTimeout(function(){\n                alert(\"Congrats!\");\n            }, 2);\n        }\n    }\n\n}\n\n//Check if the game is over\nfunction is_game_over()\n{\n    var currentVal = 0;\n    for(var j=0; j&amp;lt;cols; j++)\n    {\n        for(var i=0; i&amp;lt;rows; i++)\n        {\n            if(board[i][j] &amp;lt; currentVal)\n            {\n                return false;\n            }\n\n            currentVal = board[i][j];\n        }\n    }\n    return true;\n}\n\n//Shuffle the board\nfunction shuffleBoard()\n{\n    var shuffleLimit = 0;\n    var temp;\n\n    do\n    {\n        genPossibleMoves();\n\n        while(true)\n        {\n            // Pick a random cell of possible moves\n            temp = possibleMoves[Math.floor(Math.random() * possibleMoves.length)];\n            if (temp.x != oldzx || temp.y != oldzy)\n            {\n                break;\n            }\n        }\n\n        oldzx = zx;\n        oldzy = zy;\n\n        board[zx][zy] = board[temp.x][temp.y];\n        zx = temp.x;\n        zy = temp.y;\n        board[zx][zy] = 16;\n\n    }while(++shuffleLimit &amp;lt; 200);\n}\n\n//REstart the game\nfunction restart()\n{\n    shuffleBoard();\n    updateCells();\n}\n\n//Start the game\nfunction start()\n{\n    generateBoard();\n    generateCells();\n    restart();\n}\n\n</code></pre>\n\n<p>As I had mentioned above, today's article has nothing to do with Artificial Intelligence but in the future, I plan to write a solver for this game that makes use of Heuristics.</p>\n\n<p>Hope you liked reading this article and have fun playing the game!</p>\n\n<p>Stay tuned for more!</p>\n", "index": 45}, {"section": "writings", "title": "Keep a programming journal using VIM and Bash", "link": "writings/posts/keep-a-programming-journal-using-vim-and-bash", "date": "April 26th, 2019", "date_alt": "26.04.2019", "year": "2019", "date_raw": "2019-04-26", "slug": "keep-a-programming-journal-using-vim-and-bash", "category": "Productivity", "categories": [{"title": "Productivity", "link": "/category/productivity/"}], "summary": "Become a better programmer by writing your own programming journal using VIM and Bash.", "reading_time": "3 minutes read", "preview_image_url": "", "filename": "content/writings/44_2019_04_26_keep-a-programming-journal-using-vim-and-bash.md", "status": "active", "content": "<p>Back in the days of Polymath scientists, physicists and engineers like <a href=\"https://en.wikipedia.org/wiki/Leonardo_Da_Vinci\">Leonardo Da Vinci</a> and <a href=\"https://en.wikipedia.org/wiki/Albert_Einstein\">Albert Einstein</a>, they usually maintained a sort of journal to record their thoughts, ideas and experiments.</p>\n\n<p>It's been 20 days since I have started maintaining journals, one is for personal stuff and the other is for programming, engineering and math related stuff, I mean, we all need to have some new hobbies to keep ourselves productive, right?</p>\n\n<p>Maintaining a journal helped me create a flow to write down my experiences ofthe day. It also helps me clear my mind and be more emotionally stable (I get moody, sometimes) and record my thoughts and ideas too.</p>\n\n<p>There are so many ways to write a journal like you could sign up on some online platform, install Evernote on your desktop or mobile or traditional pen and paper (which is the best way, honestly).</p>\n\n<h2>Requirements</h2>\n\n<p>I thought of keeping it in my laptop and I wanted it to have the following features:</p>\n\n<ol>\n<li>No use of internet required</li>\n<li>Must be super fast, simple and precise to the point</li>\n<li>Privacy (I mean, you can't trust the internet, sometimes!)</li>\n<li>Record thoughts and ideas with a timestamp, similar to a logbook</li>\n<li>Yes, it must look cool and nerdy</li>\n</ol>\n\n<p>I looked on some options like Google Docs, Dropbox Paper and Evernote but I just wanted something that matches my requirements. I went on YouTube and I saw a guy named <a href=\"https://www.youtube.com/watch?v=M_TQ3tgc4kg\">Mike Levin</a>, who made a video named \"VIM Journalcasting Experiment\" and it inspired me to create something like that too.</p>\n\n<h2>Setup</h2>\n\n<p>First, you need to create a directory to store your journal notes and create a file to create them:</p>\n\n<pre><code>mkdir journal\ncd journal\ntouch writer.sh\nchmod u+rwx writer.sh\n</code></pre>\n\n<p>Next, you need to write a few lines of code in Bash:</p>\n\n<pre><code>#!/bin/bash\n\nfolder=`date +%Y_%m_%d`\nmkdir -p $folder\ncd $folder\n\nvi +star `date +%Y%m%d`\".jrnl\"\n</code></pre>\n\n<p>One more step, create an alias on your <strong><em>bash_profile</em></strong> in order to access it from anywhere:</p>\n\n<pre><code>alias jrnl=\"cd /journal;./writer.sh\"\n</code></pre>\n\n<p>Alright, that's the basic setup! To test it, just do the following in your Terminal:</p>\n\n<pre><code>journal\n</code></pre>\n\n<h2>VIM Customization</h2>\n\n<p>Are you one of those people who gets confused on how to get out of VIM? Don't worry, you'll figure it out <a href=\"https://google.com/search?q=how-to-get-out-of-vim\">over here</a>!</p>\n\n<p>The following setup can be done in your <code>~/.vimrc</code> file to enhance your journaling experience like adding a spellchecker, word counter, highlight colors and so on.</p>\n\n<p>Below are the configurations:</p>\n\n<pre><code>set spell spelllang=en_gb\ncmap &lt;F6&gt; setlocal spell!\n\nfunction! WordCount()\n        let s:old_status = v:statusmsg\n        let position = getpos(\".\")\n        exe \":silent normal g\\&lt;c-g&gt;\"\n        let stat = v:statusmsg\n        let s:word_count = 0\n        if stat != '--No lines in buffer--'\n                let s:word_count = str2nr(split(v:statusmsg)[11])\n                let v:statusmsg = s:old_status\n        end\n        call setpos('.', position)\n        return s:word_count\nendfunction\n\nhi User1 ctermbg=black ctermfg=red cterm=BOLD guibg=black guifg=red gui=BOLD\n\nset laststatus=2\nset statusline=\nset statusline+=%1*\nset statusline+=%&lt;\\\n</code></pre>\n\n<p>Now, you can start writing your own journal whenever and wherever you want using VIM.</p>\n\n<h2>Conclusion</h2>\n\n<p>I'm not saying that you should write your journal on VIM, I thought it would be fun if I could do it on VIM, so that I get a chance to learn it. However, you can do it on Notepad too!</p>\n\n<p>Apart from that, journaling does have a lot of benefits and can help you become more productive!</p>\n\n<p>Get your ideas floating and start building cool stuff!</p>\n\n<p>Hope you liked reading this article!</p>\n\n<p>Until next time, then!</p>\n", "index": 44}, {"section": "writings", "title": "Stripe's Scrolling Bubble Header", "link": "writings/posts/stripes-scrolling-bubble-header", "date": "April 6th, 2019", "date_alt": "06.04.2019", "year": "2019", "date_raw": "2019-04-06", "slug": "stripes-scrolling-bubble-header", "category": "User Interface + User Experience", "categories": [{"title": "User Interface", "link": "/category/user-interface/"}, {"title": "User Experience", "link": "/category/user-experience/"}], "summary": "An insight into Stripe's interesting use of animated elements.", "reading_time": "4 minutes read", "preview_image_url": "", "filename": "content/writings/43_2019_04_05_stripes-scrolling-bubble-header.md", "status": "active", "content": "<p><link rel=\"stylesheet\" type=\"text/css\" href=\"/static/projects/stripe-bubbles/index.css\"/></p>\n\n<script defer type=\"text/javascript\" src=\"/static/projects/stripe-bubbles/perlin.js\"></script>\n\n<script defer type=\"text/javascript\" src=\"/static/projects/stripe-bubbles/script.js\"></script>\n\n<div id=\"bubbleWrapper\">\n    <div class=\"stripe-bubbles\"></div>\n</div>\n\n<p>Want to know how to make it on your own? Read the article below!</p>\n\n<p>If you're a UI/UX developer, you've probably heard about <a href=\"https://www.stripe.com\">Stripe.com</a> and their uses of motion and design with their targeted audience in mind.</p>\n\n<p>As I was exploring their website, I discovered their <a href=\"https://stripe.com/customers\">customers</a> page and instantly, I was intrigued by their smooth scrolling bubble header and the concept was interesting enought that it caught my attention.</p>\n\n<p>In this article, I'll explain on how I had attempted to recreate their scrolling bubble header.</p>\n\n<h2>Analysis</h2>\n\n<p>The mechanics are pretty simple to understand, these are the following:</p>\n\n<ul>\n<li>The bubbles are randomly generated and placed on page load</li>\n<li>Smooth animation of the up and down movements</li>\n<li>Infinite animation loop</li>\n</ul>\n\n<p>A trivial problem, isn't it? Time to see if we can recreate it!</p>\n\n<h2>Step 1: Create the bubble</h2>\n\n<p>Let's write the CSS to create a simple bubble with a <mark>width</mark> and <mark>height</mark> of 150px and by giving it a <mark>border-radius</mark> of 50%.</p>\n\n<pre><code>.stripe-bubble {\n    width: 150px;\n    height: 150px;\n    border-radius: 50%;\n}\n</code></pre>\n\n<p>As for the logo, I inspected their code and figured out that Stripe combined all of their customer logos into a single image, also known as, CSS Spritesheet.</p>\n\n<figure>\n    <img src=\"/static/images/stripe-customer-logos.png\"/>\n</figure>\n\n<p>Performance-wise, it's a clever technique used to reduce the number of HTTP requests that your internet browser has to make on every page request.</p>\n\n<p>Let's give the CSS spritesheet as a background-image property and adjust it enough to fit the size of one bubble.</p>\n\n<pre><code>.stripe-bubble {\n    position: absolute;\n    width: 150px;\n    height: 150px;\n    border-radius: 50%;\n    background-image: url('https://www.stripe.com/img/v3/customers/logos/header-logos.png');\n    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1), 0 3px 10px rgba(0, 0, 0, 0.1);\n    background-size: 1076px 1076px;\n}\n</code></pre>\n\n<p>There are about 43 logos, which means you'll have to create different logos by adjusting the background position property.</p>\n\n<pre><code>.logo-1 {\n    background-position: 0 0;\n}\n\n.logo-2 {\n    background-position: 0 -154px;\n}\n\n.logo-3 {\n    background-position: 0 -308px;\n}\n</code></pre>\n\n<p>In the next step, using JavaScript, we'll create the classes for the bubbles and the header.</p>\n\n<h2>Step 2: Create a class for Bubble</h2>\n\n<p>Before we get in deep, let's create the foundation for our code, so that it'll make things neat and tidy and easier on the go. Below, I have created two classes: one is for the bubble and the other is for the bubble wrapper (no puns):</p>\n\n<pre><code>class Bubble {\n    constructor(){}\n    update(){}\n}\n\nclass BubbleMarquee {\n    constructor(){}\n    update(){}\n}\n</code></pre>\n\n<p>Great, you have created the classes, we can now use these to generate the bubbles dynamically in the next step.</p>\n\n<h2>Step 3: Bubble's scale and position</h2>\n\n<figure>\n    <img src=\"/static/images/stripe-bubbles.png\"/>\n</figure>\n\n<p>As you see in the image above, the logos are randomly placed and scaled. It's clear that there has to be some sort of a pattern, so I decided to take a look into their code:</p>\n\n<figure>\n    <img src=\"/static/images/stripe-bubble-code.png\"/>\n</figure>\n\n<p>Aha! I discovered that the positioning and scaling of the bubbles are hard-coded and then the logos order are randomly shuffled. I won't be adding a randomizer but for now, let's add the bubbles with it's specifications and respective logos.</p>\n\n<pre><code>const bubbleSettings = [\n    {cssClass:'logo-imgAffirm', s: .6, x: 77, y: 1134 }, \n    {cssClass:'logo-imgAllianz', s: .6, x: 271, y: 1620 }, \n    {cssClass:'logo-imgAmazon ', s: .6, x: 372, y: 1761 }, \n    {cssClass:'logo-imgBookingCom', s: .6, x: 79, y: 2499 }, \n    {cssClass:'logo-imgCatawiki', s: .6, x: 334, y: 2704 }, \n    {cssClass:'logo-imgCityofBoston', s: .6, x: 356, y: 2271 }, \n    {cssClass:'logo-imgDeliveroo', s: .6, x: 226, y: 795 }, \n    {cssClass:'logo-imgDoordash', s: .6, x: 256, y: 276 }, \n    {cssClass:'logo-imgExpedia', s: .6, x: 365, y: 1210 }, \n    {cssClass:'logo-imgFitbit', s: .6, x: 193, y: 444 }, \n    {cssClass:'logo-imgGoogle', s: .6, x: 387, y: 2545 }, \n    {cssClass:'logo-imgIndiegogo', s: .7, x: 193, y: 1303 }, \n    {cssClass:'logo-imgInstacart', s: .7, x: 88, y: 907 }, \n    {cssClass:'logo-imgKickstarter', s: .7, x: 320, y: 633 }, \n    {cssClass:'logo-imgLyft', s: .7, x: 76, y: 323 }, \n    {cssClass:'logo-imgNasdaq', s: .7, x: 357, y: 129 }, \n    {cssClass:'logo-imgNat-Geo ', s: .7, x: 342, y: 1440 }, \n    {cssClass:'logo-imgRackspace', s: .7, x: 293, y: 1929 }, \n    {cssClass:'logo-imgReddit', s: .7, x: 198, y: 2135 }, \n    {cssClass:'logo-imgSalesforce', s: .7, x: 82, y: 2276 }, \n    {cssClass:'logo-imgShopify', s: .7, x: 182, y: 2654 }, \n    {cssClass:'logo-imgSlack', s: .7, x: 75, y: 2783 }, \n    {cssClass:'logo-imgSpotify', s: .7, x: 118, y: 1519 }, \n    {cssClass:'logo-imgSquarespace', s: .7, x: 233, y: 1071 }, \n    {cssClass:'logo-imgTarget', s: .7, x: 148, y: 1773 }, \n    {cssClass:'logo-imgTed', s: .7, x: 385, y: 2098 }, \n    {cssClass:'logo-imgTheGuardian', s: .7, x: 244, y: 2423 }, \n    {cssClass:'logo-imgTwitch', s: .7, x: 385, y: 901 }, \n    {cssClass:'logo-imgUber', s: .7, x: 111, y: 624 }, \n    {cssClass:'logo-imgWeTransfer', s: .7, x: 103, y: 145 }, \n    {cssClass:'logo-imgWish', s: .7, x: 367, y: 413 }, \n    {cssClass:'logo-imgXero', s: .7, x: 251, y: 2805 }, \n    {cssClass:'logo-imgYelp', s: .7, x: 75, y: 1990 }\n];\n\nclass Bubble {\n    constructor(index, {cssClass, x, y, s=.9}){\n        this.index = index;\n        this.x = x;\n        this.y = y;\n        this.scale = s;\n        this.cssClass = cssClass;\n\n        this.el = document.createElement(\"div\");\n        this.el.className = `stripe-bubble ${this.cssClass}`;\n\n        marqueeEl.appendChild(this.el);\n    }\n\n    update(){}\n}\n\nclass BubbleMarquee{\n    constructor(settings){\n        this.bubbles = [];\n\n        settings.forEach((setting, index) =&gt;{\n            this.bubbles.push(new Bubble(index, setting));\n        });\n    }\n    update(){}\n}\n</code></pre>\n\n<p>Okay, now off to animating the bubbles!</p>\n\n<h2>Step 4: Animation</h2>\n\n<p>You could use absolute positioning properties like <mark>top</mark> and <mark>left</mark> but it'd be really expensive in terms of calculations, instead of that, you could use <mark>transform</mark> to move the elements.</p>\n\n<pre><code>this.el.style.transform = `translate(${this.x}px, ${this.y}px) scale(${this.scale})`;\n</code></pre>\n\n<p>As for the animation, you could use <mark>setInterval</mark> but don't do that, stop here and read about <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame\">requestAnimationFrame</a>.</p>\n\n<pre><code>constructor(settings){\n    this.bubbles = [];\n\n    settings.forEach((setting, index) =&gt;{\n        this.bubbles.push(new Bubble(index, setting));\n    });\n\n    requestAnimationFrame(this.update.bind(this));\n}\n\nupdate(){\n    this.bubbles.forEach(bubble =&gt; bubble.update());\n    this.raf = requestAnimationFrame(this.update.bind(this));\n}\n</code></pre>\n\n<p>Alright, you've done it! It's animating and looks cool but hey, did you notice that there animation doesn't look stale but is more organic-like? That's because they have added some random movement to each bubble.</p>\n\n<p>I took another peek at their code, I found out that they were using <a href=\"https://en.wikipedia.org/wiki/Perlin_noise\">Perlin noise</a> to smoothen the animation movements. Unlike, <mark>Math.random()</mark>, I got to know that it's an algorithm used to generate a sequence of randomness that has some order, which helps create a smooth, organic movement.</p>\n\n<p>I didn't implement the algorithm instead I made use of an existing <a href=\"https://github.com/josephg/noisejs\">implementation</a> written by <a href=\"https://github.com/josephg\">Seph Gentle</a> found on GitHub.</p>\n\n<p>This is how your <mark>update()</mark> method should look like after adding the Perlin Noise:</p>\n\n<pre><code>update(){\n    this.noiseSeedX += noise_speed;\n    this.noiseSeedY += noise_speed;\n\n    var randomXPos = noise.simplex2(this.noiseSeedX, 0);\n    var randomYPos = noise.simplex2(this.noiseSeedY, 0);\n\n    this.y -= scrollingSpeed;\n\n    this.xNoisePos = this.x + (randomXPos * noise_amnt); \n    this.yNoisePos = this.y + (randomYPos * noise_amnt); \n\n    if(this.y &lt; -500)\n    {\n        this.y = canvas_width;\n    }\n\n    this.el.style.transform = `translate(${this.xNoisePos}px, ${this.yNoisePos}px) scale(${this.scale})`;\n}\n</code></pre>\n\n<p>After adding that, you have finally achieved what you wanted! Oh, you can find the source code for this project on my <a href=\"https://github.com/MegaColorBoy/BlogProjects/tree/master/stripe-bubbles\">GitHub</a> repository.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you enjoyed reading this blog article and learnt something new. If you have questions, please send me your <a href=\"mailto:megacolorboy@gmail.com\">thoughts</a> and I would be happy to help you out!</p>\n\n<p>Thank you for reading!</p>\n\n<p>Stay tuned for more!</p>\n", "index": 43}, {"section": "writings", "title": "Poker Hand Analyser in Python", "link": "writings/posts/poker-hand-analyser-in-python", "date": "March 30th, 2019", "date_alt": "30.03.2019", "year": "2019", "date_raw": "2019-03-30", "slug": "poker-hand-analyser-in-python", "category": "Algorithms", "categories": [{"title": "Algorithms", "link": "/category/algorithms/"}], "summary": "An algorithm that parses a five-card poker hand and determines it's rank.", "reading_time": "3 minutes read", "preview_image_url": "", "filename": "content/writings/42_2019_03_29_poker-hand-analyser-in-python.md", "status": "active", "content": "<p><link href=\"/static/css/playing_cards.css\" rel=\"stylesheet\" type=\"text/css\"/></p>\n\n<p>I've never played Poker and don't think I ever will because I'm not a fan of gambling and placing bets. However, I ran into an interesting problem on <a href=\"https://projecteuler.net/problem=54\">Project Euler</a> that led me to write a poker hand analyser to determine the rank of each hand.</p>\n\n<p>Before writing this article, I didn't know anything about cards or Poker, I had to do some research on Wikipedia about it. So, forgive me if there's any information that's not accurate in the article.</p>\n\n<h2>Poker Hands</h2>\n\n<p>From what I had understood, a <strong><em>hand</em></strong> is a set of five cards and each card has a rank, which is in the order shown below:</p>\n\n<pre><code>Cards are valued in the order of lowest to highest (Left to Right):\n2, 3, 4, 5, 6, 7, 8, 9, 10, Jack, Queen, King, Ace\n</code></pre>\n\n<p>Based on the card pattern formed in each hand, the ranking category is determined and it's ranked within it's category based on the ranks of it's cards.</p>\n\n<h2>Hand Ranking Categories</h2>\n\n<p>In Poker, there are about 10 ranking categories from lowest to highest:</p>\n\n<ul>\n<li><a href=\"#highcard\">High Card</a></li>\n<li><a href=\"#onepair\">One Pair</a></li>\n<li><a href=\"#twopairs\">Two Pairs</a></li>\n<li><a href=\"#threeofakind\">Three of a Kind</a></li>\n<li><a href=\"#straight\">Straight</a></li>\n<li><a href=\"#flush\">Flush</a></li>\n<li><a href=\"#fullhouse\">Full House</a></li>\n<li><a href=\"#fourofakind\">Four of a Kind</a></li>\n<li><a href=\"#straightflush\">Straight Flush</a></li>\n<li><a href=\"#royalflush\">Royal Flush</a></li>\n</ul>\n\n<p>Before diving into the code snippets, I wrote a library named <a href=\"https://github.com/megacolorboy/ProjectEuler/blob/master/poker_lib.py\">poker_lib.py</a> which contains all the methods used in the code snippets.</p>\n\n<p>To make things simple, I created a class named <strong><em>Card</em></strong> that has two attributes, <strong><em>face</em></strong> and <strong><em>suit</em></strong>, with <strong><em>namedtuple()</em></strong> as it's datatype.</p>\n\n<h3><a id=\"highcard\"></a> High Card</h3>\n\n<figure style=\"text-align: left;\">\n    <div class=\"playing_card king_diamonds\"></div>\n    <div class=\"playing_card queen_diamonds\"></div>\n    <div class=\"playing_card seven_spades\"></div>\n    <div class=\"playing_card four_spades\"></div>\n    <div class=\"playing_card three_hearts\"></div>\n</figure>\n\n<p>This hand contains no pairs and it doesn't fall into any other category.</p>\n\n<pre><code>def high_card(hand):\n    # collect all faces from each card\n    allfaces = [f for f,s in hand]\n\n    #sort the faces and show the highest card\n    return \"high_card\", sorted(allfaces, key=lambda f: allfaces.index(f), reverse=True)[0]\n</code></pre>\n\n<h3><a id=\"onepair\"></a> One Pair</h3>\n\n<figure style=\"text-align: left;\">\n    <div class=\"playing_card ten_spades\"></div>\n    <div class=\"playing_card ten_hearts\"></div>\n    <div class=\"playing_card eight_spades\"></div>\n    <div class=\"playing_card seven_hearts\"></div>\n    <div class=\"playing_card four_clubs\"></div>\n</figure>\n\n<p>This hand contains two cards of one rank and three cards of three other ranks.</p>\n\n<pre><code>def one_pair(hand):\n    allfaces = [f for f,s in hand]\n    allftypes = set(allfaces)\n\n    # collect pairs\n    pairs = [f for f in allftypes if allfaces.count(f) == 2]\n\n    # if there's more than one pair\n    if len(pairs) != 1:\n        return False\n\n    allftypes.remove(pairs[0])\n    return 'one-pair', pairs + sorted(allftypes, key=lambda f: face.index(f), reverse=True)\n</code></pre>\n\n<h3><a id=\"twopairs\"></a> Two Pairs</h3>\n\n<figure style=\"text-align: left;\">\n    <div class=\"playing_card jack_hearts\"></div>\n    <div class=\"playing_card jack_spades\"></div>\n    <div class=\"playing_card three_clubs\"></div>\n    <div class=\"playing_card three_spades\"></div>\n    <div class=\"playing_card two_hearts\"></div>\n</figure>\n\n<p>This hand contains two cards of one rank, two cards of a second rank and one card of a third rank.</p>\n\n<pre><code>def two_pair(hand):\n    allfaces = [f for f,s in hand]\n    allftypes = set(allfaces)\n\n    # collect pairs\n    pairs = [f for f in allftypes if allfaces.count(f) == 2]\n\n    # if there are more than two pairs\n    if len(pairs) != 2:\n        return False\n\n    p1, p2 = pairs\n    # get the difference using sets\n    other_cards = [(allftypes - set(pairs)).pop()]\n    return 'two-pair', pairs + other_cards if(face.index(p1) &gt; face.index(p2)) else pairs[::-1] + other_cards\n</code></pre>\n\n<h3><a id=\"threeofakind\"></a> Three of a Kind</h3>\n\n<figure style=\"text-align: left;\">\n    <div class=\"playing_card queen_clubs\"></div>\n    <div class=\"playing_card queen_spades\"></div>\n    <div class=\"playing_card queen_hearts\"></div>\n    <div class=\"playing_card nine_hearts\"></div>\n    <div class=\"playing_card two_spades\"></div>\n</figure>\n\n<p>This hand, also known as trips or a set, contains three cards of one rank and two cards of two other ranks.</p>\n\n<pre><code>def three_of_a_kind(hand):\n    allfaces = [f for f,s in hand]\n\n    uniqueRanks = set(allfaces)\n\n    if len(uniqueRanks) != 3:\n        return False\n\n    for f in uniqueRanks:\n        if allfaces.count(f) == 3:\n            uniqueRanks.remove(f)\n            return \"three-of-a-kind\", f\n\n    return False;\n</code></pre>\n\n<h3><a id=\"straight\"></a> Straight</h3>\n\n<figure style=\"text-align: left;\">\n    <div class=\"playing_card ten_diamonds\"></div>\n    <div class=\"playing_card nine_spades\"></div>\n    <div class=\"playing_card eight_hearts\"></div>\n    <div class=\"playing_card seven_diamonds\"></div>\n    <div class=\"playing_card six_clubs\"></div>\n</figure>\n\n<p>This hand contains five cards arranged in a sequential order but not all of them have same suits.</p>\n\n<pre><code>def straight(hand):\n    ordered = sorted(hand, key=lambda card: (faces.index(card.face), card.suit))\n    if ''.join(card.face for card in ordered) in ''.join(face):\n        return 'straight', ordered[-1].face\n    return False;\n</code></pre>\n\n<h3><a id=\"flush\"></a> Flush</h3>\n\n<figure style=\"text-align: left;\">\n    <div class=\"playing_card jack_diamonds\"></div>\n    <div class=\"playing_card nine_diamonds\"></div>\n    <div class=\"playing_card eight_diamonds\"></div>\n    <div class=\"playing_card four_diamonds\"></div>\n    <div class=\"playing_card three_diamonds\"></div>\n</figure>\n\n<p>This hand contains five cards of the same suit and not necessarily arranged in sequential order.</p>\n\n<pre><code>def flush(hand):\n    allfaces = [f for f,s in hand]\n\n    first_card = hand[0]\n    other_cards = hand[1:]\n\n    if all(first_card.suit == card.suit for card in other_cards):\n        return 'flush', sorted(allfaces, key=lambda f: face.index(f), reverse=True)\n\n    return False\n</code></pre>\n\n<h3><a id=\"fullhouse\"></a> Full House</h3>\n\n<figure style=\"text-align: left;\">\n    <div class=\"playing_card six_spades\"></div>\n    <div class=\"playing_card six_hearts\"></div>\n    <div class=\"playing_card six_diamonds\"></div>\n    <div class=\"playing_card king_clubs\"></div>\n    <div class=\"playing_card king_hearts\"></div>\n</figure>\n\n<p>This hand, also known as full boat or a boat, contains three cards of one rank and two cards of another rank.</p>\n\n<pre><code>def full_house(hand):\n    allfaces = [f for f,s in hand]\n\n    rankFrequency = pe_lib.character_frequency(allfaces)\n\n    # if there are 2 types of ranks and there's a card with 1 pair and 3 of a kind\n    if len(rankFrequency) == 2 and (rankFrequency.values()[0] == 2 and rankFrequency.values()[1] == 3):\n        return 'full-house'\n\n    return False\n</code></pre>\n\n<h3><a id=\"fourofakind\"></a> Four of a Kind</h3>\n\n<figure style=\"text-align: left;\">\n    <div class=\"playing_card five_clubs\"></div>\n    <div class=\"playing_card five_spades\"></div>\n    <div class=\"playing_card five_diamonds\"></div>\n    <div class=\"playing_card five_hearts\"></div>\n    <div class=\"playing_card two_diamonds\"></div>\n</figure>\n\n<p>This hand, also known as quads, contains four cards of one rank and one card of another rank.</p>\n\n<pre><code>def four_of_a_kind(hand):\n    allfaces = [f for f,s in hand]\n\n    # create a unique set of ranks\n    uniqueRanks = set(allfaces)\n\n    # if there are more than 2 ranks, it's not four of a kind\n    if len(uniqueRanks) != 2:\n        return False\n\n    for f in uniqueRanks:\n        # if there are 4 faces, it is four of a kind\n        if allfaces.count(f) == 4:\n            uniqueRanks.remove(f)\n            return \"four-of-a-kind\", f\n\n    return False\n</code></pre>\n\n<h3><a id=\"straightflush\"></a> Straight Flush</h3>\n\n<figure style=\"text-align: left;\">\n    <div class=\"playing_card jack_clubs\"></div>\n    <div class=\"playing_card ten_clubs\"></div>\n    <div class=\"playing_card nine_clubs\"></div>\n    <div class=\"playing_card eight_clubs\"></div>\n    <div class=\"playing_card seven_clubs\"></div>\n</figure>\n\n<p>This hand contains five cards arranged in a sequential order with all cards having the same suit.</p>\n\n<pre><code>def straight_flush(hand):\n    # sort the cards based on the face rank of each card\n    ordered = sorted(hand, key=lambda card: (faces.index(card.face), card.suit))\n\n    first_card = ordered[0]\n    other_cards = ordered[1:]\n\n    # check if all are of the same suit\n    if all(first_card.suit == card.suit for card in other_cards):\n        # check if they are in sequential order\n        # compare the ordered faces substring with the face list (which is converted to string)\n        if ''.join(card.face for card in ordered) in ''.join(face):\n            return 'straight-flush', ordered[-1].face\n    return False\n</code></pre>\n\n<h3><a id=\"royalflush\"></a> Royal Flush</h3>\n\n<figure style=\"text-align: left;\">\n    <div class=\"playing_card ten_hearts\"></div>\n    <div class=\"playing_card jack_hearts\"></div>\n    <div class=\"playing_card queen_hearts\"></div>\n    <div class=\"playing_card king_hearts\"></div>\n    <div class=\"playing_card ace_hearts\"></div>\n</figure>\n\n<p>This hand contains the <strong><em>royal</em></strong> ranks in sequential order in the same suit.</p>\n\n<pre><code>def royal_flush(hand):\n    royalface = \"TJQKA\"\n    # sort the cards based on the face rank of each card\n    ordered = sorted(hand, key=lambda card: (faces.index(card.face), card.suit))\n\n    first_card = ordered[0]\n    other_cards = ordered[1:]\n\n    # check if all are of the same suit\n    if all(first_card.suit == card.suit for card in other_cards):\n        # check if they are in sequential order\n        # compare the ordered faces substring with the face list (which is converted to string)\n        if ''.join(card.face for card in ordered) in royalface:\n            return 'royal-flush', ordered[-1].face\n    return False\n</code></pre>\n\n<h2>Conclusion</h2>\n\n<p>It was a fun project to work on and I learnt new styles of array and string manipulation techniques using Python.</p>\n\n<p>Inspired by this, I'm planning to create an interactive version of this project using Javascript and talk about it on another article.</p>\n\n<p>The code for this program can be found in my <a href=\"https://github.com/MegaColorBoy/ProjectEuler\">GitHub repository</a>.</p>\n\n<p>Hope you liked reading this article!</p>\n\n<p>Stay tuned for more!</p>\n", "index": 42}, {"section": "writings", "title": "Project Euler solutions", "link": "writings/posts/project-euler-solutions", "date": "March 23rd, 2019", "date_alt": "23.03.2019", "year": "2019", "date_raw": "2019-03-23", "slug": "project-euler-solutions", "category": "Programming", "categories": [{"title": "Programming", "link": "/category/programming/"}], "summary": "A collection of Project Euler solutions", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/writings/41_2019_03_23_project-euler-solutions.md", "status": "active", "content": "<p>In order to get good at anything, not only at programming, it would require a good amount of practice. Three years ago, I started out solving <a href=\"https://www.projecteuler.net\">Project Euler</a> problems on C++ and Java for fun, which taught me how to write good code in short of amount of time.</p>\n\n<p>However, you'll notice that I have written the solutions using Python as I wanted to improve my Python coding skills and yes, just to code for fun!</p>\n\n<p>This blog article will have all the links available to everyone to learn from and understand the solutions and you can access it on my <a href=\"https://www.github.com/MegaColorBoy/ProjectEuler\">GitHub repository</a>.</p>\n\n<h2>Solution code</h2>\n\n<p>In addition, I have created a math library module named <a href=\"https://github.com/MegaColorBoy/ProjectEuler/blob/master/pe_lib.py\">pe_lib.py</a>, which contains all the mathematical functions that are used in every problem. I find it pretty useful as it allows me to re-use some of the functions instead of re-writing it for each solution.</p>\n\n<script defer src=\"/static/js/pe_solutions.js\" type=\"text/javascript\"></script>\n\n<table class=\"table\">\n    <thead>\n        <tr>\n            <th>Problem Link</th>\n            <th>Solution Link</th>\n        </tr>\n    </thead>\n    <tbody id=\"pe_solutions\"></tbody>\n</table>\n\n<p>Hope you'll find these solutions to be useful!</p>\n\n<p>Stay tuned for more!</p>\n", "index": 41}, {"section": "writings", "title": "The Alchemist by Paulo Coelho", "link": "writings/posts/the-alchemist-by-paulo-coelho", "date": "March 15th, 2019", "date_alt": "15.03.2019", "year": "2019", "date_raw": "2019-03-15", "slug": "the-alchemist-by-paulo-coelho", "category": "Review", "categories": [{"title": "Review", "link": "/category/review/"}], "summary": "A story about a young shepherd who starts his journey to chase his Personal Legend.", "reading_time": "3 minutes read", "preview_image_url": "", "filename": "content/writings/40_2019_03_15_the-alchemist-by-paulo-coelho.md", "status": "active", "content": "<p>I don't really read fiction books a lot but this is one of my favorites. I finished reading this book last week and it had inspired me and made me feel positive towards the goals that I wanted to chase in my life.</p>\n\n<h2>Why did I choose to read it?</h2>\n\n<p>On one fine evening, I was going through my endless list of bookmarks and I stumbled upon a <a href=\"http://www.doradolist.com/facts/stackoverflow-influential-programming-books.html\">link</a>, which had a collection of book recommendations on what are most influencial books for software engineers to read and I found this in the list of recommendations. So, I thought of trying it out on my new Amazon Kindle Paperwhite too.</p>\n\n<h2>About the story</h2>\n\n<figure>\n    <img src=\"https://dynamic.indigoimages.ca/books/0062315005.jpg?altimages=false&scaleup=true&maxheight=515&width=380&quality=85&sale=37&lang=en\"/>\n</figure>\n\n<p>The book is written by Paulo Coelho. As mentioned in the description, it's about a young shepherd named Santiago who starts a journey after having dreams about finding treasure in the Pyramids of Egypt. Without spoiling a lot, he meets several people such as an old man who claims to be a king, a woman of the desert that he falls in love with and an alchemist who wants to learn the technique of converting lead to gold.</p>\n\n<p>In the first few pages, the quotes said by the characters really stuck into my head:</p>\n\n<blockquote>\n  <p>Whoever you are, or whatever it is that you do, when you really want \n  something, it's because that desire originated in the soul of the universe.\n  It's your mission on earth.</p>\n</blockquote>\n\n<p>Funny but when I relate myself to the story, I'm currently on my own Personal Legend. Just like the shepherd himself, I started my journey with a vision and a willingness to pursue it. I didn't have the faintest clue on how to achieve my goals but I knew that I can and had to do it.</p>\n\n<h2>Everything is clear and everything is possible!</h2>\n\n<p>Santiago learns different lessons throughout his journey. One of the first lessons is when he had a conversation with a mysterious king. The king told the boy that everyone used to tell him, when everyone is young, they know what their Personal Legend is and as he quotes:</p>\n\n<blockquote>\n  <p>At that point in their lives, everything is clear and everything is possible. They are not afraid to dream, and to yearn for everything they would like to see happen to them in their lives. But as time passes, a mysterious force begins to convince them that it will be impossible for them to realize their Personal Legend.</p>\n</blockquote>\n\n<p>It relates a lot to the real world scenario because I see a lot of people who want to settle in their life. Safe place to live, marriage, kids, comfortable job, $401K plans and then off to retirement. But what happens after that? Settled in life? Yes, but did they achieve their dreams? Now, that's a question not everyone can answer, can they?</p>\n\n<h2>Listen to your heart and soul</h2>\n\n<p>In some parts of the book it states that once you stop listening to your heart and soul telling you to chase your dreams, it will, spontaneously, appear again for the next year or so and then, your heart and soul will stop talking to you and the dream fades away.</p>\n\n<h2>Conclusion</h2>\n\n<p>It's a simple story that has got elements of economy, love, war and pursuit of dreams. We all have our own highs and lows in life and I would recommend this book as a must-read for anyone who's currently trying to figure out their actual purpose in life. As you read the book, you'll relate yourself to Santiago and you'll start recommending this book to your friends too!</p>\n\n<p>Hope you liked reading this article!</p>\n\n<p>Stay tuned for more!</p>\n", "index": 40}, {"section": "writings", "title": "Tools of the Trade", "link": "writings/posts/tools-of-the-trade", "date": "March 8th, 2019", "date_alt": "08.03.2019", "year": "2019", "date_raw": "2019-03-08", "slug": "tools-of-the-trade", "category": "General", "categories": [{"title": "General", "link": "/category/general/"}], "summary": "The tools that I use daily for work and personal uses.", "reading_time": "5 minutes read", "preview_image_url": "", "filename": "content/writings/39_2019_03_05_tools-of-the-trade.md", "status": "active", "content": "<p>In our daily life, the tools we use do matter a lot, they help us solve problems, learn new things and complete our tasks. I usually read blogs of other programmers as well, by doing so, I get to learn about the different technologies and products they use and ultimately, it has helped me take inspiration to change myself too.</p>\n\n<p>I thought of writing an article about the tools that I use on a regular basis, so here we go!</p>\n\n<h2>Hardware</h2>\n\n<ul>\n<li><a href=\"#iphone-5s\">iPhone 5s</a></li>\n<li><a href=\"#dell-xps-13\">Dell XPS 13 9360</a></li>\n<li><a href=\"#apple-earphones\">Apple earphones</a></li>\n</ul>\n\n<h3><a id=\"iphone-5s\"></a> iPhone 5s</h3>\n\n<!-- <figure>\n    <img src=\"https://cnet3.cbsistatic.com/img/-Iaz053dbN-f0VaL8R063v6qq3Q=/830x467/2013/09/17/61d7c805-67c2-11e3-a665-14feb5ca9861/SeptimiusAdd05.jpg\"/>\n</figure> -->\n\n<p>I used to have a <strong><em>Samsung Galaxy Pocket</em></strong>, it was a really slow phone that made me hate Android OS. When I got the iPhone 5s, I never turned back. Not that I'm an Apple fanboy (Well, yes I am) but I believe it is one of Apple's best iPhones till date. The build quality is great. It's still one of those iPhones that has a headphone jack and also, it has a really nice form factor.</p>\n\n<h3><a id=\"dell-xps-13\"></a> Dell XPS 13 9360</h3>\n\n<!-- <figure>\n    <img src=\"https://img.purch.com/o/aHR0cHM6Ly93d3cubGFwdG9wbWFnLmNvbS9pbWFnZXMvdXBsb2Fkcy81MzUxL2cvZGVsbC14cHMtMTMtMjAxNy0wMDMuanBn\"/>\n</figure> -->\n\n<p>Before purchasing this laptop, I was going to buy a 13\" MacBook Pro 2017 but the internet convinced me that it might not be the right choice as it had a lot of flaws like the unresponsive butterfly keyboard, less ports and in terms of specs, it was a bit outdated.</p>\n\n<p>So I thought of going for my next choice with the following specs:</p>\n\n<ul>\n<li>Intel i7 @ 2.4Ghz 7th Generation</li>\n<li>256GB Solid State Drive</li>\n<li>8GB RAM</li>\n<li>13.3\" Inch FHD Display</li>\n</ul>\n\n<p>It came with a bloated Windows 10 and then later, I replaced it with Ubuntu 18.04 LTS, <a href=\"/posts/goodbye-windows-10/\">you can read about it here</a>.</p>\n\n<p>The laptop is very lightweight and portable. It has a really, really good display that is equivalent to the infamous Apple's Retina Display. Thanks to the specs, it runs really fast and I use it primarily for developing software.</p>\n\n<p>If you are planning on getting one, I do recommend it!</p>\n\n<h3><a id=\"apple-earphones\"></a> Apple earphones</h3>\n\n<!-- <figure>\n    <img src=\"https://cnet2.cbsistatic.com/img/MOkOGGszic1FaFrxFttQ_5JoRto=/830x467/2012/09/13/f5dea89d-67c2-11e3-a665-14feb5ca9861/Apple_EarPods_35446297_03.jpg\"/>\n</figure> -->\n\n<p>I got these earphones with my iPhone 5s, the sound quality is pretty decent and yes, it portable enough for me to listen to my favorite soundtracks on the go.</p>\n\n<h2>Software</h2>\n\n<ul>\n<li><a href=\"#ubuntu\">Ubuntu 18.04 LTS</a></li>\n<li><a href=\"#sublime\">Sublime Text 3</a></li>\n<li><a href=\"#vim\">VIM</a></li>\n<li><a href=\"#terminal\">Terminal</a></li>\n<li><a href=\"#spotify\">Spotify</a></li>\n<li><a href=\"#xampp\">XAMPP Control Panel</a></li>\n<li><a href=\"#chrome\">Google Chrome</a></li>\n<li><a href=\"#git\">Git</a></li>\n<li><a href=\"#ai\">Adobe Illustrator</a></li>\n<li><a href=\"#figma\">Figma</a></li>\n</ul>\n\n<h3><a id=\"ubuntu\"></a> Ubuntu 18.04 LTS</h3>\n\n<!-- <figure>\n    <img src=\"https://www.linuxnov.com/wp-content/uploads/2018/04/Ubuntu-18-04-LTS-Bionic-Beaver-Screenshot.png\"/>\n</figure> -->\n\n<p>I don't hate Windows, in fact, I do use it at work and for graphic design and entertainment purposes but I personally like using Linux as my development environment.</p>\n\n<p>I chose Ubuntu because it has a strong community and compared to other distributions, it has good support for Dell XPS hardware.</p>\n\n<p>Apart from that I've got three more things to say: Open source. Secure and Developer-Friendly.</p>\n\n<h3><a id=\"sublime\"></a> Sublime Text 3</h3>\n\n<figure>\n    <img src=\"https://s3-us-west-2.amazonaws.com/wsldpcom/el/images/ubuntu/sublime/sublime-3-ubuntu.jpg\"/>\n</figure>\n\n<p>I have been using Sublime Text since my university days, it's still one of my favorite text editors that I use at home and work. It has really good features such as:</p>\n\n<ul>\n<li>Powerful keyboard shortcuts</li>\n<li>Lightweight</li>\n<li>Fast startup</li>\n<li>Good selection of themes and configurable</li>\n<li>Able to edit multiple lines at the same time</li>\n</ul>\n\n<p>Oh, I wrote this article on Sublime Text!</p>\n\n<h3><a id=\"vim\"></a> VIM</h3>\n\n<figure>\n    <img src=\"https://cdn.thenewstack.io/media/2018/08/f0b2038f-1024px-vim-logiciel-console-1024x609.png\"/>\n</figure>\n\n<p>I read a lot of people talking about it and I thought giving it a shot to explore VIM and I must say, it's really a game changer.</p>\n\n<p>Although, it's not an IDE like <strong><em>Emacs</em></strong> but it's quite a powerful text editor. It has really powerful keyboard shortcuts, it's configurable and it's quite handy if you wanted to edit any file on the terminal.</p>\n\n<h3><a id=\"terminal\"></a> Terminal</h3>\n\n<figure>\n    <img src=\"https://news-cdn.softpedia.com/images/news2/Ubuntu-Terminal-Reboot-Is-Probably-One-of-the-Coolest-Terminals-You-ve-Seen-468554-4.jpg\"/>\n</figure>\n\n<p>Ahh, the terminal. The application that people instantly assumes that it's used for hacking. Well no, it's not only used for hacking.</p>\n\n<p>Yes, it's cool to use and know the command-line but I use it to automate my tasks using Bash, SSH, updates and upgrades using apt-get, downloading packages and software, editing text using VIM and much more.</p>\n\n<h3><a id=\"spotify\"></a> Spotify</h3>\n\n<figure>\n    <img src=\"https://spotify.i.lithium.com/t5/image/serverpage/image-id/59445i6F374608C1FC9F0C/image-size/large?v=1.0&px=999\"/>\n</figure>\n\n<p>Spotify wasn't available in the United Arab Emirates until November 2018. I use it during my coding sessions to stay focused. I'm a free user but I get to listen to all my favorite tracks. The AI recommended playlists are pretty cool too!</p>\n\n<h3><a id=\"xampp\"></a> XAMPP Control Panel</h3>\n\n<figure>\n    <img src=\"https://undsgn.com/wp-content/uploads/2018/03/XAMPP-3.jpg\"/>\n</figure>\n\n<p>Whenever I'm developing a PHP + MySQL web application, I use this as it comes with the Apache server. If you're using it on Linux, you might have to spend some time configuring the user access permissions.</p>\n\n<h3><a id=\"chrome\"></a> Google Chrome</h3>\n\n<figure>\n    <img src=\"https://mondrian.mashable.com/uploads%252Fcard%252Fimage%252F838813%252Feb915844-2a0d-40e5-ba74-5614edc74c11.jpg%252F950x534__filters%253Aquality%252890%2529.jpg?signature=Cofw_Z9okoU0wwgkN2u7XSVvLVI=&source=https%3A%2F%2Fblueprint-api-production.s3.amazonaws.com\"/>\n</figure>\n\n<p>My preferred browser and I use it everyday. I love using the Inspect tool to debug JavaScript and CSS code.</p>\n\n<p>It has good extensions for daily use:</p>\n\n<ul>\n<li>Adblock </li>\n<li>Postman</li>\n<li>React Developer Tools</li>\n<li>Amino: Live CSS Editor</li>\n</ul>\n\n<p>And yes, it does have a huge appetite for your RAM!</p>\n\n<h3><a id=\"git\"></a> Git</h3>\n\n<figure>\n    <img src=\"https://cdn-images-1.medium.com/max/1600/1*QoR3rxWIbnf5wmF_IuAHqQ.png\"/>\n</figure>\n\n<p>I have heard of a lot of systems but using Git for code versioning and source control is pretty helpful especially if you want to host your projects or maintain your code portfolio on <strong><em>GitHub</em></strong>.</p>\n\n<h3><a id=\"ai\"></a> Adobe Illustrator</h3>\n\n<figure>\n    <img src=\"https://www.oreilly.com/library/view/adobe-illustrator-cc/9780134664217/images/fmfig03.jpg\"/>\n</figure>\n\n<p>I have been using it since I was 15 years old, I remember that one of first vector art was a gas mask and from there, I taught myself how to use different tools like the Pen Tool, the Shape Builder and much more. I don't think that there can be anyone that can top Illustrator in the Digital Design industry.</p>\n\n<h3><a id=\"figma\"></a> Figma</h3>\n\n<figure>\n    <img src=\"https://images.fastcompany.net/image/upload/w_1280,f_auto,q_auto,fl_lossy/wp-cms/uploads/2018/03/p-1-as-design-and-engineering-merge-figma-is-becoming-a-platform-1.jpg\"/>\n</figure>\n\n<p>When I was worried that <strong><em>Sketch</em></strong> is not available on Linux or Windows, I discovered Figma. It's one of the best UI tools that I have ever used. It helped me build my UI/UX skills really quick and I felt really comfortable designing user interfaces and components before actually coding it.</p>\n\n<h2>Conclusion</h2>\n\n<p>Just to make a note, these are my essential tools and this article is not intended to change your mind, your mileage can vary.</p>\n\n<p>Hope you guys liked reading this article!</p>\n\n<p>Stay tuned for more!</p>\n", "index": 39}, {"section": "writings", "title": "Say Hello, New Blog", "link": "writings/posts/say-hello-new-blog", "date": "March 1st, 2019", "date_alt": "01.03.2019", "year": "2019", "date_raw": "2019-03-01", "slug": "say-hello-new-blog", "category": "Update", "categories": [{"title": "Update", "link": "/category/update/"}], "summary": "Everything from new updates to shifting to a static site generator.", "reading_time": "3 minutes read", "preview_image_url": "", "filename": "content/writings/38_2019_03_01_say-hello-new-blog.md", "status": "active", "content": "<p>Hello, 2019!</p>\n\n<p>Uhh, I guess it's a bit too late, but better late than never!</p>\n\n<p>Lately, the concept of using a static site generator has become the new rage. This blog that you are seeing now is powered by a custom-built static site generator written on Python and trust me, I love it!</p>\n\n<h2>Why shift from a dynamic to static website?</h2>\n\n<p>It took me some time to make a decision on why I would need to make a shift from a dynamic website to a website that serves static files, here are some of my reasons:</p>\n\n<ul>\n<li>Edit posts using Markdown</li>\n<li>Increased speed</li>\n<li>Eliminates the use of CMS and Databases</li>\n<li>Pre-generated and will be served on request without any delay</li>\n<li>Lightweight</li>\n<li>Ease of Maintenance</li>\n<li>More secure</li>\n</ul>\n\n<p>Apart from that, I wanted to understand the concept of Static Site Generators, so I thought of writing a static site generator using Python.</p>\n\n<p>Sure, there are many static site generators available online but I always like to be the curious cat!</p>\n\n<h2>How it works</h2>\n\n<p>Nothing complicated, the concept is pretty simple. All you have to do is write down your articles in Markdown and when you execute your static site generator, it will compile all your posts from your directory into individual static files using a template, which can then be served to your visitors.</p>\n\n<p>For example, let's say you have a markdown file named <mark>hello-world.md</mark> and you wrote your content:</p>\n\n<pre><code>title: Hello World\ndate: 2019-03-01 20:00\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ut sollicitudin dui, \npulvinar vulputate nibh. Cras eu nunc mauris. Vestibulum quis diam at diam feugiat semper vitae at sem. \nMauris in orci iaculis mauris semper gravida at nec augue. Phasellus luctus accumsan velit, \nin molestie odio luctus at. Curabitur neque erat, pretium vitae condimentum placerat, sodales eu \nnisi. Cras pretium nulla ac est interdum, vitae tempor mauris ornare. \nNullam tortor nisi, scelerisque vel purus id, dictum finibus erat. Nulla tincidunt egestas \nsodales. Sed sit amet elit placerat, pellentesque est in, bibendum enim. Nam dolor lorem, venenatis sit \namet sem at, sagittis feugiat risus. Fusce turpis felis, sodales a tortor vitae, volutpat semper \njusto. Donec porta id mi non porttitor. Fusce id est sit amet leo consectetur consequat.\n</code></pre>\n\n<p>Also, this is your template:</p>\n\n<pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;{{ title }}&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n    &lt;div&gt;Published on: {{ date }}&lt;/div&gt;\n    {{ content }}\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>And when you execute the application, this is what happens:</p>\n\n<pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Hello World&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n    &lt;div&gt;Published on: 2019-03-01 20:00&lt;/div&gt;\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ut sollicitudin dui, \n    pulvinar vulputate nibh. Cras eu nunc mauris. Vestibulum quis diam at diam feugiat semper vitae at sem. \n    Mauris in orci iaculis mauris semper gravida at nec augue. Phasellus luctus accumsan velit, \n    in molestie odio luctus at. Curabitur neque erat, pretium vitae condimentum placerat, sodales eu \n    nisi. Cras pretium nulla ac est interdum, vitae tempor mauris ornare. \n    Nullam tortor nisi, scelerisque vel purus id, dictum finibus erat. Nulla tincidunt egestas \n    sodales. Sed sit amet elit placerat, pellentesque est in, bibendum enim. Nam dolor lorem, venenatis sit \n    amet sem at, sagittis feugiat risus. Fusce turpis felis, sodales a tortor vitae, volutpat semper \n    justo. Donec porta id mi non porttitor. Fusce id est sit amet leo consectetur consequat.\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>The generator just parsed your article on Markdown and put the details on the template and tada, the article is generated. Easy peasy!</p>\n\n<p>The next step is to deploy it, I wrote a bash script to deploy all static files via FTP onto my server.</p>\n\n<p>It's a simple but powerful idea and gives me a lot of flexibility to create my future blog posts with each having a different look (not always, but sometimes).</p>\n\n<h2>Refreshed look, Creative energy</h2>\n\n<p>Although, the old one was good and minimal, something felt empty about it and I decided to change it.</p>\n\n<p>I experimented with different fonts and chose Fira Sans as the blog's primary font. As for colors, I took inspiration from Dropbox's recent change in branding and they combined various colors to create dynamic elements to their brand.</p>\n\n<p>So, I wrote a pattern generator on Javascript that would create a background image for every blog post and make it look colorful (See above).</p>\n\n<figure>\n    <img src=\"https://cdn-images-1.medium.com/max/2600/1*-egs-meZ08WEmAhlwa481Q.png\"/>\n    <figcaption>\u201cFloating Lines in the DeepSpace\u201d. A generative artwork by Miguel Neto & Rodrigo Carvalho.</figcaption>\n</figure>\n\n<p>Also, I have been exploring the concept of Generative Art, I found it really interesting especially it's creative and mathematical aspect. I have plans on replacing these colorful patterns with the random generative artworks, after all, I don't aim to make it look boring.</p>\n\n<h2>Discovery and Experimentation</h2>\n\n<p>I have been working on some side projects like Pac-Man clone, a text-editor based on C and a terminal-based to-do list application on Linux, learning and customizing VIM, tinkering with Vagrant boxes, Capture-The-Flags challenges, experiments with UI frameworks like ReactJS and so much more.</p>\n\n<h2>Hang in there, it's not over!</h2>\n\n<p>It's a work-in-progress and I'm trying to make my blog to be more creative, interactive and colorful.</p>\n\n<p>I will be hosting a separate section called <strong><em>\"Projects\"</em></strong>, which is currently under the works, it will contain all of my projects, UI/UX components to play around with, games and much more. I hope it will be the coolest section of this blog.</p>\n\n<p>Hope you liked reading this article and the new changes!</p>\n\n<p>Peace Out!</p>\n", "index": 38}, {"section": "writings", "title": "Goodbye, Windows 10!", "link": "writings/posts/goodbye-windows-10", "date": "November 2nd, 2018", "date_alt": "02.11.2018", "year": "2018", "date_raw": "2018-11-02", "slug": "goodbye-windows-10", "category": "Essay", "categories": [{"title": "Essay", "link": "/category/essay/"}], "summary": "An essay on why I switched from Windows 10 to Ubuntu 18.04 LTS.", "reading_time": "3 minutes read", "preview_image_url": "", "filename": "content/writings/37_2019_02_08_goodbye-windows-10.md", "status": "active", "content": "<p>Ah, it's been a long time since I had posted anything on my blog. In\ntoday's article, I will be talking about my switch from Windows 10 to\nUbuntu 18.04 LTS.</p>\n\n<h2>Why did I make the switch?</h2>\n\n<p>I grew up using different versions of Windows OS and my favorite one is\nWindows 7. I use Windows 8.1 at work and macOS High Sierra on my\nmid-2010 MacBook Pro at home.</p>\n\n<p>Recently, I bought myself a Dell XPS 9360 for serious development. Below\nare the specs:</p>\n\n<ul>\n<li>Intel Core i7 @ 2.4Ghz 7th Generation</li>\n<li>256GB SSD</li>\n<li>8GB RAM</li>\n<li>13.3\" Inch Full-HD Display</li>\n</ul>\n\n<p>However, I did have an issue with it, it came pre-installed with a bloated Windows 10.</p>\n\n<p>I tried giving Windows 10 a shot even after reading several blog posts\non how Microsoft collects data, forces updates that users can't opt out\nof and so on.</p>\n\n<p>Then one fine day, I left my laptop to download some files and then\nWindows decides to update without asking for my permission. My download\ngot disrupted and I finally decided to make the switch.</p>\n\n<p>Besides that, I wanted to have a good environment that's secure,\nprogrammer friendly and wanted to use the Terminal, which is a\nprogrammer's sweet spot for automation, executing scripts and accessing\nremote machines and so on.</p>\n\n<h2>Choosing a Linux distribution</h2>\n\n<p>At first, I wanted to try out Arch Linux for it's strong community and\namazing configurations but I thought of taking a safe side by trying out\nUbuntu.</p>\n\n<p>I downloaded the latest distribution from the official website and\ncreated a bootable USB drive. Later, I changed my laptop's BIOS\nconfiguration to Legacy mode from it's UEFI Secure Boot mode, which was\na bit annoying.</p>\n\n<p>After everything was done, I plugged in the bootable USB drive and\nvoila, Ubuntu's loaded on my screen.</p>\n\n<h2>Check for Hardware Compatibility</h2>\n\n<p>If you've read some articles, you might find some people writing out\ncomments that when you install Linux on your computer, you might face\nsome hardware compatibility issues. You can be detect it beforehand by\ntrying it out on a bootable USB drive.</p>\n\n<p>Luckily, thanks to Dell's hardware support for Linux, it detected all of\nmy laptop's hardware without any issues.</p>\n\n<p>I decided to go with a minimal installation as I don't want to have any\nbloatware on my computer.</p>\n\n<h2>Hello Ubuntu!</h2>\n\n<p>Ubuntu's new user interface looks really clean and minimal and it looked\nreally vibrant in my laptop's Full HD Display.</p>\n\n<p>The boot time was fast and it took a mere few seconds to display the\nlogin screen. As soon as I logged in, I installed the necessary\ndevelopment tools such as gcc, python, perl, git, node.js, npm package\nmanager, Emacs text editor and more.</p>\n\n<h2>Conclusion</h2>\n\n<p>Well, every operating system has it's own pros and cons, likewise, Linux\nhas a few cons such as that I won't be able to use Adobe applications\nlike Photoshop and Illustrator but that's not a big deal for me as my\nfocus is purely on development.</p>\n\n<p>If you're a programmer and serious about development, I would strongly\nrecommend you to try it out and you'll never want to return back to\nWindows again.</p>\n\n<p>Hope you liked reading this article!</p>\n\n<p>Adios Amigo!</p>\n", "index": 37}, {"section": "writings", "title": "Artificial Intelligence: A Modern Approach - Chapter 1", "link": "writings/posts/artificial-intelligence-a-modern-approach--chapter-1", "date": "September 1st, 2018", "date_alt": "01.09.2018", "year": "2018", "date_raw": "2018-09-01", "slug": "artificial-intelligence-a-modern-approach--chapter-1", "category": "Artificial Intelligence", "categories": [{"title": "Artificial Intelligence", "link": "/category/artificial-intelligence/"}], "summary": "An introduction into the foundations of Artificial Intelligence.", "reading_time": "9 minutes read", "preview_image_url": "", "filename": "content/writings/36_2019_02_08_artificial-intelligence-a-modern-approach--chapter-1.md", "status": "active", "content": "<p>It's something that I had in my mind for a long time but never got the\ntime to execute it but finally, I decided to get out of my comfort zone\nto learn new concepts and techniques that would enable me to solve new\nproblems. Hence,\u00a0I chose to study\u00a0<strong><em>Artificial Intelligence</em></strong>.</p>\n\n<figure>\n    <img src=\"http://www-fp.pearsonhighered.com/assets/hip/images/bigcovers/0132071487.jpg\"/>\n    <figcaption>\n        Artificial Intelligence, A Modern Approach (3rd Edition)\n    </figcaption>\n</figure>\n\n<p>I did some online research and found out a really good book named\n<a href=\"https://www.amazon.com/Artificial-Intelligence-Modern-Approach-3rd/dp/0136042597\">Artificial Intelligence, A Modern Approach (3rd\nEdition)</a>\u00a0by\nthe <a href=\"https://en.wikipedia.org/wiki/Stuart_J._Russell\">Stuart Russell</a>\nand one of my favorite computer scientists,\u00a0<a href=\"https://en.wikipedia.org/wiki/Peter_Norvig\">Peter\nNorvig</a> (Director of\nResearch at Google) to learn about it's concepts and techniques. The\nbook has 1000+ pages and it's a book used for undergraduate and graduate\nlevel courses in university.</p>\n\n<p>My current knowledge of Artificial Intelligence is pretty basic (e.g:\nwrite game AI) and I want to learn more about it and be able absorb any\ninformation related to it and build toy AI projects.</p>\n\n<p>I've completed the first chapter of the book, so let's dive in because\nthis going to be a long read.</p>\n\n<h2>What is Artificial Intelligence?</h2>\n\n<p>We read about it in the news, it's being deployed in our mobile\napplications that we use everyday such as Facebook, Instagram, Twitter,\nReddit and so on to filter out graphic content, fake information and\ninsensitive political content. It's also being used in games such as\nchess, scientific research, diagnosis of several diseases and\nself-driving cars.</p>\n\n<p>But do we know what is it?\u00a0According to Google Search, it means:</p>\n\n<blockquote>\n  <p>The theory and development of computer systems able to perform tasks\n  normally requiring human intelligence such as visual perception,\n  speech recognition, decision-making and translation between\n  languages.\u00a0</p>\n</blockquote>\n\n<p>It encompasses a huge number of fields and sub-fields and AI is already\nthe next big thing that it's shaping our everyday life.</p>\n\n<h2>Approaches towards AI</h2>\n\n<p>The book states that there are four types of approaches when it comes to\ncreating an AI:</p>\n\n<figure>\n    <img src=\"https://cs.shaunlgs.com/wp-content/uploads/2017/02/slide_3.jpg\"/>\n    <figcaption>\n        Four approaches towards AI.\n    </figcaption>\n</figure>\n\n<h3>Acting Humanly</h3>\n\n<p>Proposed by British computer scientist <a href=\"https://en.wikipedia.org/wiki/Alan_Turing\">Alan\nTuring</a>, the <a href=\"https://en.wikipedia.org/wiki/Turing_test\">Turing\nTest</a> approach was designed\nto provide a functional definition of Artificial Intelligence. The test\nis proved positive only when a human is unable to tell the difference\nbetween the results of a computer or a human. In order to think like a\nhuman, it should possess the following capabilities:</p>\n\n<ul>\n<li><strong><em>Natural Language Processing</em></strong> to enable communication in any\nlanguage with the human</li>\n<li><strong><em>Knowledge Representation</em></strong> to store what it knows or hears</li>\n<li><strong><em>Automated Reasoning</em></strong> to make conclusions based on the repository\nof information to answer questions</li>\n<li><strong><em>Machine Learning</em></strong> to learn and adapt to new patterns and\nextrapolations</li>\n</ul>\n\n<p>It is to be noted that the test deliberately avoided interaction with\nthe human because physical interaction with the human wasn't necessary\nfor intelligence.</p>\n\n<p>Then came another test called <strong><em>Total Turing Test</em></strong>, this was made to\ntest the computer's ability of visual perception. The computer passes\nthis test when it's possess the following abilities:</p>\n\n<ul>\n<li><strong><em>Computer Vision</em></strong> to be able to perceive and identify objects</li>\n<li><strong><em>Robotics</em></strong> to be able to manipulate physical objects</li>\n</ul>\n\n<figure>\n    <img src=\"https://www.sony.net/SonyInfo/CorporateInfo/newbusiness/AI_Robotics/img/image_movie_sp.jpg\"/>\n    <figcaption>\n        Sony's AIBO Home Entertainment robot.\n    </figcaption>\n</figure>\n\n<p>The abilities mentioned above, composes most of what modern AI is today\nand Turing deserves a huge credit for designing this test that still\nremains relevant for more than 60+ years.</p>\n\n<h3>Thinking Humanly</h3>\n\n<p>Do we know how humans think? Maybe, but for us to be able to determine\nthat, we would need to achieve a deep understanding of the human mind\nworks. There are a few ways such as:</p>\n\n<ul>\n<li><strong><em>Introspection</em></strong> by catching our own thoughts as they pass by</li>\n<li><strong><em>Psychological experiments</em></strong> by observing the actions or behavior\nof a human</li>\n<li><strong><em>Brain imaging</em></strong> by observing the brain in action</li>\n</ul>\n\n<figure>\n    <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Cognitive_Science_Hexagon.svg/800px-Cognitive_Science_Hexagon.svg.png\"/>\n    <figcaption>\n        Fields that contributed to the birth of cognitive science.\n    </figcaption>\n</figure>\n\n<p>Once we have sufficient information, it's possible to theorize that a\ncomputer program behaves like a human. <a href=\"https://en.wikipedia.org/wiki/Cognitive_science\">Cognitive\nScience</a> enables you to\ncombine both computational models of an AI and psychological\nexperimentation techniques to provide testable theories as to how the\nhuman mind works.</p>\n\n<h3>Thinking Rationally</h3>\n\n<p>Greek Philosopher <a href=\"https://en.wikipedia.org/wiki/Aristotle\">Aristotle</a>\nattempted to arrange information based on irrefutable evidence based on\nthe process of reasoning. His rules of inference a.k.a <strong><em>syllogisms</em></strong> (a\nform of reasoning in which conclusions are drawn from various\npropositions or a set of premises) provided patterns that yielded\ncorrect conclusions from correct premises. For example: <em>\"Socrates is a\nman; All men are mortal; therefore, Socrates is a mortal being\"</em>. These\nlaws of thought initiated the study of logic, which gave hope to 19th\ncentury logicians to help create intelligent systems.</p>\n\n<figure>\n    <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/ae/Aristotle_Altemps_Inv8575.jpg/448px-Aristotle_Altemps_Inv8575.jpg\"/>\n    <figcaption>\n        Marble bust of Greek Philosopher Aristotle.\n    </figcaption>\n</figure>\n\n<p>However, there are two main obstacles to this logical approach. Firstly,\nit's difficult to convert informal information into formal terms\nrequired by logical notations especially when the information isn't 100%\ncertain. Secondly, being able to solve a problem in theory vs. solving a\nproblem in practice are two different things. You can have a computer\nthat can solve a problem with a few hundred facts yet use up all of it's\nresources.</p>\n\n<h3>Acting Rationally</h3>\n\n<p>This is focused on creating <strong><em>intelligent agents</em></strong> that can perform\nvarious tasks like being able to operate autonomously, perceive objects,\nadapt to change, create new goals and pursue them. A <strong><em>rational\nagent</em></strong>\u00a0is an agent that acts to achieve the best expected outcome.</p>\n\n<p>Making the right conclusions based on evidences i.e. <strong><em>correct\ninferences</em></strong> is part of a rational agent because to act rationally, an\nagent must be able to reason with logic to reach to a conclusion for a\ngiven action to achieve one's goals.</p>\n\n<p>However, it doesn't necessarily that it's always \"correct\", sometimes,\nit has there's no such thing as the \"right\" thing to do but something\nmust be done.</p>\n\n<figure>\n    <img src=\"https://upload.wikimedia.org/wikipedia/commons/3/3f/IntelligentAgent-SimpleReflex.png\"/>\n    <figcaption>\n        A simple agent reflex.\n    </figcaption>\n</figure>\n\n<p>The skills needed for a Turing Test allows an agent to act rationally\nespecially on making good decisions using <strong><em>Knowledge\nRepresentation</em></strong>\u00a0and <strong><em>Automated Reasoning</em></strong>, generating intelligible\nsentences using <strong><em>Natural Language Processing</em></strong>\u00a0for a complex society,\nadapting to change and generating effective behavior using <strong><em>Machine\nLearning</em></strong>.</p>\n\n<p>But, there are some advantages to this approach. Firstly, it's more\ngeneral in terms of the logical approach (mentioned in <strong><em>Thinking\nRationally</em></strong>). Secondly, it's more open to scientific development\ncompared to human behavior (mentioned in <strong><em>Acting Humanly</em></strong>) and human\nthought (mentioned in <strong><em>Thinking Humanly</em></strong>). The standard rationality of\nan agent is purely mathematically defined and completely general whereas\nhuman behavior adapts to a specific environment.</p>\n\n<p>Later, the book states that it's focus is going to be based on the\ngeneral principles of rational agents and on components for constructing\nthem.</p>\n\n<h2>Is AI a science, or is it engineering?</h2>\n\n<p>As I was reading the book, it was fascinating to see how various\ndisciplines have contributed ideas, techniques and viewpoints to the\nfield of Artificial Intelligence. The following disciplines are:</p>\n\n<ul>\n<li>Philosophy</li>\n<li>Neuroscience</li>\n<li>Mathematics</li>\n<li>Economics</li>\n<li>Linguistics</li>\n<li>Psychology</li>\n<li>Computer engineering</li>\n<li>Control theory and cybernetics</li>\n</ul>\n\n<p>Each disciplines had thoughtful questions like How does a human brain\nwork? How are valid conclusions drawn from formal rules? How can we\nbuild an efficient computer? How to think and communicate in one's\nlanguage? How does the brain process large amounts of information? How\ndo humans and other living things think and act? How does language\nrelate to thought?</p>\n\n<p>This part of the book is really long but it was a good way to understand\nabout it's early foundations.</p>\n\n<h2>How is it useful today?</h2>\n\n<p>Well, that's not very easy to answer because it's being used in multiple\nfields and sub-fields. There are so many applications such as:</p>\n\n<ul>\n<li>Self Driving Cars</li>\n<li>Speech Recognition</li>\n<li>Facial Recognition</li>\n<li>Fighting Malware and Spam bots</li>\n<li>Filtering graphic content and fake information from social media</li>\n<li>Game playing AIs for different board games like Checkers, Go and Chess</li>\n</ul>\n\n<figure>\n    <img src=\"https://cdn1.i-scmp.com/sites/default/files/styles/980x551/public/images/methode/2018/04/25/2e2a124c-3b92-11e8-b6d9-57447a4b43e5_image_hires_135128.JPG?itok=uWX9_NQ4\"/>\n    <figcaption>\n        Chinese Government surveillance system using Facial Recognition.\n    </figcaption>\n</figure>\n\n<p>All of this used to be science fiction but thanks to the advancements of\nMathematics, Science and Engineering, it's become a reality in today's\nera.</p>\n\n<h2>Conclusion</h2>\n\n<p>Well, I don't know if this is one of the longest articles I have ever\nwritten but I really did enjoy writing this because this made me read\nthe chapter again and gained a better understanding of the concepts.</p>\n\n<p>I will be writing more articles about it, write algorithms and build\ntoy\u00a0 implementations of Artificial Intelligence applications.</p>\n\n<p>In fact, I wrote this article to answer all, if not, most of the\nquestions from the exercises section of this chapter.</p>\n\n<p>Hope you liked reading this article!</p>\n\n<p>Stay tuned for more!</p>\n\n<h2>Extras</h2>\n\n<ul>\n<li><a href=\"https://www.csee.umbc.edu/courses/471/papers/turing.pdf\">Computing Machinery and Intelligence by Alan Turing</a></li>\n</ul>\n", "index": 36}, {"section": "writings", "title": "Built a 2048 clone in 15 minutes", "link": "writings/posts/built-a-2048-clone-in-15-minutes", "date": "August 21st, 2018", "date_alt": "21.08.2018", "year": "2018", "date_raw": "2018-08-21", "slug": "built-a-2048-clone-in-15-minutes", "category": "Personal Challenge", "categories": [{"title": "Personal Challenge", "link": "/category/personal-challenge/"}], "summary": "An implementation of the famous 2048 game using JavaScript and HTML5 Canvas.", "reading_time": "2 minutes read", "preview_image_url": "", "filename": "content/writings/35_2019_02_08_built-a-2048-clone-in-15-minutes.md", "status": "active", "content": "<script defer src=\"/static/projects/2048/script.js\"></script>\n\n<figure>\n    <canvas id=\"game-grid\" width=\"500\" height=\"500\"></canvas>\n</figure>\n\n<p>Before you read more about this article, play with the above game. You\ncan move the tiles around using your <kbd>&uarr;</kbd><kbd>&larr;</kbd><kbd>&darr;</kbd><kbd>&rarr;</kbd>\nor <kbd>W</kbd><kbd>A</kbd><kbd>S</kbd><kbd>D</kbd> keys. The rule is simple, when two tiles with the same\nnumber touch, they merge into one tile. Press the <kbd>R</kbd> key to restart\nthe game.</p>\n\n<p>Please make sure that you have JavaScript enabled and running in your\nbrowser, otherwise you won't be able to play this game. Oh, just a\nlittle heads up, it might get a little buggy and freeze your browser\nwindow, so keep calm and play patiently.</p>\n\n<p>As for the source code, you can view it in my <a href=\"https://www.github.com/megacolorboy\">GitHub\nrepository</a> or can be found near\nthe end of this article.</p>\n\n<h2>Background</h2>\n\n<p>I was always fond of puzzle games and <strong>2048</strong> is one of them. The first\ntime I got to play this game was back in 2014 and I would play it on my\niPhone during my train commute to university.</p>\n\n<p>Yesterday, I thought of building a clone and turns out it wasn't as hard\nas I had expected it to be, in fact, I was able to build a functional\nversion in just 15 minutes.</p>\n\n<h2>What are the game mechanics?</h2>\n\n<p>The sliding-puzzle game is played on a <strong>four-by-four</strong> grid with\nnumbered tiles that is moved by the player in all four directions.</p>\n\n<p>In every move, a new tile would randomly appear in an empty spot in the\ngrid with a value that consists of <strong>2</strong> or <strong>4</strong>. These tiles are moved\ntowards any direction as far as it could and if there are two tiles that\ncollide with the same value, they merge into one tile and as a result,\nthe score is updated.</p>\n\n<p>The player wins the game once the tile of <strong>2048</strong> appears on the grid,\nthus is the name of the game.</p>\n\n<h2>Source code</h2>\n\n<script src=\"https://gist.github.com/MegaColorBoy/fcce2a2029a1b0352884cbbc1f059cb1.js\"></script>\n\n<p>Well then, that's all for the game. Just like the previous ones, I had\nfun building this sliding-puzzle game. I'm looking forward to building\nmore puzzle games and talking about them in my blog.</p>\n\n<p>Hope you guys liked reading this article and have fun playing the game\nas many times as you like!</p>\n\n<p>Stay tuned for more!</p>\n", "index": 35}, {"section": "writings", "title": "Can we eliminate traffic congestion with the help of Computer Vision?", "link": "writings/posts/can-we-eliminate-traffic-congestion-with-the-help-of-computer-vision", "date": "August 19th, 2018", "date_alt": "19.08.2018", "year": "2018", "date_raw": "2018-08-19", "slug": "can-we-eliminate-traffic-congestion-with-the-help-of-computer-vision", "category": "Essay", "categories": [{"title": "Essay", "link": "/category/essay/"}], "summary": "Writing out my thoughts on eradicating traffic congestion in highly populated cities.", "reading_time": "4 minutes read", "preview_image_url": "", "filename": "content/writings/34_2019_02_08_can-we-eliminate-traffic-congestion-with-the-help-of-computer-vision.md", "status": "active", "content": "<p>Whether it's being implemented or not, I have been thinking on how we\ncould use <strong><em>Computer Vision</em></strong> to solve traffic congestion.</p>\n\n<p>Since, I live in the <strong><em>United Arab Emirates</em></strong>, I have always observed\nthat people who commute from\u00a0<strong><em>Sharjah</em></strong> to <strong><em>Dubai</em></strong> and vice-versa\nface a lot of traffic jams despite all the new roads and toll-gates\n(yes, I don't seem to understand how does that solve the problem).</p>\n\n<figure>\n    <img src=\"https://images.khaleejtimes.com/storyimage/KT/20160203/ARTICLE/302039854/AR/0/AR-302039854.jpg&MaxW=780&imageVersion=16by9&NCS_modified=20160203204300\"/>\n    <figcaption>\n        Traffic in Al Ittihad Highway.\n    </figcaption>\n</figure>\n\n<p>Well, the problem is not only faced in this country but many countries\nsuch as China, Indonesia and so on.</p>\n\n<h2>What are the causes of traffic congestion?</h2>\n\n<p>Anyways, I jotted down some facts to consider what causes traffic\ncongestion in the first place:</p>\n\n<ul>\n<li>Tail-gating</li>\n<li>Inconsistent travel speeds</li>\n<li>Uneven vehicular distances</li>\n<li>Spontaneous accidents and road rages</li>\n<li>Changing from one lane to another</li>\n<li>Increase in car population</li>\n<li>Peak hours i.e. people going to work and leaving from work</li>\n</ul>\n\n<p>I'm sure that there could be more but these are the facts that I can\ncome up with for now.</p>\n\n<h2>How can Computer Vision solve this problem?</h2>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Computer_vision\">Computer Vision</a>\u00a0is a\nfield that intersects with multiple areas of technologies in which it\naims to develop an understanding of objects by extracting information\nfrom various digital media sources like images and videos and automate\nthose tasks that a normal human would do in their daily lives.</p>\n\n<figure>\n    <img src=\"https://www.onlinebooksreview.com/uploads/blog_images/2018/04/16_computer_vision.jpg\"/>\n    <figcaption>\n        Visualization of Computer Vision.\n    </figcaption>\n</figure>\n\n<p>There are various types of problems that Computer Vision algorithms are\nable to solve but not limited to:</p>\n\n<ul>\n<li>Object Recognition or Object Classification</li>\n<li>Identification of Objects</li>\n<li>Object Detection</li>\n<li>Analysis of Motion</li>\n</ul>\n\n<p>Now, it's not only about implementing these <strong><em>CNN</em></strong>-based\n(<a href=\"https://en.wikipedia.org/wiki/Convolutional_neural_network\">Convolutional Neural\nNetwork</a>)\nalgorithms but you also need hardware to be able to compute and process\ndata.\u00a0</p>\n\n<h2>How would this work?</h2>\n\n<p>There are two scenarios that I had thought while writing this article\nand I hope that I'm able to translate my thoughts into accurate\nexamples.</p>\n\n<p>Let's pretend we have four car drivers: Alex, Bob, Charlie and Dylan.</p>\n\n<h3>Speed-Distance equilibrium</h3>\n\n<p>Alex, Bob and Charlie are driving on the same lane. Alex hits the brake\nslowly to shift to another lane, the sensors of Bob's car detects a\nchange in speed in Alex's car, Bob's car adjusts it's speed to match\nAlex's current speed based on the variables of distance and travel time,\nCharlie's car adapts the changes of Bob's car and thus, it's a chain\nreaction.</p>\n\n<h3>Shifting from one lane to another</h3>\n\n<p>Alex is driving in Lane A and Dylan is driving in Lane B. Alex wants to\nshift to Lane B, so he switches on the indicator and Dylan's car sensors\nidentify that Alex's car wants to change lanes. So Dylan's car slows\ndown and Alex is able to shift lanes with ease. I thought of it to be\nsome sort of a <strong><em>\"elastic\"</em></strong> effect when this occurs.</p>\n\n<p>Well, you might argue that some cars have a system called <strong><em>\"Cruise\nControl\"</em></strong>\u00a0but here's the part that I'm trying to pitch, as I had\nmentioned above, I just wanted to integrate sensors to the front and\nrear sides of a vehicle, which means that these sensors can be\nintegrated in almost any vehicle.</p>\n\n<h2>How is this going to be helpful?</h2>\n\n<p>For starters, traffic congestion will gradually reduce, if not, be\neliminated but there are other beneficial factors to it, such as:</p>\n\n<ul>\n<li>Less fuel consumption</li>\n<li>Less time is required to reach a destination</li>\n<li>No tail-gating</li>\n<li>Could prevent major road accidents</li>\n</ul>\n\n<p>However, if the sensors fail to work, the car driver will still be safe\nbecause it's surrounded by other cars that have the sensors. This made\nme think of another question, does that mean do all cars require sensors\nor only a few? I find it quite intriguing.</p>\n\n<h2>Conclusion</h2>\n\n<p>Although, these sensors might require a vehicle to have some intelligent\ncapabilities, it may not require the type of network found in an\nautonomous vehicle.</p>\n\n<figure>\n    <img src=\"https://i.pinimg.com/originals/b4/7c/00/b47c00d89eb8527be3f47578958f691e.gif\"/>\n</figure>\n\n<p>The idea of placing sensors in the front and rear of a vehicle can\noptimize the flow of traffic and thus, it might help eliminate traffic\ncongestion.</p>\n\n<p>Hope you liked reading this article!</p>\n", "index": 34}, {"section": "writings", "title": "Meet Blog Engine 2.0", "link": "writings/posts/meet-blog-engine-20", "date": "August 3rd, 2018", "date_alt": "03.08.2018", "year": "2018", "date_raw": "2018-08-03", "slug": "meet-blog-engine-20", "category": "General", "categories": [{"title": "General", "link": "/category/general/"}], "summary": "Basically, a minimal blog engine with a paper-like user interface with better enhancements.", "reading_time": "3 minutes read", "preview_image_url": "", "filename": "content/writings/33_2019_02_08_meet-blog-engine-20.md", "status": "active", "content": "<div class=\"post-notification\">\n    <h3>Blog engine updated!</h3>\n    <p>As of March 1st 2019, I have changed my blog engine from a dynamic website to a custom-built static site generator. <a href=\"../writings/posts/say-hello-new-blog/\">Read more &rarr;</a></p>\n</div>\n\n<p>Whenever I'm writing a new blog post, I would write it using HTML on my\ntext editor i.e. using <strong><em>Sublime Text</em></strong>\u00a0and copy-paste the source code\ninto my blog engine and hit \"Submit\" and that was really annoying.</p>\n\n<p>You might be thinking to yourself as to why I'm putting myself through\nsuch a tedious process to write a blog article when there are several\n<strong><em>WYSIWYG</em></strong> text editor plugins.</p>\n\n<p>Truth is, I have to admit that I was lazy and I cared a lot about\nwriting my blog articles but never cared about the tool I had built that\nto write my blog articles, so I decided to upgrade it and make it even\nbetter than what it was previously!</p>\n\n<h2>Why rewrite it?</h2>\n\n<p>For starters, the old one had a clunky and pretty much boring user\ninterface. I used <strong><em>CKEditor</em></strong> text editor plugin but to be honest, I\nrarely used any of it's features as I was just directly copy-pasting my\nsource code from Sublime Text to the text field box.</p>\n\n<p>Over time, it became slow due to spaghetti code and it required a lot of\ncode refactoring as I wrote this code during my earlier days of\nprogramming by following various programming tutorials.</p>\n\n<p>Here's some screenshots of the old blog engine:</p>\n\n<figure>\n    <img src=\"/static/images/be-v1-1.png\" />\n    <figcaption>\n        Fig.1: Index Page\n    </figcaption>\n</figure>\n\n<figure>\n    <img src=\"/static/images/be-v1-2.png\" />\n    <figcaption>\n        Fig.2: List of blog posts\n    </figcaption>\n</figure>\n\n<figure>\n    <img src=\"/static/images/be-v1-3.png\" />\n    <figcaption>\n    Fig.3: Edit page\n    </figcaption>\n</figure>\n\n<p>And, last but not the least, it didn't make me feel like I was writing a\nblog but rather felt like writing HTML code in a more tedious manner.</p>\n\n<h2>Time for a change!</h2>\n\n<p>For the past two weeks, I have been working on a new version of the blog\nengine and I had decided to give it some new features like:</p>\n\n<ul>\n<li>Clean and paper-like user interface by taking inspiration from Google's Material Theming Design guidelines</li>\n<li>Minimal text editor built from scratch that can be extensible in the future</li>\n<li>Auto-save article every minute</li>\n<li>Emojis, LaTeX syntax, JavaScript files and IFRAME windows</li>\n<li>Live search bar to filter articles by keywords or categories</li>\n</ul>\n\n<p>In case, you're wondering, I built this using vanilla JavaScript and a\ncustom-built MVC PHP framework with a MySQL database.</p>\n\n<p>Here's some screenshots of the new blog engine:</p>\n\n<figure>\n    <img src=\"/static/images/be-v2-1.png\" />\n    <figcaption>\n        Fig.4: Index page with a better UI\n    </figcaption>\n</figure>\n\n<figure>\n    <img src=\"/static/images/be-v2-2.png\" />\n    <figcaption>\n        Fig.5: Minimal Text Editor\n    </figcaption>\n</figure>\n\n<p>What I really wanted to achieve with the new blog engine is that I want\nto give myself an enjoyable writing experience besides, this blog post\nwas written from the new blog engine.</p>\n\n<p>Well, it's stable as of yet but I need to run a few tests and build more\nfunctionalities before deploying it on my production server and finally\nsaying good-bye to the old version.</p>\n\n<p>Hope you liked reading this article!</p>\n", "index": 33}, {"section": "writings", "title": "Build and Design software with Empathy", "link": "writings/posts/build-and-design-software-with-empathy", "date": "July 6th, 2018", "date_alt": "06.07.2018", "year": "2018", "date_raw": "2018-07-06", "slug": "build-and-design-software-with-empathy", "category": "User Interface + User Experience", "categories": [{"title": "User Interface", "link": "/category/user-interface/"}, {"title": "User Experience", "link": "/category/user-experience/"}], "summary": "Can seeing things from another's perspective create empathy and help solve technical challenges?", "reading_time": "5 minutes read", "preview_image_url": "", "filename": "content/writings/32_2019_02_08_build-and-design-software-with-empathy.md", "status": "active", "content": "<p>Recently, I've started reading this book named <a href=\"https://abookapart.com/products/designing-for-emotion\">Designing For\nEmotion</a> by\n<a href=\"http://aarronwalter.com/\">Aarron Walter</a> and I've made it a point to\nread it during my free time and so far I have completed three chapters\nof the book.</p>\n\n<p>In the first chapter of the book, I found a really interesting sentence,\nwritten by the author:</p>\n\n<blockquote>\n  <p>Keep in mind that ignoring human needs is not a history we are doomed\n  to repeat. Through our designs, we can see and connect with other\n  human beings.</p>\n</blockquote>\n\n<p>Do you think a good software builds strong connections with other human\nbeings? Well, we have good examples like Facebook, Google, Netflix, and\nMicrosoft are proof that they have a massive pool of audience who likes\nto use their products on a daily basis.</p>\n\n<p>In this article, I will share some of my thoughts on how empathy can be\nused to build and design powerful applications.</p>\n\n<h2>User Interface Matters</h2>\n\n<p>To any user, whatever is displayed on the application matters the most,\nin this case, it's the <strong><em>User Interface</em></strong> of an application. If it\ndoesn't allow a user to perform their desired task, it will end up in\ntheir Recycle Bin.</p>\n\n<figure>\n    <img src=\"https://cdn.cultofmac.com/wp-content/uploads/2017/08/Ping-780x604.jpg\"/>\n    <figcaption>\n        Fig. 1: Apple's Ping\n    </figcaption>\n</figure>\n\n<p>There are many examples in the book and one of the examples is about\n<strong><em>Apple's Ping</em></strong> (refer to Fig. 1), which was an attempt in creating a\nsocial network on <strong><em>iTunes</em></strong> but it turned out to be unsuccessful as\nusers learned that they weren't able to share songs on Facebook or\nTwitter and it lacked basic features. As a result, users didn't come\nback to it again.</p>\n\n<p>In my opinion, a good user interface should be relatively easy to use\nand be more reliable in terms of pagespeed or simple and easy navigation\nfor the user. I mean, think about it, if your user is able to complete\ntheir desired task and that puts a smile on their face, the user will\nshare their experiences to their friends and you'll get more people to\nuse your application, thus making your application more powerful.</p>\n\n<h2>A Universal Design</h2>\n\n<p>A door knob comes with multiple designs such as rotating knobs and\nlevers but what matters the most to the people? The design or the\nfunctionality? I personally prefer a lever knob over a rotating knob as\nI find it quite annoying. Weird analogy but the point is, it should just\nopen the door, nothing fancy.</p>\n\n<p>Similarly, when we build our software, by following proper techniques,\nwe can choose to make it beautiful but also choose to make it accessible\nand functional for everybody, at all costs.</p>\n\n<h2>Listen to your users</h2>\n\n<p>When building and designing a piece of code, it should and always be for\nthe people that uses or will use your product. By understanding what's\nimportant to the users, it can help you get to the core of the problem\nand surpass technical challenges easily.</p>\n\n<p>This can be achieved by gathering user requirements in the form of\nsurveys, user feedback and A/B testing. Remember, software is just an\nexpressive form of bringing your ideas to life and writing code is\nbuilding on top of the idea to achieve a certain goal but empathy is the\nsecret sauce to the success of your application.</p>\n\n<h2>UX is not UI</h2>\n\n<p>What's the first thing that comes to your mind when a friend of yours\ntells you: <em>\"Hey, I'm working as a UX Designer at UberCoolCorp!\"</em>? Does\nhe build User Interfaces? Is he a Visual Graphics Designer? Neither,\nactually!</p>\n\n<p>User Experience is not about how your application looks but how it feels\nand makes it simple and easier to interact with your users. I'd like to\nshare an interesting quote from Usabilla's UX Expert, Erik Flowers:</p>\n\n<blockquote>\n  <p>UX is the intangible design of a strategy that brings us to a\n  solution.</p>\n</blockquote>\n\n<p>User Experience encompasses a lot of elements such as Information\nArchitecture, Interaction Design, Usability, Product Design and so on.\nBelow is a picture for your reference about why User Experience is not\nUser Interface:</p>\n\n<figure>\n    <img src=\"http://www.uxisnotui.com/downloads/with-title.png\"/>\n    <figcaption>\n        Fig. 2: How UX wants to be seen.\n    </figcaption>\n</figure>\n\n<p>Although, it does have a lot of elements, UI is a huge part of the\ndesign process because strong visual aesthetics are still essential in\nUX, which is also one of the aspects of your user's interactions with\nthe application.</p>\n\n<h2>Progressive Enhancement</h2>\n\n<p>A strategy that is known to take you on journey from simplicity to\ncomplexity. It's about starting off with a strong, practical foundation\nand then building on top of it. It's easier to maintain and make small\nyet incremental changes, renders the application to be more robust and\nit works for all users.</p>\n\n<h2>Conclusion</h2>\n\n<p>Well, I'm sure there a lot of elements to this topic but I thought of\nhighlighting some of the most important parts of building and designing\nsoftware with empathy. As engineers or developers, it is our job to\nensure that our final product is usable and accessible to our end-user.</p>\n\n<p>Hope you liked reading this article!</p>\n\n<p>Stay tuned for more!</p>\n\n<h2>Extras</h2>\n\n<ul>\n<li><a href=\"https://medium.com/design-ibm/empathy-is-not-a-soft-skill-its-a-superpower-81f11e32201e\">Empathy is not a soft skill. It's a superpower.</a></li>\n<li><a href=\"https://simpleprogrammer.com/empathy-software-developers/\">How Empathy can be a Software Developer's superpower</a></li>\n</ul>\n", "index": 32}, {"section": "writings", "title": "Lexicographic Permutations", "link": "writings/posts/lexicographic-permutations", "date": "May 25th, 2018", "date_alt": "25.05.2018", "year": "2018", "date_raw": "2018-05-25", "slug": "lexicographic-permutations", "category": "Algorithms + Data Structures", "categories": [{"title": "Algorithms", "link": "/category/algorithms/"}, {"title": "Data Structures", "link": "/category/data-structures/"}], "summary": "How to generate the next permutation of any given sequence in lexicographical order.", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/writings/31_2019_02_08_lexicographic-permutations.md", "status": "active", "content": "<p>According to <a href=\"https://projecteuler.net/problem=24\">Problem 24</a> in Project Euler, you are asked to find the millionth permutation using the following sequence of 10 digits (0, 1, 2, 3, 4, 5, 6, 7, 8, 9). Well, if you do the math, there are around <strong><em>10! = 3,628,800 unique permutations</em></strong> and that means, you have to come up with an efficient algorithm.</p>\n\n<p>I tried writing a recursive function but it turned out to be a bit tricky, so I thought of writing a brute-force solution which seemed far more simpler to understand and it's quite efficient.</p>\n\n<h2>Algorithm Description</h2>\n\n<p>The following algorithm is quite simple and easy to understand:</p>\n\n<pre><code>1. Find i such that a[i-1] is greater than or equal to a[i].\n2. Find j such that a[j-1] is less than or equal to a[i-1].\n3. Swap a[i] with a[j].\n4. Reverse the suffix from a[i+1] to the last element.\n</code></pre>\n\n<p>Suppose, if the first step fails, it means the current permutation is the last one because such an index that does not exist. However, it's simple to implement the following algorithm correctly and efficiently, so let's take a look at the implementation.</p>\n\n<h2>Python Implementation</h2>\n\n<p>The following method only generates the next permutation of any given sequence, so if you're interested in generating all the permutations, especially, for very large lists, this function can be useful.</p>\n\n<p><strong>Implementation of the method(s):</strong></p>\n\n<pre><code># Swap numbers in a list\ndef swap(list, i, j):\n    list[i], list[j] = list[j], list[i]\n\n# Get the next permutation\ndef nextPermutation(list):\n\n    i = len(list) - 1\n\n    # As long as the f(x-1) &gt;= f(x), decrement the first index\n    while list[i-1] &gt;= list[i]:\n        i = i-1\n\n    j = len(list)\n\n    # As long as the f(y-1) &lt;= f(x-1), decrement the second index\n    while list[j-1] &lt;= list[i-1]:\n        j = j-1\n\n    # make a swap\n    swap(list, i-1, j-1)\n\n    i = i+1\n    j = len(list)\n\n    # keep swapping until you get the next permutation\n    while i &lt; j:\n        swap(list, i-1, j-1)\n        i = i+1\n        j = j-1\n\n    return list\n</code></pre>\n\n<p><strong>Final code:</strong></p>\n\n<pre><code>#!usr/bin/python\nimport math, time, pe_lib\n\nstart = time.time()\n\nlist = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n\ncount = 1\nlimit = 1000000\n\nwhile count &lt; limit:\n    pe_lib.nextPermutation(list)\n    count = count + 1\n\nprint \"\".join(str(x) for x in list)\nprint \"Finished: %f seconds\" % (time.time() - start)\n</code></pre>\n\n<p>This code in executed in approximately <strong>2.37 seconds</strong> with an algorithmic complexity of <strong>O(n)</strong> i.e. linear time complexity and the replacements of the numbers were done <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\">in-place</a> since no extra space was used.</p>\n\n<p>Hope you liked reading this article!</p>\n\n<h2>References</h2>\n\n<ul>\n<li><a href=\"https://www.cut-the-knot.org/do_you_know/AllPerm.shtml\">Counting and Listing all Permutations</a></li>\n<li><a href=\"https://leetcode.com/articles/next-permutation\">LeetCode: Next Permutation</a></li>\n</ul>\n", "index": 31}, {"section": "writings", "title": "Finding the 1000 digit Fibonacci number using the Golden Ratio", "link": "writings/posts/finding-the-1000-digit-fibonacci-number-using-the-golden-ratio", "date": "May 18th, 2018", "date_alt": "18.05.2018", "year": "2018", "date_raw": "2018-05-18", "slug": "finding-the-1000-digit-fibonacci-number-using-the-golden-ratio", "category": "Mathematics", "categories": [{"title": "Mathematics", "link": "/category/mathematics/"}], "summary": "Rather than sticking to using a brute force solution, I decided to find the 1000 digit fibonacci number using the Golden Ratio.", "reading_time": "2 minutes read", "preview_image_url": "", "filename": "content/writings/30_2019_02_08_finding-the-1000-digit-fibonacci-number-using-the-golden-ratio.md", "status": "active", "content": "<p>Back in February, I said that I'm going to start <a href=\"/posts/i-decided-to-learn-python\">solving Project Euler\nproblems using Python</a> and yes, I\nhave been doing it actively but sometimes, I don't find the time to post\nthe solutions.</p>\n\n<p>If you're someone who has tried Project Euler before, you'll know that\nyou'll get to encounter problems that require you to implement smart\nsolutions to crunch big numbers efficiently. One of those problems is\n<a href=\"https://www.projecteuler.net/problem=25\">Problem 25</a>, which states to\nfind the first term in the <a href=\"https://en.wikipedia.org/wiki/Fibonacci_number\">Fibonacci\nSequence</a> that contains\n1000 digits.</p>\n\n<p>This problem can be easily solved using a Brute Force solution, instead,\nI opted to try out a mathematical solution that makes use of the <a href=\"https://en.wikipedia.org/wiki/Golden_ratio\">Golden\nRatio</a> and also, it gave me\nthe perfect excuse to try writing those formulas using\n<a href=\"https://en.wikipedia.org/wiki/LaTeX\">LaTeX</a> markup.</p>\n\n<h2>What is Golden Ratio?</h2>\n\n<p>Famously known as <strong><em>Phi</em></strong> that represents the Golden Ratio is an\nirrational number that's approximately equal to <strong><em>1.6180</em></strong> and just like\nit's cousin, <strong><em>Pi</em></strong>, it has a never ending pattern of decimal digits.</p>\n\n<p>\\[\\Phi = 1.6180339887... \\]</p>\n\n<p>According to the <a href=\"https://en.wikipedia.org/wiki/Golden_ratio\">article</a>\nin Wikipedia, back in the Twentieth Century, architects and artists had\nproportioned their works to approximate the Golden Ratio in the form of\na <a href=\"https://en.wikipedia.org/wiki/Golden_rectangle\">Golden Rectangle</a>,\nthat is believed to be aesthetically pleasing.</p>\n\n<h2>Time for some Calculus!</h2>\n\n<p>This is the equation used to find the <strong><em>n<sup>th</sup></em></strong> Fibonacci Number:</p>\n\n<p>\\[ F(n) = {log(\\Phi)^n \\over \\sqrt{5}} \\]</p>\n\n<p>Now, let's modify this formula to find the smallest integer i.e. the\nfirst term of the 1000 digit number that fulfills this inequality:</p>\n\n<p>\\[ {log(\\Phi)^n \\over \\sqrt{5}} \\gt {10^{999}} \\]</p>\n\n<p>Expand the formula a little bit more:</p>\n\n<p>\\[ n \\times log(\\Phi) - {log(5) \\over 2} \\gt {999 \\times log(10)} \\]</p>\n\n<p>\\[ n \\times log(\\Phi) \\gt {999 \\times log(10)} + {log(5) \\over 2} \\]</p>\n\n<p>We need to find n, so let's isolate it:</p>\n\n<p>\\[ n = {{999 \\times log(10) + {log(5) \\over 2}} \\over\n{log(\\Phi)}} = 4782.06 \\]</p>\n\n<p>\\[ n \\cong 4782 \\]</p>\n\n<p>So, the first term that contains the 1000 digit Fibonacci Number is\n<strong><em>4782</em></strong>.</p>\n\n<p>Here's the solution using Python that solved in 0.000194 seconds:</p>\n\n<pre><code>import math\n\nlimit = 999\ngolden_ratio = 1.6180\n\nn = round(((limit * math.log(10)) + (math.log(5)/2))/(math.log(golden_ratio)))\n\nprint n\n</code></pre>\n\n<p>So, this is how it would look in our first equation above:</p>\n\n<p>\\[F(4782) = {log(\\Phi)^{4782} \\over \\sqrt{5}} = Some Large\nNumber \\]</p>\n\n<p>Well, if you try to find the number using a calculator or compile it on\nyour computer, you'll end up having a compile error that says <strong><em>\"Math\nError\"</em></strong>!</p>\n\n<p>Hope you liked reading this article!</p>\n\n<h2>References</h2>\n\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Fibonacci_number\">Fibonacci Number Sequence</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Golden_ratio\">Golden Ratio</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Golden_rectangle\">Golden Rectangle</a></li>\n</ul>\n", "index": 30}, {"section": "writings", "title": "The Game of Life", "link": "writings/posts/the-game-of-life", "date": "April 14th, 2018", "date_alt": "14.04.2018", "year": "2018", "date_raw": "2018-04-14", "slug": "the-game-of-life", "category": "Essay", "categories": [{"title": "Essay", "link": "/category/essay/"}], "summary": "An essay about The Game of Life and it's unpredictable behaviour of creating different yet unique patterns.", "reading_time": "3 minutes read", "preview_image_url": "", "filename": "content/writings/29_2019_02_08_the-game-of-life.md", "status": "active", "content": "<figure>\n    <canvas id=\"game-of-life\" height=\"500px\" width=\"500px\"></canvas>\n    <script defer src=\"/static/projects/game-of-life/script.js\" type=\"text/javascript\"></script>\n</figure>\n\n<p>Life is full of surprises, isn't it?</p>\n\n<p>We can't state what could possibly happen in the future based on the\npresent events. It's like a pattern but except you don't know what it\nwould turn to be in the end.</p>\n\n<p>This is what the Cambridge Mathematician <a href=\"https://en.wikipedia.org/wiki/John_Horton_Conway\">John H.\nConway</a> must have\nthought about when he invented the <strong>Game of Life</strong>, who was really\ninterested in <a href=\"https://en.wikipedia.org/wiki/Cellular_automaton\">Cellular\nAutomaton</a>, a field of\nmathematical research, that is often used in the earlier days to\nsimulate systems in real world scenario.</p>\n\n<p>His work was influenced by Hungarian-American Mathematician <a href=\"https://en.wikipedia.org/wiki/John_von_Neumann\">John von\nNeumann</a>, who aimed to\nbuild a machine that had the ability to self-replicate itself and thus,\nConway became successful when he was able to simplify Neumann's ideas\nusing a mathematical model that he had discovered.</p>\n\n<p>I'd like to share a quote that I found really inspiring:</p>\n\n<blockquote>\n  <p>\"You know, people think mathematics is complicated. Mathematics is the\n  simple bit. Its the stuff we can understand. Its cats that are\n  complicated. I mean, what is it in those little molecules and stuff\n  that make one cat behave differently than another, or that make a cat?\n  And how do you define a cat? I have no idea.\" - John H. Conway</p>\n</blockquote>\n\n<h2>What is Game of Life?</h2>\n\n<p>It's a zero-player game on a two-dimensional grid of squares that has no\nwinners or losers except a certain set of simple mathematical rules that\nachieves an unpredictable behavior of whether a pattern (or population)\nwill die, become stable or grow out of control.</p>\n\n<p>According to the <a href=\"https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life\">Wikipedia</a> article, these are the following rules:</p>\n\n<ol>\n<li>Any live cell with fewer than two live neighbours dies, as if caused\nby underpopulation.</li>\n<li>Any live cell with two or three live neighbours lives on to the next\ngeneration.</li>\n<li>Any live cell with more than three live neighbours dies, as if by\noverpopulation.</li>\n<li>Any dead cell with exactly three neighbours becomes a live cell, as\nif by reproduction.</li>\n</ol>\n\n<p>This is one of the simplest examples of a <strong><em>self-organizing</em></strong> system. I\nfind it really interesting as how unique yet different patterns emerge\nfrom a simple set of rules and might be considered as a form of\n<strong><em>mathematical beauty</em></strong>. However, did this help mathematicians or\nscientists to understand the diversity of life that has evolved on\nearth? Perhaps, but I do believe that <strong><em>Mother Nature</em></strong> is far more\ncomplicated than that. However, it did help me realize that I have to\nstudy and understand different patterns and behaviours in order to build\ncomplex systems.</p>\n\n<p>Studying the behavior of cells or animals using a simple set of rules\ncan help understand how things really work and this influences\nscientists and engineers to come up with brilliant solutions to solve\nexisting problems in this world.</p>\n\n<p>For example, studying the intelligent behavior of ants being able to\nbuild complex ant colonies, trying to understand the cause of traffic\ncongestions and how to prevent them (which I will be talking about in\nanother post), finding the cure for cancer and many other human diseases\nand so on.</p>\n\n<p>Well, the point that I'm trying to make is, perhaps, the solution to all\nof today's current problems could be hidden inside the patterns of this\nsimple game.</p>\n\n<p>Hope you enjoyed reading this article!</p>\n\n<p>Adios Amigo!</p>\n\n<h2>References</h2>\n\n<ul>\n<li><a href=\"http://web.stanford.edu/~cdebs/GameOfLife\">The Game of Life by Stanford University</a></li>\n</ul>\n", "index": 29}, {"section": "writings", "title": "UI Design Pattern: Edit-in-Place", "link": "writings/posts/ui-design-pattern-editinplace", "date": "March 24th, 2018", "date_alt": "24.03.2018", "year": "2018", "date_raw": "2018-03-24", "slug": "ui-design-pattern-editinplace", "category": "User Interface + User Experience", "categories": [{"title": "User Interface", "link": "/category/user-interface/"}, {"title": "User Experience", "link": "/category/user-experience/"}], "summary": "I implemented a design pattern that could help my team edit content on-the-fly instead of having to navigate through a sea of web pages in a separate portal.", "reading_time": "2 minutes read", "preview_image_url": "", "filename": "content/writings/28_2019_02_08_ui-design-pattern-editinplace.md", "status": "active", "content": "<p>Two weeks ago, I was thinking of making an improvement on my <a href=\"https://www.kit.ae\">company\nwebsite</a>'s custom-built Content Management System\n(CMS) in order to make it easier for my team to edit and push content\nwith ease.</p>\n\n<p>As a matter of coincidence, I came across a book named <a href=\"http://www.designinginterfaces.com\">Designing\nInterfaces: Patterns for Effective Interaction\nDesign</a> by Jennifer Tidwell, which\ncontains several User Interface and Interaction Design patterns that\ninspired me to implement one of the patterns that I had discovered in\nthe book, <strong><em>\"Edit-in-Place\"</em></strong>.</p>\n\n<h2>What's Edit-in-Place?</h2>\n\n<p>It's like a tiny WYSIWYG text-editor that allows users to change the\ntext directly on top of the original text instead of going through a\nseparate portal or dialog box.</p>\n\n<h2>Why did I build it?</h2>\n\n<p>The fact that my team has to navigate through a sea of pages in the CMS\nto edit content is annoying and sometimes, it could be just opening a\nlot of new tabs on the browser. Hence, a feature like this would allow\nthem to edit content <strong><em>\"on-the-fly\"</em></strong> with zero navigation.</p>\n\n<p>Below, I have made an implementation of it using Javascript and an\nexperimental design for my blog.</p>\n\n<p><strong>How to use Edit-in-Place:</strong></p>\n\n<ul>\n<li>Hover on top of any text element.</li>\n<li>Double-click on the selected element.</li>\n<li>Click <strong><em>Save</em></strong> to save changes.</li>\n<li>Click <strong><em>Cancel</em></strong> to cancel changes.</li>\n</ul>\n\n<figure>\n    <iframe width=\"500\" height=\"1993\" src=\"/static/projects/edit-in-place\">\n    </iframe>\n</figure>\n\n<p>The book claims that <strong><em>Flickr</em></strong> is one of them who implemented this\nfeature, you can find this feature in most modern Content Management\nSystems like Wordpress, Joomla or Drupal or a better example, you have\nused this feature while renaming a file on your computer.</p>\n\n<p>However, there are some limits to this i.e. you can only apply this\nfeature on dynamic webpages as you'll have to write a few additional\nlines of <strong><em>AJAX</em></strong> that sends a <strong><em>POST</em></strong> request to your server to\nreflect the saved changes on your database.</p>\n\n<p>Hope you guys found this article useful!</p>\n\n<h2>Credit</h2>\n\n<p>Icons used are from <a href=\"https://www.flaticon.com/\">www.flaticon.com</a> is licensed by <a href=\"http://creativecommons.org/licenses/by/3.0/\">CC 3.0 BY</a></p>\n", "index": 28}, {"section": "writings", "title": "Convert IIS web.config to Apache .htaccess using Javascript", "link": "writings/posts/convert-iis-webconfig-to-apache-htaccess-using-javascript", "date": "February 24th, 2018", "date_alt": "24.02.2018", "year": "2018", "date_raw": "2018-02-24", "slug": "convert-iis-webconfig-to-apache-htaccess-using-javascript", "category": "Programming", "categories": [{"title": "Programming", "link": "/category/programming/"}], "summary": "Last week, I built a small tool that converts IIS web.config to Apache .htaccess using Javascript", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/writings/26_2019_02_08_convert-iis-webconfig-to-apache-htaccess-using-javascript.md", "status": "active", "content": "<p>Last week, I was migrating my company's website from our in-house IIS\nVirtual Private Server to a Dedicated Apache Server in order to improve\nthe website's overall performance and handle more traffic efficiently.\nFor those of you who have hosted a website using Microsoft's IIS\nManager, you'll know that it makes use of an XML document named\n<strong><em>web.config</em></strong> file, whereas in an Apache Server, it's an <strong><em>.htaccess</em></strong>\nfile, which is also used to store rules to write clean and friendly\nURLs.</p>\n\n<p>Converting from <strong><em>.htaccess</em></strong> to <strong><em>web.config</em></strong> is easy as it's a matter\nof importing the rules directly on IIS Manager's <strong><em>URL Rewrite</em></strong> module\nbut doing the other way around was also possible but only if you did it\nmanually and I really don't want to waste time on such mundane tasks.</p>\n\n<h2>How did I convert it?</h2>\n\n<p>A little bit of <a href=\"https://en.wikipedia.org/wiki/Regular_expression\">Regular\nExpressions</a>, a dash\nof Javascript and an understanding on how Apache's <strong><em>mod_rewrite</em></strong>\nworks, I decided to build a tool that converts <strong><em>web.config</em></strong> to\n<strong><em>.htaccess</em></strong> format.</p>\n\n<p><strong>How to use this converter:</strong></p>\n\n<ul>\n<li>Paste your <strong><em>web.config</em></strong> XML code on the textfield</li>\n<li>Hit <strong><em>\"Convert\"</em></strong> to convert to <strong><em>.htaccess</em></strong> format</li>\n<li>Please use a valid XML format before converting your code</li>\n</ul>\n\n<!-- DEMO -->\n\n<div id=\"js-code\"></div>\n\n<script defer src=\"/static/projects/iis-to-apache/script.js\" type=\"text/javascript\"></script>\n\n<!-- DEMO -->\n\n<p><strong>Code snippet:</strong></p>\n\n<pre><code>//web.config to .htaccess converter\nfunction webConfigToHtaccess()\n{\n\n    // Take input from textarea\n    // and parse it into XML\n\n    var xml = $(\"#webconfig-xml\").val(), \n    xmlDoc = $.parseXML(xml), \n    $xml = $(xmlDoc);\n\n\n    // - Inside each \"rule\", look for the \"action\" child node\n    // - If it contains multiple parameters, follow the \n    // regular expression pattern: /{R:(d{1})}/\n    // - Replace that pattern with a dollar sign and it's parameter\n    // - Append \"RewriteRule\" along with the url and it's rules\n\n    $xml.find('rule').each(function(){\n        var str = $(this).find(\"rule&gt;action\").attr('url');\n        var regex = /{R:(d{1})}/;\n        while(regex.test(str))\n        {\n            str = str.replace(regex, '$' + RegExp.$1);\n        }\n\n        $(\"#htaccess-code\").append(\"RewriteRule \" + $(this).find(\"rule&gt;match\").attr('url')\n            + \" \" + str + \"&lt;br&gt;\"\n        );\n    });\n}\n</code></pre>\n\n<p>Although, I can't really say that it's perfect because I had to make\nsome changes but hey, it's just minor changes and yes, it did save me a\nlot of time!</p>\n\n<p>Hope you found this article useful!</p>\n", "index": 26}, {"section": "writings", "title": "Convert SVG from Image to Code using Javascript", "link": "writings/posts/convert-svg-from-image-to-code-using-javascript", "date": "February 24th, 2018", "date_alt": "24.02.2018", "year": "2018", "date_raw": "2018-02-24", "slug": "convert-svg-from-image-to-code-using-javascript", "category": "Programming", "categories": [{"title": "Programming", "link": "/category/programming/"}], "summary": "Two weeks ago, I wrote a small script to convert SVG from Image to Code using Javascript that allowed me to play around with it's attributes and properties.", "reading_time": "2 minutes read", "preview_image_url": "", "filename": "content/writings/27_2019_02_08_convert-svg-from-image-to-code-using-javascript.md", "status": "active", "content": "<p>Have you ever downloaded minimal and beautiful looking SVG icons and\nadded them into your HTML code as an <strong><em>&lt;img&gt;</em></strong> instead of\n<strong><em>&lt;svg&gt;</em></strong> tag? The answer is: <strong><em>\"yes, you're right!\"</em></strong>.</p>\n\n<p>Okay, how about another question?</p>\n\n<p>What would you do if you want to change all of those SVG icons to black,\nred or blue? Your answer would be: <strong><em>\"Well, I would edit the colors of\nall the vector images in Adobe Illustrator and then refresh my page to\nsee the changes.\"</em></strong>, if that's your answer, then what would you do if\nyou have to do it for multiple icons in multiple pages in a short amount\nof time?</p>\n\n<p>Two weeks ago, I faced this same scenario and I found a quick solution\nto it and I will be sharing it in this article on how to convert SVG\nfrom image to code using Javascript and how it allowed me to play around\nwith attributes and properties.</p>\n\n<h2>Why convert from Image to Code?</h2>\n\n<p>Well, as a developer, it allows me to interact with every part of the\nSVG such as changing the colors, adjusting the height and width, animate\nit and so on. In this article, I will show you an example on how I could\ndo a simple color change on an SVG image that I had downloaded from\n<a href=\"https://www.flaticon.com\">flaticon</a>.</p>\n\n<figure>\n    <img src=\"/static/images/space.svg\"/>\n    <figcaption>\n        Figure 1. Original SVG Space Icon\n    </figcaption>\n</figure>\n\n<h2>How to convert from Image to Code?</h2>\n\n<p>Simple, just convert the SVG image into an XML format using\n<strong><em>XMLSerializer()</em></strong> then give it a class name like <strong><em>\"custom-svg-icon\"</em></strong>\nand execute the code! Below, I have provided a code snippet, I hope the\ncomments will help you out!</p>\n\n<p><strong>Code snippet:</strong></p>\n\n<pre><code>    $(function(){\n     //Change the class name, if it has to be applied for more SVG elements\n     jQuery('img.custom-svg-icon').each(function(){\n     var $img = jQuery(this); // The image\n     var imgID = $img.attr('id'); // ID attribute\n     var imgClass = $img.attr('class'); // Class Name\n     var imgURL = $img.attr('src'); // URL of the SVG image\n\n     jQuery.get(imgURL, function(data) {\n     //The data param contains the XML data of the SVG image\n     //alert(new XMLSerializer().serializeToString(data));\n\n     // Get the SVG tag, ignore the rest\n     var $svg = jQuery(data).find('svg');\n\n     // Give the image's ID to the SVG\n     if(typeof imgID !== 'undefined') \n     {\n     $svg = $svg.attr('id', imgID);\n     }\n\n     // Give the image's class to the SVG\n     if(typeof imgClass !== 'undefined') \n     {\n     $svg = $svg.attr('class', imgClass+' replaced-svg');\n     }\n\n     // Remove any invalid XML tags as per http://validator.w3.org\n     $svg = $svg.removeAttr('xmlns:a');\n\n     // Check if the viewport is set, else we gonna set it if we can.\n     if(!$svg.attr('viewBox') &amp;&amp; $svg.attr('height') &amp;&amp; $svg.attr('width')) \n     {\n     $svg.attr('viewBox', '0 0 ' + $svg.attr('height') + ' ' + $svg.attr('width'))\n     }\n\n     // Replace image with new SVG\n     $img.replaceWith($svg);\n\n     }, 'xml'); //Returns as XML\n     });\n    });\n</code></pre>\n\n<p>Give it some custom CSS to change the color and width of the SVG image:</p>\n\n<pre><code>    svg path, svg rect\n    {\n        fill: #ff5a5f;\n    }\n\n    .custom-svg-icon\n    {\n        width: 170px;\n        height: 170px;\n    }\n</code></pre>\n\n<p>Right-click on the image, hit <strong><em>\"Inspect Element\"</em></strong> and view the\nconverted image below but this time, you'll see it as an SVG element:</p>\n\n<script defer src=\"/static/projects/svg-img-to-code/script.js\"></script>\n\n<figure>\n    <img class=\"custom-svg-icon\" src=\"/static/images/space.svg\"/>\n    <figcaption>\n        Figure 2. Converted SVG Space Icon\n    </figcaption>\n</figure>\n\n<p>However, there are a few downsides to this as SVG code is hard to\nmaintain, pretty messy and sometimes quite complex especially if it\ncontains a lot of paths, circles and rectangles but in a scenario that\nis similar to what I have faced, I think it's pretty useful, otherwise,\njust stick to adding your SVG images using the <strong><em>&lt;img&gt;</em></strong> tag.</p>\n\n<p>Hope you have found this article useful!</p>\n\n<h2>Credit</h2>\n\n<p>Icons made by <a href=\"https://www.flaticon.com/authors/eucalyp\">Eucalyp</a> from <a href=\"https://www.flaticon.com/\">www.flaticon.com</a> is licensed by <a href=\"http://creativecommons.org/licenses/by/3.0/\">CC 3.0\nBY</a></p>\n", "index": 27}, {"section": "writings", "title": "I decided to learn Python", "link": "writings/posts/i-decided-to-learn-python", "date": "February 3rd, 2018", "date_alt": "03.02.2018", "year": "2018", "date_raw": "2018-02-03", "slug": "i-decided-to-learn-python", "category": "Algorithms + Programming", "categories": [{"title": "Algorithms", "link": "/category/algorithms/"}, {"title": "Programming", "link": "/category/programming/"}], "summary": "I decided to get back on solving algorithmic and programming puzzles by adding a new programming language to my tech arsenal, Python.", "reading_time": "3 minutes read", "preview_image_url": "", "filename": "content/writings/25_2019_02_08_i-decided-to-learn-python.md", "status": "active", "content": "<p>Hello Folks!</p>\n\n<p>Happy New Year! I know I'm late at this point but hey, it's better late\nthan never!</p>\n\n<p>As the year had begun, I got busy with work and I barely found any time\nto post anything new but that doesn't mean I didn't do anything new.</p>\n\n<p>At the end of December, I decided to get back on solving algorithmic and\nprogramming puzzles again (The last time I did was back on 2016) and for\nstarters, I decided to solve <a href=\"http://projecteuler.net\">Project Euler</a>\nproblems by adding a new programming language to my tech arsenal,\n<strong><em>Python</em></strong>.</p>\n\n<h2>Why solve it using Python?</h2>\n\n<p>Previously, I'd solved around 57 problems using <strong><em>C++</em></strong> and it got\npaused for a while after I got into internships and work life. But now\nthat I have found the time for it, I thought that this would be the\nperfect opportunity for me to learn Python. It has a really good\ncommunity, good documentation and the code looks so clean, simple and\nreadable without those curly brackets!</p>\n\n<h2>What is Project Euler?</h2>\n\n<p>It's a website that hosts a series of challenging algorithmic and\nmathematical programming puzzles in which you will have to produce\nsolutions that'd <strong><em>clock in under a minute</em></strong> with decent computer\nspecifications.</p>\n\n<p>By solving these puzzles, you will be experiencing an <strong><em>inductive chain\nlearning</em></strong> i.e. when you solve one problem, you'll be exposed to a\ncompletely new concept that allows you to delve into unfamiliar areas of\nmathematics and programming.</p>\n\n<p>As I'm writing this article, I'm taking it slow and I have solved around\n21 problems in 3 weekends. I will be posting a walkthrough for each\nproblem but for now, I will talk about one of my favorite problems:\n<strong><em>Maximum Path Sum</em></strong>.</p>\n\n<h2>Maximum Path Sum</h2>\n\n<p>Problem definition of <a href=\"https://projecteuler.net/problem=18\">Problem 18</a>:</p>\n\n<p>By starting at the top of the Binary Tree below and moving to adjacent\nnumbers on the row below, the maximum total from top to bottom is 23.</p>\n\n<p style=\"text-align:center;font-family:'FiraMono';font-size:12pt;\"><span style=\"color:#ff0000;\"><b>3</b></span><br><span style=\"color:#ff0000;\"><b>7</b></span> 4<br>\n2 <span style=\"color:#ff0000;\"><b>4</b></span> 6<br>\n8 5 <span style=\"color:#ff0000;\"><b>9</b></span> 3</p>\n\nThat is, 3 + 7 + 4 + 9 = 23. Now, find the maximum total from top to bottom of the Binary Tree below:\n\n<p style=\"text-align:center;font-family:'FiraMono';\">\n75<br>\n95 64<br>\n17 47 82<br>\n18 35 87 10<br>\n20 04 82 47 65<br>\n19 01 23 75 03 34<br>\n88 02 77 73 07 63 67<br>\n99 65 04 28 06 16 70 92<br>\n41 41 26 56 83 40 80 70 33<br>\n41 48 72 33 47 32 37 16 94 29<br>\n53 71 44 65 25 43 91 52 97 51 14<br>\n70 11 33 28 77 73 17 78 39 68 17 57<br>\n91 71 52 38 17 14 91 43 58 50 27 29 48<br>\n63 66 04 68 89 53 67 30 73 16 69 87 40 31<br>\n04 62 98 27 23 09 70 98 73 93 38 53 60 04 23\n</p>\n\n<p>Since there are fifteen rows, you can solve this puzzle using Brute\nForce by trying every route possible but if you're going to use that\nsame technique for <a href=\"https://projecteuler.net/problem=67\">Problem 67</a>\nthat has a Binary Tree containing one hundred rows, it will not be\nefficient. So this problem forces you to avoid brute force and instead\nwants you to come up with a clever solution!</p>\n\n<h2>Solution</h2>\n\n<p>As I had mentioned above, a brute force technique is going to be very\ninefficient, instead I did a bottom-up approach:</p>\n\n<p><strong>Implementation of the method(s):</strong></p>\n\n<pre><code># Sum of numbers\ndef sumOfNumbers(n):\n    return (n*(n+1))/2\n\n# Return the maximum path sum in a Binary Tree\n# Bottom Up Approach\ndef maxPathSum(list):\n    # the last number of the list\n    last = len(list)\n\n    # number of rows in the Binary Tree\n    nrow = 1\n\n    # count the number of rows in the Binary Tree\n    # use the sum of numbers method to count the number of rows\n    while sumOfNumbers(nrow) &lt; last:\n        # print (sumOfNumbers(nrow))\n        nrow += 1\n\n    last -= 1\n\n    for i in range(nrow, 0, -1):\n        # print list[last - i]\n\n        # iterate through each number in each row\n        for j in range(2, i+1):\n            # pick a number from the row above the current row\n            # and pick the 2 numbers from the current row\n            # Find the max between the two numbers and add it\n            list[last - i] = list[last - i] + max(list[last - 1], list[last])\n\n            # shift to the next number in the row above\n            last -= 1\n\n        # shift to the next number in the row above\n        last -= 1\n\n    # return the max sum\n    return list[0]\n</code></pre>\n\n<p><strong>Final code:</strong></p>\n\n<pre><code># Project Euler: Problem 18 and 67 - Maximum Path Sum I and II\n\n#!usr/bin/python\nimport time, math, pe_lib\n\nnum_str = \"\"\n\n# read text file\nf = open(\"triangle2.txt\", \"r\")\nfor line in f:\n    num_str += line\nf.close()\n\n# convert the string numbers to integers in the list\nlist = map(int, num_str.replace('n', ' ').split(' '))\n\nstart = time.time()\nprint pe_lib.maxPathSum(list)\nprint \"Finished: %f seconds\" % (time.time() - start)\n</code></pre>\n\n<p>The maximum path sum for <strong><em>Problem 67</em></strong> is <strong><em>7273</em></strong> and it compiled in\n<strong><em>0.003990</em></strong> seconds.</p>\n\n<p><strong><em>Note: This solution and the library named <mark>pe_lib.py</mark> was\nbuilt using the Python programming language. The source code for this\nsolution can be found on Github.</em></strong></p>\n\n<p>Stay tuned for more!</p>\n", "index": 25}, {"section": "writings", "title": "The Cryptopals Crypto Challenges: Set 1 - Detect AES in ECB Mode", "link": "writings/posts/the-cryptopals-crypto-challenges-set-1--detect-aes-in-ecb-mode", "date": "December 29th, 2017", "date_alt": "29.12.2017", "year": "2017", "date_raw": "2017-12-29", "slug": "the-cryptopals-crypto-challenges-set-1--detect-aes-in-ecb-mode", "category": "Cryptography", "categories": [{"title": "Cryptography", "link": "/category/cryptography/"}], "summary": "Find the string that has been encrypted with AES-128 cipher with an ECB mode in a file of ciphertexts.", "reading_time": "2 minutes read", "preview_image_url": "", "filename": "content/writings/24_2019_02_08_the-cryptopals-crypto-challenges-set-1--detect-aes-in-ecb-mode.md", "status": "active", "content": "<p>This is the <a href=\"http://cryptopals.com/sets/1/challenges/8\">eighth challenge</a> of Set 1 in The Cryptopals Crypto Challenges website. Previously, I spoke about these challenges and provided walkthroughs for the previous challenges, if you haven't read them, here are the links:</p>\n\n<ul>\n<li><a href=\"/posts/the-cryptopals-crypto-challenges\">The Cryptopals Crypto Challenges</a></li>\n<li><a href=\"/posts/the-cryptopals-crypto-challenges-set-1-convert-hex-to-base64\">The Cryptopals Crypto Challenges: Set 1 - Convert Hex to Base64</a></li>\n<li><a href=\"/posts/base64-encoding-decoding-using-bitwise-manipulation-in-c\">Base64 Encoding / Decoding using Bitwise Manipulation in C++</a></li>\n<li><a href=\"/posts/the-cryptopals-crypto-challenges-set-1-fixed-xor\">The Cryptopals Crypto Challenges: Set 1 - Fixed XOR Cipher</a></li>\n<li><a href=\"/posts/the-cryptopals-crypto-challenges-set-1-single-byte-xor-cipher\">The Cryptopals Crypto Challenges: Set 1 - Single-Byte XOR Cipher</a></li>\n<li><a href=\"/posts/the-cryptopals-crypto-challenges-set-1-detect-single-character-xor\">The Cryptopals Crypto Challenges: Set 1 - Detect Single-Character XOR</a></li>\n<li><a href=\"/posts/the-cryptopals-crypto-challenges-set-1-implement-repeating-key-xor\">The Cryptopals Crypto Challenges: Set 1 - Implement Repeating-Key XOR</a></li>\n<li><a href=\"/posts/hamming-distance-algorithm-in-c\">Hamming Distance Algorithm in C++</a></li>\n<li><a href=\"/posts/the-cryptopals-crypto-challenges-set-1-break-repeating-key-xor\">The Cryptopals Crypto Challenges: Set 1 - Break Repeating-Key XOR</a></li>\n<li><a href=\"/posts/the-cryptopals-crypto-challenges-set-1-aes-in-ecb-mode\">The Cryptopals Crypto Challenges: Set 1 - AES in ECB Mode</a></li>\n</ul>\n\n<p>For this challenge, you are given a <a href=\"http://cryptopals.com/static/challenge-data/8.txt\">file</a>, which contains a bunch of ciphertexts that has been encrypted using <strong><em>AES-128 Cipher</em></strong> but only one of them has an <strong><em>ECB (Electronic Codebook)</em></strong> mode. Find the string the string that has the ECB mode.</p>\n\n<p>In the <a href=\"/posts/the-cryptopals-crypto-challenges-set-1-aes-in-ecb-mode\">previous post</a>, I had explained that <strong><em>ECB</em></strong> is a cipher mode that is used to repeat the key until it covers the entire plaintext i.e. the same 16 byte plaintext will have the same 16 byte ciphertext.</p>\n\n<p>Well, the solution is pretty much trivial, so here's the solution:</p>\n\n<p><strong>Implementation of the method(s):</strong></p>\n\n<pre><code>//Detect ECB Mode in AES Cipher\nbool CryptoLib::detect_ecb_mode(string str, int keyLength)\n{\n    //Divide into equal amount of blocks\n    int blocks = str.size() / keyLength;\n\n    /*\n        Theory: the problem with ECB as I had mentioned\n        in the previous post, it uses the exact number of bytes of the ciphertext\n        to encrypt the plaintext repeatedly.\n\n        In that case, just do the reverse.\n\n        Divide it into equal amount of blocks, in this case, we\n        know the key is \"YELLOW SUBMARINE\", which is 16 bytes.\n\n        Then, all you have to do is take two substrings of a string and compare,\n        if they have the same string, we found it!\n    */\n    for(int i=0; i&lt;blocks; i++)\n    {\n        //Take a substring of x number of bytes\n        string strA = str.substr(i*keyLength, keyLength);\n\n        for(int j=i+1; j&lt;blocks; j++)\n        {\n            //Take another substring of x number of bytes\n            string strB = str.substr(j*keyLength, keyLength);\n            if(strA == strB)\n            {\n                //Found\n                return true;\n            }\n        }\n    }\n    return false;\n}\n</code></pre>\n\n<p><strong>Final code:</strong></p>\n\n<pre><code>//The Cryptopals Crypto Challenges - Set 1 Challenge 8\n#include \"crypto.h\"\n\nint main()\n{\n    CryptoLib crypt;\n\n    string str;\n\n    ifstream infile;\n    infile.open(\"8.txt\");\n\n    int count = 0;\n    while(!infile.eof())\n    {\n        getline(infile, str);\n\n        //Check if this string has ECB mode\n        if(crypt.detect_ecb_mode(str, 16) == true)\n        {\n            cout &lt;&lt; \"FOUND AT LINE \" &lt;&lt; count &lt;&lt; \" =&gt; \" &lt;&lt; str &lt;&lt; endl;\n            break;\n        }\n        count++;\n    }\n}\n</code></pre>\n\n<p><strong><em>Note: This solution and the library named <mark>crypto.h</mark> was\nbuilt using the C++ programming language. The source code for this\nsolution can be found on Github.</em></strong></p>\n\n<p>Well, this challenge marks the end of Set 1 from The Cryptopals Crypto\nChallenges. However, I do intend to continue solving all these crypto\nchallenges, let's see how it goes!</p>\n\n<p>Until next time, then!</p>\n", "index": 24}, {"section": "writings", "title": "The Cryptopals Crypto Challenges: Set 1 -  AES in ECB Mode", "link": "writings/posts/the-cryptopals-crypto-challenges-set-1---aes-in-ecb-mode", "date": "December 21st, 2017", "date_alt": "21.12.2017", "year": "2017", "date_raw": "2017-12-21", "slug": "the-cryptopals-crypto-challenges-set-1---aes-in-ecb-mode", "category": "Cryptography", "categories": [{"title": "Cryptography", "link": "/category/cryptography/"}], "summary": "Decrypt a Base64 encoded file that is encrypted with an AES-128 Cipher in ECB mode.", "reading_time": "3 minutes read", "preview_image_url": "", "filename": "content/writings/23_2019_02_08_the-cryptopals-crypto-challenges-set-1---aes-in-ecb-mode.md", "status": "active", "content": "<p>This is the <a href=\"http://cryptopals.com/sets/1/challenges/7\">seventh challenge</a> of Set 1 in The Cryptopals Crypto Challenges website. Previously, I spoke about these challenges and provided walkthroughs for the previous challenges, if you haven't read them, here are the links:</p>\n\n<ul>\n<li><a href=\"/posts/the-cryptopals-crypto-challenges\">The Cryptopals Crypto Challenges</a></li>\n<li><a href=\"/posts/the-cryptopals-crypto-challenges-set-1-convert-hex-to-base64\">The Cryptopals Crypto Challenges: Set 1 - Convert Hex to Base64</a></li>\n<li><a href=\"/posts/base64-encoding-decoding-using-bitwise-manipulation-in-c\">Base64 Encoding / Decoding using Bitwise Manipulation in C++</a></li>\n<li><a href=\"/posts/the-cryptopals-crypto-challenges-set-1-fixed-xor\">The Cryptopals Crypto Challenges: Set 1 - Fixed XOR Cipher</a></li>\n<li><a href=\"/posts/the-cryptopals-crypto-challenges-set-1-single-byte-xor-cipher\">The Cryptopals Crypto Challenges: Set 1 - Single-Byte XOR Cipher</a></li>\n<li><a href=\"/posts/the-cryptopals-crypto-challenges-set-1-detect-single-character-xor\">The Cryptopals Crypto Challenges: Set 1 - Detect Single-Character XOR</a></li>\n<li><a href=\"/posts/the-cryptopals-crypto-challenges-set-1-implement-repeating-key-xor\">The Cryptopals Crypto Challenges: Set 1 - Implement Repeating-Key XOR</a></li>\n<li><a href=\"/posts/hamming-distance-algorithm-in-c\">Hamming Distance Algorithm in C++</a></li>\n<li><a href=\"/posts/the-cryptopals-crypto-challenges-set-1-break-repeating-key-xor\">The Cryptopals Crypto Challenges: Set 1 - Break Repeating-Key XOR</a></li>\n</ul>\n\n<p>For this challenge, you are given a <a href=\"http://cryptopals.com/static/challenge-data/7.txt\">file</a>, which contains a ciphertext that has been encrypted using <strong><em>AES-128 Cipher</em></strong> with <strong><em>ECB (Electronic Codebook)</em></strong> mode and then encoded using Base64. Decrypt it.</p>\n\n<p>In order to decrypt it, you are given a key:</p>\n\n<pre><code>YELLOW SUBMARINE\n</code></pre>\n\n<h2>What is AES?</h2>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Advanced_Encryption_Standard\">Advanced Encryption Standard</a> a.k.a <strong><em>Rjindael</em></strong>, which was developed by two belgian cryptographers, <a href=\"https://en.wikipedia.org/wiki/Vincent_Rijmen\">Vincent Rijmen</a> and <a href=\"https://en.wikipedia.org/wiki/Joan_Daemen\">Joan Daemen</a>. <strong><em>Rjindael</em></strong> is a family of ciphers with various block and key sizes.</p>\n\n<p><strong><em>AES-128</em></strong> is commonly used but there are also larger key sizes such as <strong><em>192</em></strong> and <strong><em>256</em></strong> bits. Similar to <strong><em>XOR cipher</em></strong>, it uses the same key to encrypt and decrypt the message. Till date, there isn't any publication that states if whether <strong><em>AES</em></strong> is broken but even if you were to break it, it will take atleast a <strong><em>billion years</em></strong> with a supercomputer, which could beyond the age of the universe.</p>\n\n<h2>What is ECB Mode?</h2>\n\n<p>What if your plaintext is longer than (in this case, 128 bits) the keysize? This is where <strong><em>ECB</em></strong> comes into the picture. <a href=\"https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation\">ECB (Electronic Codebook)</a> is a cipher mode that is used to repeat the key until it covers the entire plaintext (similar to <a href=\"/posts/the-cryptopals-crypto-challenges-set-1-implement-repeating-key-xor\">Repeating-Key XOR Cipher</a>) and then each <strong><em>block</em></strong> is independently encrypted using the <strong><em>AES</em></strong> algorithm to produce the desired ciphertext.</p>\n\n<p>This challenge is not that hard, in fact, it's completely trivial and more like an introduction of <strong><em>AES Cipher</em></strong>. There are so many ways to solve this problem but I chose to solve this problem using <strong><em>OpenSSL</em></strong> and other commandline tools such as <strong><em>xxd</em></strong> (used to print the hexdump of a file) on my UNIX terminal.</p>\n\n<p>Here's the solution:</p>\n\n<pre><code>openssl enc -aes-128-ecb -d -a -in secret.txt -K $(echo \"YELLOW SUBMARINE\" | xxd -p) -iv 1 | head\n</code></pre>\n\n<p>This is the decrypted message:</p>\n\n<pre><code>I'm back and I'm ringin' the bell\nA rockin' on the mike while the fly girls yell\nIn ecstasy in the back of me\nWell that's my DJ Deshay cuttin' all them Z's\nHittin' hard and the girlies goin' crazy\nVanilla's on the mike, man I'm not lazy.\n\nI'm lettin' my drug kick in\nIt controls my mouth and I begin\nTo just let it flow, let my concepts go\n</code></pre>\n\n<p>Initially, I was planning to write an implementation of <strong><em>AES</em></strong> for fun, but then I decided to make it a side project that I can work on as there are a lot of things about <strong><em>AES</em></strong> that I'd like to talk about in the future.</p>\n\n<p>Stay tuned for the next challenge!</p>\n", "index": 23}, {"section": "writings", "title": "Hamming Distance Algorithm in C++", "link": "writings/posts/hamming-distance-algorithm-in-c", "date": "December 18th, 2017", "date_alt": "18.12.2017", "year": "2017", "date_raw": "2017-12-18", "slug": "hamming-distance-algorithm-in-c", "category": "Algorithms + Programming", "categories": [{"title": "Algorithms", "link": "/category/algorithms/"}, {"title": "Programming", "link": "/category/programming/"}], "summary": "An article about the Hamming Distance algorithm that will be used in the next challenge.", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/writings/21_2019_02_08_hamming-distance-algorithm-in-c.md", "status": "active", "content": "<p>This is a short article about the <strong><em>Hamming Distance</em></strong> algorithm, which will be used in The Cryptopals Crypto Challenges: Set 1 - Break Repeating-Key XOR challenge.</p>\n\n<p>In <a href=\"http://cryptopals.com/sets/1/challenges/6\">Challenge 6</a>, the first step states that you have to write a function to compute the <strong><em>edit distance/Hamming distance</em></strong> between two strings:</p>\n\n<pre><code>this is a test\n</code></pre>\n\n<p>And</p>\n\n<pre><code>wokka wokka!!!\n</code></pre>\n\n<p>When this function is executed, the expected result must be <strong><em>37</em></strong>. If you we're able to make this function work, you can proceed with the next steps in the challenge.</p>\n\n<h2>What is Hamming Distance?</h2>\n\n<p>Applied in domains like Cryptography, Information theory and Coding theory, Hamming distance is just the number of differing bits between two strings of equal length. Named after the American Mathematician, <a href=\"https://en.wikipedia.org/wiki/Richard_Hamming\">Richard Hamming</a>, this algorithm mainly used for Error Detection and Error Correction (and yes, this also makes use of <a href=\"/posts/base64-encoding-decoding-using-bitwise-manipulation-in-c\">Bitwise Operators</a>).</p>\n\n<p>Using the example above, let's see how this works, in theory:</p>\n\n<pre><code>ASCII Format: this is a test\nBinary Format: 011101[0][0] 01101[0][0][0] 011010[0]1 011[1][0]011 0[0]10000[0] 0[1]10[1]00[1] 01110[0]11 0[0]10[0][0][0][0] 0110[0]0[0]1 0[0]10[0]0[0][0] 011[1]0[1]0[0] 0[1]100[1]01 0[1]1[1]00[1]1 0[1]1[1]0[1]0[0]\n\nASCII Format: wokka wokka!!!\nBinary Format: 011101[1][1] 01101[1][1][1] 011010[1]1 011[0][1]011 0[1]10000[1] 0[0]10[0]00[0] 01110[1]11 0[1]10[1][1][1][1] 0110[1]0[1]1 0[1]10[1]0[1][1] 011[0]0[0]0[1] 0[0]100[0]01 0[0]1[0]00[0]1 0[0]1[0]0[0]0[1]\n</code></pre>\n\n<p>As per the given example, when you count the number of differing bits (the bits marked in brackets) between the two strings, the result is <strong><em>37</em></strong>.</p>\n\n<p>With help of <strong><em>Google</em></strong> and <strong><em>Wikipedia</em></strong>, I was able to build an implementation of this algorithm using the C++ programming language:</p>\n\n<pre><code>//Hamming Distance\nint CryptoLib::hamming_distance(string str1, string str2)\n{\n    int count=0;\n    for(int i=0; i&lt;str1.size(); i++)\n    {\n        int partial = (str1[i] &amp; 0xFF) ^ (str2[i] &amp; 0xFF);\n        while(partial)\n        {\n            count += partial &amp; 1;\n            partial = partial &gt;&gt;1;\n        }\n    }\n    return count;\n}\n</code></pre>\n\n<p><strong><em>Note: This solution and the library named <code>crypto.h</code> was built using the C++ programming language. The source code for this solution can be found on Github.</em></strong></p>\n\n<p>Hope you found this article useful!</p>\n\n<p>Adios Amigo!</p>\n", "index": 21}, {"section": "writings", "title": "The Cryptopals Crypto Challenges: Set 1 - Break Repeating-Key XOR", "link": "writings/posts/the-cryptopals-crypto-challenges-set-1--break-repeatingkey-xor", "date": "December 18th, 2017", "date_alt": "18.12.2017", "year": "2017", "date_raw": "2017-12-18", "slug": "the-cryptopals-crypto-challenges-set-1--break-repeatingkey-xor", "category": "Cryptography", "categories": [{"title": "Cryptography", "link": "/category/cryptography/"}], "summary": "Write a method that decodes a message which is encrypted using the Repeating-Key XOR cipher.", "reading_time": "4 minutes read", "preview_image_url": "", "filename": "content/writings/22_2019_02_08_the-cryptopals-crypto-challenges-set-1--break-repeatingkey-xor.md", "status": "active", "content": "<p>This is the <a href=\"http://cryptopals.com/sets/1/challenges/6\">sixth challenge</a> of Set 1 in The Cryptopals Crypto Challenges website. Previously, I spoke about these challenges and provided walkthroughs for the previous challenges, if you haven't read them, here are the links:</p>\n\n<ul>\n<li><a href=\"/posts/the-cryptopals-crypto-challenges\">The Cryptopals Crypto Challenges</a></li>\n<li><a href=\"/posts/the-cryptopals-crypto-challenges-set-1--convert-hex-to-base64\">The Cryptopals Crypto Challenges: Set 1 - Convert Hex to Base64</a></li>\n<li><a href=\"/posts/base64-encodingdecoding-using-bitwise-manipulation-in-c\">Base64 Encoding / Decoding using Bitwise Manipulation in C++</a></li>\n<li><a href=\"/posts/the-cryptopals-crypto-challenges-set-1--fixed-xor\">The Cryptopals Crypto Challenges: Set 1 - Fixed XOR Cipher</a></li>\n<li><a href=\"/posts/the-cryptopals-crypto-challenges-set-1--singlebyte-xor-cipher\">The Cryptopals Crypto Challenges: Set 1 - Single-Byte XOR Cipher</a></li>\n<li><a href=\"/posts/the-cryptopals-crypto-challenges-set-1--detect-singlecharacter-xor\">The Cryptopals Crypto Challenges: Set 1 - Detect Single-Character XOR</a></li>\n<li><a href=\"/posts/the-cryptopals-crypto-challenges-set-1--implement-repeatingkey-xor\">The Cryptopals Crypto Challenges: Set 1 - Implement Repeating-Key XOR</a></li>\n<li><a href=\"/posts/hamming-distance-algorithm-in-c\">Hamming Distance Algorithm in C++</a></li>\n</ul>\n\n<p>For this challenge, you are given a <a href=\"http://cryptopals.com/static/challenge-data/6.txt\">file</a>, which contains a ciphertext that has been encrypted using <a href=\"/posts/the-cryptopals-crypto-challenges-set-1--implement-repeatingkey-xor\">Repeating-Key XOR</a> and then encoded using Base64. Decrypt it.</p>\n\n<p>According to the problem description on the website:</p>\n\n<blockquote>\n  <p>It is officially on, now.</p>\n  \n  <p>This challenge isn't conceptually hard, but it involves actual\n  error-prone coding. The other challenges in this set are there to\n  bring you up to speed. This one is there to qualify you. If you can do\n  this one, you're probably just fine up to Set 6.</p>\n</blockquote>\n\n<p>Well, conceptually, this may not be the hardest but practically, it is the first hardest challenge in this set and it really did take me a while to understand how to decrypt the ciphertext through <strong><em>trial-and-error</em></strong> despite the instructions given on the website. In this challenge, it's more like connecting all the puzzles and looking at the big picture, in this case, all of the previous code that I had written, is to break the Repeating-Key XOR cipher.</p>\n\n<h2>How to break it?</h2>\n\n<p>The challenge had given some steps to follow. Here's how:</p>\n\n<ol>\n<li>Let <strong><em>KEYSIZE</em></strong> be the guessed length of the key; try values from 2 to (say) 40</li>\n<li>Write a function to compute the edit distance/Hamming distance between two strings. To know more about it, <a href=\"/posts/hamming-distance-algorithm-in-c\">click here</a> </li>\n<li>For each <strong><em>KEYSIZE</em></strong>, take the first <strong><em>KEYSIZE</em></strong> worth of bytes, and the second <strong><em>KEYSIZE</em></strong> worth of bytes, and find the edit distance between them. Normalize this result by dividing by <strong><em>KEYSIZE</em></strong></li>\n<li>The <strong><em>KEYSIZE</em></strong> with the smallest normalized edit distance is probably the key. You could proceed perhaps with the smallest 2-3 <strong><em>KEYSIZE</em></strong> values. Or take 4 <strong><em>KEYSIZE</em></strong> blocks instead of 2 and average the distances</li>\n<li>Now that you probably know the <strong><em>KEYSIZE</em></strong>: break the ciphertext into blocks of <strong><em>KEYSIZE</em></strong> length</li>\n<li>Now transpose the blocks: make a block that is the first byte of every block, and a block that is the second byte of every block, and so on</li>\n<li>Solve each block as if it was single-character XOR. You already have code to do this</li>\n<li>For each block, the single-byte XOR key that produces the best looking histogram is the repeating-key XOR key byte for that block. Put them together and you have the key</li>\n</ol>\n\n<p>Let's dive in to the code (I hope the comments, help you out!):</p>\n\n<p><strong>Implementation of the method(s):</strong></p>\n\n<pre><code>//Single Byte XOR V2 - a better version\nstring CryptoLib::singleByteXOR_V2(string str, char key)\n{\n    //Don't forget to add a NULL character to the string, it broke when I didn't add it previously.\n    string newStr(str.size(),''); \n\n    for(int i=0; i&amp;lt;str.size(); ++i){\n        newStr[i] = str[i] ^ key;\n    }\n    return newStr;\n}\n\n//Return the Single Byte XOR key via Bruteforce\nchar CryptoLib::singleByteXOR_Bruteforce_key(string cipherBlock)\n{\n    char key = 0;\n    int maxCount=0;\n    string decodedMessage;\n\n    //Brute force all 256 possibilities\n    for(int i=0; i&lt;=256; i++)\n    {\n        char ch = (char) i;\n\n        //Perform Single Byte XOR -- modified version\n        string attempt = singleByteXOR_V2(cipherBlock, ch);\n\n        // cout &lt;&lt; \"Message: \" &lt;&lt; attempt &lt;&lt; endl;\n\n        int count = 0;\n        /*\n            Look for characters that are alphabetic and the space character,\n            if it finds, increment the counter\n        */\n        for(int j=0; j&amp;lt;attempt.size(); j++)\n        {\n            if((attempt[j] &gt;= 65 &amp;&amp; attempt[j] &lt;= 122) || attempt[j] == ' ')\n            {\n                count++;\n            }\n        }\n\n        //The one with the highest count, has the predicted key\n        if(count &gt; maxCount)\n        {\n            maxCount = count;\n            key = ch;\n            // decrypted = attempt;\n        }\n    }\n\n    // cout &lt;&lt; \"KEY: \" &lt;&lt; key &lt;&lt; endl;\n    // cout &lt;&lt; \"MESSAGE: \" &lt;&lt; decrypted &lt;&lt; endl;\n\n    return key;\n}\n\n//Guess Key length of the cipher\nint CryptoLib::guess_key_length(string cipherText)\n{\n    int KEYSIZE = -1;\n    double leastNormalized = INT_MAX;\n\n    //Guess a keysize from 2 to 40\n    for(int i=2; i&lt;=40; i++)\n    {\n        double normalize = 0.0f;\n\n        //Number of bytes per key size\n        int bytes = cipherText.size()/i;\n\n        for(int j=0; j&amp;lt;bytes; j++)\n        {\n            string blockA = cipherText.substr((j*i), i);\n            string blockB = cipherText.substr(((j+1)*i), i);\n\n            //Calculate Hamming Distance between 2 strings\n            int edit_distance = hamming_distance(blockA, blockB);\n\n            normalize += ((double)edit_distance)/((double)blockA.size());\n        }\n\n        //Now, take an average \n        normalize /= bytes;\n\n        //The key size that has the least edit distance is the key size required\n        if(normalize &gt; 0 &amp;&amp; normalize &lt; leastNormalized)\n        {\n            leastNormalized = normalize;\n            KEYSIZE = i;\n        }\n    }\n\n    //Return the key size\n    return KEYSIZE;\n}\n</code></pre>\n\n<p><strong>Final code:</strong></p>\n\n<pre><code>//The Cryptopals Crypto Challenges - Set 1 Challenge 6\n#include \"crypto.h\"\n\nint main()\n{\n    CryptoLib crypt;\n    string message;\n    string binary;\n    string key;\n\n    //if this returns 37, then the function is working correct!\n    // cout &lt;&lt; crypt.hamming_distance(\"this is a test\", \"wokka wokka!!!\") &lt;&lt; endl;\n\n    //Read the file content\n    ifstream infile;\n\n    //Converted the B64 text to Hexadecimals through an online converter\n    //as it wasn't accurate with b64 decoder that I'd built\n    infile.open(\"message.txt\");\n    getline(infile, message, '');\n    infile.close();\n\n    //Convert the hexadecimal string to ASCII\n    message = crypt.con_hex_2_ascii(message);\n\n    //Guess the length of the key\n    int keyLength = crypt.guess_key_length(message);\n\n    //Transpose the message based on keysize length\n    int blocks = message.size() / keyLength;\n\n    for(int i=0; i&amp;lt;keyLength; ++i)\n    {\n        string block;\n        char indexKey='';\n\n        /*\n            Transpose the message into blocks \n            based on keysize and concatenate it \n            into one string\n        */\n        for(int j=0; j&amp;lt;blocks; j++){\n            block += message.substr((j*keyLength) + i,1);\n        }\n\n        //Concatenate the selected characters, which will become the predicted key\n        key += crypt.singleByteXOR_Bruteforce_key(block);\n    }\n\n    cout &lt;&lt; \"KEY: \" &lt;&lt; key &lt;&lt; endl;\n    cout &lt;&lt; \"DECODED: \" &lt;&lt; crypt.con_hex_2_ascii(crypt.repeatingKeyXOR(message, key)) &lt;&lt; endl;\n\n    return 0;   \n}\n</code></pre>\n\n<p><strong><em>Note: This solution and the library named <code>crypto.h</code> was built using the C++ programming language. The source code for this solution can be found on Github.</em></strong></p>\n\n<p>When the following code is executed, the most probable <strong><em>KEYSIZE</em></strong> is <strong><em>29</em></strong> and after transposing the message and decrypting the blocks, you get a key of that length:</p>\n\n<pre><code>Terminator X: Bring the noise\n</code></pre>\n\n<p>Lastly, use the <strong><em>Repeating-Key XOR</em></strong> method to decrypt the message with the cracked key (which looks like lyrics to some music track!):</p>\n\n<pre><code>A rockin' on the mike while the fly girls yell\nWell that's my DJ Deshay cuttin' all them Z's\nVanilla's on the mike, man I'm not lazy. ?I'm lettin' my drug kick in\nTo just let it flow, let my concepts go\nAnd if you don't give a damn, then\nSo get off 'cause I control the stage\nI'm in my own phase\nAnd I can dance better than any kid n' play ?\nStage 2 -- Yea the one ya' wanna listen to\nSo I can funk it up and make it sound good\nFor good luck, I like my rhymes atrocious\nI'm an effect and that you can bet\nThere's no denyin', You can try to hang \nOver and over, practice makes perfect\nSoon -- Oh my God, homebody, you probably eat\nIntoxicating so you stagger like a wino\nVanilla Ice is sellin' and you people are buyin'\nMovin' and groovin' trying to sing along\nNow you're amazed by the VIP posse. ?\nSteppin' so hard like a German Nazi\nThere's no trippin' on mine, I'm just gettin' down\nYou trapped me once and I thought that\nSo step down and lend me your ear \nYour body's gettin' hot, so, so I can smell it\n'Cause the lyrics belong to ICE, You can call me Dad \nLet the witch doctor, Ice, do the dance to cure \nYou wanna battle me -- Anytime, anywhere ?\nYou thought that I was weak, Boy, you're dead wrong \nplay that funky music Go white boy, go white boy, go\nPlay that funky music white boy you say it, say it \nPlay that funky music, white boy Come on, Come on, Come on\n</code></pre>\n\n<p>As mentioned above, this was really challenging and fun, at the same time. Although, Most people (academically) know <strong><em>\"how-to\"</em></strong> break a Repeating-Key XOR (Vignere Cipher) but being <strong><em>able</em></strong> to break it, is another thing.</p>\n\n<p>Hope you liked reading this article!</p>\n\n<p>But, hang in there, surprisingly, this code will be useful later on for many problems.</p>\n", "index": 22}, {"section": "writings", "title": "The Cryptopals Crypto Challenges: Set 1 - Implement Repeating-Key XOR", "link": "writings/posts/the-cryptopals-crypto-challenges-set-1--implement-repeatingkey-xor", "date": "December 15th, 2017", "date_alt": "15.12.2017", "year": "2017", "date_raw": "2017-12-15", "slug": "the-cryptopals-crypto-challenges-set-1--implement-repeatingkey-xor", "category": "Cryptography", "categories": [{"title": "Cryptography", "link": "/category/cryptography/"}], "summary": "Write a method that encrypts messages using the Repeating-Key XOR method with a given key.", "reading_time": "2 minutes read", "preview_image_url": "", "filename": "content/writings/20_2019_02_08_the-cryptopals-crypto-challenges-set-1--implement-repeatingkey-xor.md", "status": "active", "content": "<p>This is the <a href=\"http://cryptopals.com/sets/1/challenges/5\">fifth challenge</a> of Set 1 in The Cryptopals Crypto Challenges website. Previously, I spoke about these challenges and provided walkthroughs for the previous challenges, if you haven't read them, here are the links:</p>\n\n<ul>\n<li><a href=\"/posts/the-cryptopals-crypto-challenges\">The Cryptopals Crypto Challenges</a></li>\n<li><a href=\"/posts/the-cryptopals-crypto-challenges-set-1--convert-hex-to-base64\">The Cryptopals Crypto Challenges: Set 1 - Convert Hex to Base64</a></li>\n<li><a href=\"/posts/base64-encoding--decoding-using-bitwise-manipulation-in-c\">Base64 Encoding / Decoding using Bitwise Manipulation in C++</a></li>\n<li><a href=\"/posts/the-cryptopals-crypto-challenges-set-1--fixed-xor\">The Cryptopals Crypto Challenges: Set 1 - Fixed XOR Cipher</a></li>\n<li><a href=\"/posts/the-cryptopals-crypto-challenges-set-1--singlebyte-xor-cipher\">The Cryptopals Crypto Challenges: Set 1 - Single-Byte XOR Cipher</a></li>\n<li><a href=\"/posts/the-cryptopals-crypto-challenges-set-1--detect-singlecharacter-xor\">The Cryptopals Crypto Challenges: Set 1 - Detect Single-Character XOR</a></li>\n</ul>\n\n<p>For this challenge, you have to implement a <strong><em>Repeating-Key XOR</em></strong> method to encrypt the following message:</p>\n\n<pre><code>Burning 'em, if you ain't quick and nimble\nI go crazy when I hear a cymbal\n</code></pre>\n\n<p>With a given key:</p>\n\n<pre><code>ICE\n</code></pre>\n\n<p>The final message should look like this:</p>\n\n<pre><code>0b3637272a2b2e63622c2e69692a23693a2a3c6324202d623d63343c2a26226324272765272\na282b2f20430a652e2c652a3124333a653e2b2027630c692b20283165286326302e27282f\n</code></pre>\n\n<p>If you've already understood the concept of <a href=\"/posts/base64-encoding-decoding-using-bitwise-manipulation-in-c\">XOR</a> and had no issues implementing both <a href=\"/posts/the-cryptopals-crypto-challenges-set-1--fixed-xor\">Fixed XOR Cipher</a> and <a href=\"/posts/the-cryptopals-crypto-challenges-set-1--singlebyte-xor-cipher\">Single-Byte XOR Cipher</a>, then this should be a piece of cake for you when it comes to implementing <strong><em>Repeating-Key XOR Cipher</em></strong>.</p>\n\n<h2>How does this work?</h2>\n\n<p>With <strong><em>Repeating-Key XOR</em></strong>, you'll sequentially apply each byte of the key (which is \"ICE\", in this case); the first byte of plaintext will be XOR'd against <strong><em>\"I\"</em></strong>, the next <strong><em>\"C\"</em></strong>, the next <strong><em>\"E\"</em></strong>, then <strong><em>\"I\"</em></strong> again for the 4th byte, and so on.</p>\n\n<p>You can use this method to encrypt anything you want. Emails, Passwords, Secret messages and so on. You'll definitely get a feel for it because things will get interesting after this challenge.</p>\n\n<p>Let's dive in to the code:</p>\n\n<p><strong>Implementation of the method(s):</strong></p>\n\n<pre><code>//Convert ASCII to HEX\nstring CryptoLib::con_ascii_2_hex(string str)\n{\n    stringstream ss;\n    for(int i=0; i&lt;str.size(); i++)\n    {\n        ss &lt;&lt; std::hex &lt;&lt; (int)str[i];\n    }\n    return ss.str();\n}\n\n//Repeating Key XOR implementation\nstring CryptoLib::repeatingKeyXOR(string str, string key)\n{\n    string newStr = \"\";\n    int count = 0;\n\n    /*\n        1. Perform XOR against each character of the message \n        against each character of the key. \n        So if the key was \"ICE\" and the message is \"abcdefg\",\n        it would be \"a\" against \"I\", then \"b\" against \"C\" and \"c\" against \"E\"\n        but once it reaches the key's limit, you start again from the beginning\n        of the key, which should be like: \"d\" against \"I\", \"e\" against \"C\" and so on.\n    */\n    for(int i=0; i&lt;str.size(); i++)\n    {\n        unsigned char a = key[count];\n        unsigned char b = str[i];\n        unsigned char c = b ^ a;\n\n        newStr += c;\n\n        if(count == key.size()-1)\n        {\n            count = 0;\n        }\n        else\n        {\n            count++;\n        }\n    }\n\n    //2. Convert the ASCII message to Hexadecimal\n    string final = \"0\";\n    final += con_ascii_2_hex(newStr);\n    return final;\n}\n</code></pre>\n\n<p><strong>Final code:</strong></p>\n\n<pre><code>//Cryptopals Set 1 Challenge 5\n#include \"crypto.h\"\n\nint main()\n{\n    CryptoLib crypt;\n\n    //Test cases provided\n    string str = \"Burning 'em, if you ain't quick and nimble I go crazy when I hear a cymbal\";\n    string key = \"ICE\";\n\n    cout &lt;&lt; \"ENCODED: \" &lt;&lt; crypt.repeatingKeyXOR(str, key) &lt;&lt; endl;\n    return 0;\n}\n</code></pre>\n\n<p><strong><em>Note: This solution and the library named <mark>crypto.h</mark> was built using the C++ programming language. The source code for this solution can be found on Github.</em></strong></p>\n\n<p>Stay tuned for the next challenge!</p>\n", "index": 20}, {"section": "writings", "title": "The Cryptopals Crypto Challenges: Set 1 - Single-Byte XOR Cipher", "link": "writings/posts/the-cryptopals-crypto-challenges-set-1--singlebyte-xor-cipher", "date": "December 13th, 2017", "date_alt": "13.12.2017", "year": "2017", "date_raw": "2017-12-13", "slug": "the-cryptopals-crypto-challenges-set-1--singlebyte-xor-cipher", "category": "Cryptography", "categories": [{"title": "Cryptography", "link": "/category/cryptography/"}], "summary": "Write a method that decrypts a hexadecimal message that has been XOR'd against a single character.", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/writings/18_2019_02_08_the-cryptopals-crypto-challenges-set-1--singlebyte-xor-cipher.md", "status": "active", "content": "<p>This is the <a href=\"http://cryptopals.com/sets/1/challenges/3\">third challenge</a> of Set 1 in The Cryptopals Crypto Challenges website. Previously, I spoke about these challenges and provided walkthroughs for the previous challenges, if you haven't read them, here are the links:</p>\n\n<ul>\n<li><a href=\"/posts/the-cryptopals-crypto-challenges\">The Cryptopals Crypto Challenges</a></li>\n<li><a href=\"/posts/the-cryptopals-crypto-challenges-set-1--convert-hex-to-base64\">The Cryptopals Crypto Challenges: Set 1 - Convert Hex to Base64</a></li>\n<li><a href=\"/posts/base64-encoding--decoding-using-bitwise-manipulation-in-c\">Base64 Encoding / Decoding using Bitwise Manipulation in C++</a></li>\n<li><a href=\"/posts/the-cryptopals-crypto-challenges-set-1--fixed-xor\">The Cryptopals Crypto Challenges: Set 1 - Fixed XOR Cipher</a></li>\n</ul>\n\n<p>For this challenge, you have to write a method that decodes a\nHexadecimal string:</p>\n\n<pre><code>1b37373331363f78151b7f2b783431333d78397828372d363c78373e783a393b3736\n</code></pre>\n\n<p>That has been <strong><em>XOR'd</em></strong> against a <strong><em>single character</em></strong>. You must find the key and decrypt the message.</p>\n\n<p>If you have read the <a href=\"/posts/the-cryptopals-crypto-challenges-set-1--fixed-xor\">previous article</a>, it was clearly setup for this problem. There are so many ways to solve this problem but the most efficient way to solve it is by using a <strong><em>Frequency table</em></strong>.</p>\n\n<p>Assuming the message is supposed to be in English, when decrypted, we need to only generate a frequency table using the given Hexadecimal string that shows the frequencies of each <strong><em>alphabet</em></strong>. The character that has the highest frequency is the key required, which is then used to perform an <strong><em>XOR (\\^)</em></strong> operation against each character, to decrypt the encrypted message.</p>\n\n<p>Let's have a look at the code:</p>\n\n<pre><code>//Return Character frequency of a string\nmap&lt;char, int&gt; CryptoLib::frequency_table(string str)\n{\n    map&lt;char, int&gt; m;\n    map&lt;char, int&gt;::iterator it;\n\n    for(int i=0; i&lt;str.size(); i++)\n    {\n        char ch = str[i];\n        it = m.find(ch);\n\n        if(it == m.end())\n        {\n            m.insert(make_pair(ch,1));\n        }\n        else\n        {\n            it-&gt;second++;\n        }\n    }\n\n    return m;\n}\n\n//Return character with the highest frequency\nchar CryptoLib::ret_high_freq_char(map&lt;char, int&gt; m)\n{\n    int max_count = 0;\n    char max_char;\n\n    for(auto p: m)\n    {\n        if(isalpha(p.first))\n        {\n            if(p.second &gt; max_count)\n            {\n                max_char = p.first;\n                max_count = p.second;\n            }\n        }\n    }\n    return max_char;\n}\n\n//Single Byte XOR\nstring CryptoLib::singleByteXOR(string str)\n{\n    string newStr = \"\";\n\n    //1. Convert Hexadecimal to Binary\n    str = add_spaces(con_hex_2_bin(str), 8);\n\n    //2. Convert Binary to Decimals\n    vector&lt;int&gt; v = con_bin_2_dec(str, 7.0);\n\n\n    // What's happening here?\n    // 4. Generate a frequency table using the characters from the ASCII string\n    // 5. Look for characters that are English and also has the highest frequency\n    // 6. The character that has the highest frequency is the KEY!\n\n    //The key\n    unsigned char a = toupper(ret_high_freq_char(frequency_table(con_dec_2_ascii(v))));\n\n    //7. Perform XOR with the KEY against each character\n    for(int i=0; i&lt;v.size(); i++)\n    {\n        unsigned char b = v[i];\n        unsigned char c = b ^ a;\n        newStr += c;\n    }\n\n    //8. Decoded message\n    return newStr;\n}\n</code></pre>\n\n<p><strong>Final code:</strong></p>\n\n<pre><code>//CryptoPals Set 1 Challenge 3\n#include \"crypto.h\"\n\nint main()\n{\n    CryptoLib crypt;\n\n    //Test case provided\n    string str = \"1b37373331363f78151b7f2b783431333d78397828372d363c78373e783a393b3736\";\n    cout &lt;&lt; \"DECODED: \" &lt;&lt; crypt.singleByteXOR(str) &lt;&lt; endl;\n    return 0;\n}   \n</code></pre>\n\n<p><strong>Decrypted message:</strong></p>\n\n<pre><code>Key with the highest frequency: 'X'\nMessage: Cooking MC's like a pound of bacon\n</code></pre>\n\n<p><strong><em>Note: This solution and the library named <code>crypto.h</code> was built using the C++ programming language. The source code for this solution can be found on Github.</em></strong></p>\n\n<p>Stay tuned for the next challenge!</p>\n", "index": 18}, {"section": "writings", "title": "The Cryptopals Crypto Challenges: Set 1 - Detect Single-Character XOR", "link": "writings/posts/the-cryptopals-crypto-challenges-set-1--detect-singlecharacter-xor", "date": "December 13th, 2017", "date_alt": "13.12.2017", "year": "2017", "date_raw": "2017-12-13", "slug": "the-cryptopals-crypto-challenges-set-1--detect-singlecharacter-xor", "category": "Cryptography", "categories": [{"title": "Cryptography", "link": "/category/cryptography/"}], "summary": "Write a method that derives which string that has a length of 60 characters has been encrypted using Single-Byte XOR cipher.", "reading_time": "2 minutes read", "preview_image_url": "", "filename": "content/writings/19_2019_02_08_the-cryptopals-crypto-challenges-set-1--detect-singlecharacter-xor.md", "status": "active", "content": "<p>This is the <a href=\"http://cryptopals.com/sets/1/challenges/4\">fourth challenge</a> of Set 1 in The Cryptopals Crypto Challenges website. Previously, I spoke about these challenges and provided walkthroughs for the previous challenges, if you haven't read them, here are the links:</p>\n\n<ul>\n<li><a href=\"/posts/the-cryptopals-crypto-challenges\">The Cryptopals Crypto Challenges</a></li>\n<li><a href=\"/posts/the-cryptopals-crypto-challenges-set-1--convert-hex-to-base64\">The Cryptopals Crypto Challenges: Set 1 - Convert Hex to Base64</a></li>\n<li><a href=\"/posts/base64-encoding-decoding-using-bitwise-manipulation-in-c\">Base64 Encoding / Decoding using Bitwise Manipulation in C++</a></li>\n<li><a href=\"/posts/the-cryptopals-crypto-challenges-set-1--fixed-xor\">The Cryptopals Crypto Challenges: Set 1 - Fixed XOR Cipher</a></li>\n<li><a href=\"/posts/the-cryptopals-crypto-challenges-set-1--singlebyte-xor-cipher\">The Cryptopals Crypto Challenges: Set 1 - Single-Byte XOR Cipher</a></li>\n</ul>\n\n<p>For this challenge, given a <a href=\"http://cryptopals.com/static/challenge-data/4.txt\">list</a> of encrypted strings, you must derive which string (that has a length of 60 characters) is encrypted using <strong><em>Single-Byte XOR Cipher</em></strong>.</p>\n\n<p>Similar to the <a href=\"/posts/the-cryptopals-crypto-challenges-set-1--singlebyte-xor-cipher\">previous post</a>, this is more about breaking the <strong><em>Single-Byte XOR Cipher</em></strong> technique. Remember, you can solve this challenge only if you were able to solve the previous challenge because you'll have to tweak some of the previous code in this challenge.</p>\n\n<h2>How to detect Single-Byte XOR?</h2>\n\n<p>In the previous challenge, we're able to determine the key as we had one string but how do we do that with 300+ strings in a file except now that we also have to determine if the string is encrypted using <strong><em>Single-Byte XOR Cipher</em></strong> or not?</p>\n\n<p>Here's comes the interesting part:</p>\n\n<ol>\n<li>Select the string that has the most english letters from the file</li>\n<li>Perform a Brute-force XOR on the string with the most english letters in which each character is XOR'd against every character from the ASCII table (256 characters)</li>\n<li>Pick the most english string after brute-forcing with each character</li>\n<li>Display the final result</li>\n</ol>\n\n<p>Let's have a look at the code:</p>\n\n<p><strong>Implementation of the method(s):</strong></p>\n\n<pre><code>//Return Character frequency of a string\nmap&lt;char, int&gt; CryptoLib::frequency_table(string str)\n{\n    map&lt;char, int&gt; m;\n    map&lt;char, int&gt;::iterator it;\n\n    for(int i=0; i&lt;str.size(); i++)\n    {\n        char ch = str[i];\n        it = m.find(ch);\n\n        if(it == m.end())\n        {\n            m.insert(make_pair(ch,1));\n        }\n        else\n        {\n            it-&gt;second++;\n        }\n    }\n\n    return m;\n}\n\n//Return integer with the highest frequency of alphabets\nint CryptoLib::high_frequency_count(map&lt;char,int&gt;m)\n{\n    int count = 0;\n    for(auto p: m)\n    {\n        if(isalpha(p.first))\n        {\n            // cout &lt;&lt; p.first &lt;&lt; \":\" &lt;&lt; p.second &lt;&lt; \" \";\n            count += p.second;\n        }\n    }\n    return count;\n}\n\n//Detect string with Single Byte XOR\nstring CryptoLib::detectSingleByteXOR(vector&lt;int&gt; maxV)\n{\n    string final = \"\";\n    int maxCount = 0;\n\n    /*\n        2. Perform a Brute-force XOR on the string that has\n        the most english letters in which each character is XOR'd against\n        every character from the ASCII table (256 characters)\n    */\n    for(int i=0; i&lt;256; i++)\n    {\n        string temp = \"\";\n        unsigned char a = i;\n        for(int j=0; j&lt;maxV.size(); j++)\n        {\n            unsigned char b = maxV[j];\n            unsigned char c = b ^ a;\n            temp += tolower(c);\n        }\n\n        //3. Select the string that has the most english letters. again.\n        int count = high_frequency_count(frequency_table(temp));\n        if(count &gt; maxCount)\n        {\n            maxCount = count;\n            final = temp;\n        }\n    }\n\n    //4. Display the most \"english\" text as the final result\n    return final;\n}\n</code></pre>\n\n<p><strong>Final code:</strong></p>\n\n<pre><code>//Cryptopals Set 1 Challenge 4\n#include \"crypto.h\"\n\nint main()\n{\n    CryptoLib crypt;\n\n    ifstream infile;\n    string str;\n    int maxCount = 0;\n    string maxString = \"\";\n    vector&lt;int&gt; maxV;\n\n    infile.open(\"enctext.txt\");\n\n    //if the file is not there\n    if(!infile)\n    {\n        cout &lt;&lt; \"Unable to open the file\";\n        exit(1);\n    }\n\n    while(infile &gt;&gt; str)\n    {\n        //Only look for strings with 60 char length\n        if(str.size() == 60)\n        {\n            str = crypt.add_spaces(crypt.con_hex_2_bin(str), 8);\n            vector&lt;int&gt; v1 = crypt.con_bin_2_dec(str, 7.0);\n            string newStr = crypt.con_dec_2_ascii(v1);\n\n            //1. Select the string that has the most english letters\n            int count = crypt.high_frequency_count(crypt.frequency_table(newStr));\n            if(count &gt; maxCount)\n            {\n                maxCount = count;\n                maxString = newStr;\n                maxV = v1;\n            } \n        }\n    }\n\n    //2. Pass the list of decimals to the function (for now)\n    cout &lt;&lt; crypt.detectSingleByteXOR(maxV) &lt;&lt; endl;\n    return 0;\n}\n</code></pre>\n\n<p><strong>Decrypted message:</strong></p>\n\n<pre><code>Message: Now that the party is jumping.\n</code></pre>\n\n<p><strong><em>Note: This solution and the library named <code>crypto.h</code> was built using the C++ programming language. The source code for this solution can be found on Github.</em></strong></p>\n\n<p>Stay tuned for the next challenge!</p>\n", "index": 19}, {"section": "writings", "title": "The Cryptopals Crypto Challenges: Set 1 - Fixed XOR", "link": "writings/posts/the-cryptopals-crypto-challenges-set-1--fixed-xor", "date": "December 12th, 2017", "date_alt": "12.12.2017", "year": "2017", "date_raw": "2017-12-12", "slug": "the-cryptopals-crypto-challenges-set-1--fixed-xor", "category": "Cryptography", "categories": [{"title": "Cryptography", "link": "/category/cryptography/"}], "summary": "Write a method that takes two strings of fixed equal length and produce their XOR combination.", "reading_time": "2 minutes read", "preview_image_url": "", "filename": "content/writings/17_2019_02_08_the-cryptopals-crypto-challenges-set-1--fixed-xor.md", "status": "active", "content": "<p>This is the <a href=\"http://cryptopals.com/sets/1/challenges/2\">second challenge</a> of Set 1 in The Cryptopals Crypto Challenges website. Previously, I spoke about these challenges and provided a walkthrough for the first challenge, if you haven't read them, here are the links:</p>\n\n<ul>\n<li><a href=\"/posts/the-cryptopals-crypto-challenges\">The Cryptopals Crypto Challenges</a></li>\n<li><a href=\"/posts/the-cryptopals-crypto-challenges-set-1--convert-hex-to-base64\">The Cryptopals Crypto Challenges: Set 1 - Convert Hex to Base64</a></li>\n<li><a href=\"/posts/base64-encoding--decoding-using-bitwise-manipulation-in-c\">Base64 Encoding / Decoding using Bitwise Manipulation in C++</a></li>\n</ul>\n\n<p>For this challenge, you must write a method that takes two strings of fixed equal length and produce their XOR combination:</p>\n\n<p>When you feed the following Hexadecimal string:</p>\n\n<pre><code>1c0111001f010100061a024b53535009181c\n</code></pre>\n\n<p>And perform an XOR operation against another Hexadecimal string:</p>\n\n<pre><code>686974207468652062756c6c277320657965\n</code></pre>\n\n<p>The method should return the following result:</p>\n\n<pre><code>746865206b696420646f6e277420706c6179\n</code></pre>\n\n<p>Like the <a href=\"/posts/the-cryptopals-crypto-challenges-set-1-convert-hex-to-base64\">first challenge</a>, this is sort of a warmup and a simple challenge to tackle. Just to give you a heads up, every challenge that you solve in this set would all make sense, in the end, as the challenges will get tougher and much more interesting.</p>\n\n<h2>How do I solve this?</h2>\n\n<p>As I mentioned above, this problem is simple and pretty straightforward. In my previous post, I talked about Bitwise Manipulations and it's operators, I will be using the <strong><em>XOR (\\^)</em></strong> operator, if you want to know more about it, <a href=\"/posts/base64-encoding--decoding-using-bitwise-manipulation-in-c\">check out my previous post</a>. Also, I will reuse some of the functions that I had used in the <strong>first challenge</strong>. So let's dive in to the code:</p>\n\n<p><strong>Methods that are being reused:</strong></p>\n\n<pre><code>//Hashmap that contain hex key and binary values\nmap&lt;char, string&gt; CryptoLib::gen_hex_table()\n{\n    map&lt;char, string&gt; map;\n\n    map['0'] = \"0000\";\n    map['1'] = \"0001\";\n    map['2'] = \"0010\";\n    map['3'] = \"0011\";\n    map['4'] = \"0100\";\n    map['5'] = \"0101\";\n    map['6'] = \"0110\";\n    map['7'] = \"0111\";\n    map['8'] = \"1000\";\n    map['9'] = \"1001\";\n    map['a'] = \"1010\";\n    map['b'] = \"1011\";\n    map['c'] = \"1100\";\n    map['d'] = \"1101\";\n    map['e'] = \"1110\";\n    map['f'] = \"1111\";\n\n    return map;\n}\n\n//Convert hex to string\nstring CryptoLib::con_hex_2_bin(string hexStr)\n{\n    map&lt;char,string&gt; m = gen_hex_table();\n\n    string newStr = \"\";\n    for(int i=0; i&lt;hexStr.size(); i++)\n    {\n        if(isdigit(hexStr[i]))\n        {\n            newStr += m.find(hexStr[i])-&gt;second;\n        }\n        else\n        {\n            newStr += m.find(hexStr[i])-&gt;second;\n        }\n        // newStr += m.find(hexStr[i])-&gt;second;\n    }\n    return newStr;\n}\n\n//Convert binary to decimal\nvector&lt;int&gt; CryptoLib::con_bin_2_dec(string str, double power)\n{\n    vector&lt;int&gt; v;\n    string newStr = \"\";\n    istringstream iss(str);\n    string x;\n\n    while(iss &gt;&gt; x)\n    {\n        double p = power;\n        double decimal = 0.0;\n\n        for(int i=0; i&lt;x.size(); i++)\n        {\n            if(x[i] == '1')\n            {\n                decimal += pow(2.0, p);\n            }\n            p--;\n        }\n        v.push_back((int)decimal);\n    }\n    return v;\n}\n\n//Add spaces between strings\nstring CryptoLib::add_spaces(string str, int spaces)\n{\n    string newStr = \"\";\n    int count = 0;\n\n    for(int i=0; i&lt;str.size(); i++)\n    {\n\n        // newStr += str[i];\n        if(count == spaces)\n        {\n            newStr += \" \";\n            i--;\n            count = 0;\n        }\n        else\n        {\n            newStr += str[i];\n            count++;\n        }\n    }\n\n    return newStr;\n}\n\n//Convert ASCII to HEX\nstring CryptoLib::con_ascii_2_hex(string str)\n{\n    stringstream ss;\n    for(int i=0; i&lt;str.size(); i++)\n    {\n        ss &lt;&lt; std::hex &lt;&lt; (int)str[i];\n    }\n    return ss.str();\n}\n</code></pre>\n\n<p><strong>Implementation of the method:</strong></p>\n\n<pre><code>//Fixed XOR implementation\nstring CryptoLib::fixedXOR(string str1, string str2)\n{\n    //Check if the length of both the strings are equal\n    if(str1.size() != str2.size())\n    {\n        return \"The strings are not of equal length.\";\n    }\n    else\n    {\n        string newStr = \"\";\n\n        //Step 1. convert hex to binary of 8 bits\n        str1 = add_spaces(con_hex_2_bin(str1), 8);\n        str2 = add_spaces(con_hex_2_bin(str2), 8);\n\n        //Step 2. convert binary to decimal\n        vector&lt;int&gt; v1 = con_bin_2_dec(str1, 7.0);\n        vector&lt;int&gt; v2 = con_bin_2_dec(str2, 7.0);\n\n        //Step 3. XOR the decimals of v1 with decimals of v2\n        for(int i=0; i&lt;v1.size(); i++)\n        {\n            //Get the char of the first string\n            unsigned char a = v1[i];\n\n            //Get the char of the second string\n            unsigned char b = v2[i];\n\n            //Perform XOR operation against each other\n            unsigned char c = a ^ b;\n\n            //Concatenate the string\n            newStr += c;\n        }\n\n        //ASCII result: the kid don't play.\n\n        //Final result - Convert the ASCII string to Hexadecimal\n        return con_ascii_2_hex(newStr); \n    }\n}\n</code></pre>\n\n<p><strong>Final code:</strong></p>\n\n<pre><code>//CryptoPals Set 1 Challenge 2\n#include \"crypto.h\"\n\nint main()\n{\n    CryptoLib crypt;\n\n    //The test cases provided\n    string str1 = \"1c0111001f010100061a024b53535009181c\";\n    string str2 = \"686974207468652062756c6c277320657965\";\n\n    cout &lt;&lt; crypt.fixedXOR(str1, str2) &lt;&lt; endl;\n    return 0;\n}\n</code></pre>\n\n<p><strong><em>Note: This solution and the library named <code>crypto.h</code> was built using the C++ programming language. The source code for this solution can be found on Github.</em></strong></p>\n\n<p>Stay tuned for the next challenge!</p>\n", "index": 17}, {"section": "writings", "title": "Base64 Encoding / Decoding using Bitwise Manipulation in C++", "link": "writings/posts/base64-encoding--decoding-using-bitwise-manipulation-in-c", "date": "December 11th, 2017", "date_alt": "11.12.2017", "year": "2017", "date_raw": "2017-12-11", "slug": "base64-encoding--decoding-using-bitwise-manipulation-in-c", "category": "Algorithms + Programming", "categories": [{"title": "Algorithms", "link": "/category/algorithms/"}, {"title": "Programming", "link": "/category/programming/"}], "summary": "An alternate solution to the previous post on how to encode/decode hexadecimals to Base64 and vice-versa using Bitwise Manipulation.", "reading_time": "5 minutes read", "preview_image_url": "", "filename": "content/writings/16_2019_02_08_base64-encoding--decoding-using-bitwise-manipulation-in-c.md", "status": "active", "content": "<p>In the <a href=\"/posts/the-cryptopals-crypto-challenges-set-1--convert-hex-to-base64\">previous post</a>, I provided the walkthrough for the first challenge of Set 1 in The Cryptopals Crypto Challenges website but then I realized that I didn't write a method that could decode the Base64 string back to it's original Hexadecimal format. So I went back to the website again and found an important rule that I should have not ignored, at the very beginning:</p>\n\n<blockquote>\n  <p>Cryptopals Rule:</p>\n  \n  <p>Always operate on raw bytes, never on encoded strings. Only use Hex\n  and Base64 for pretty-printing.</p>\n</blockquote>\n\n<p>Although, the solution I had provided in the first one works, but there's no way that I could go back to displaying the original Hexadecimal string. So I went on <strong>Wikipedia</strong> and did some research on Base64 and I figured out that I should brush up my knowledge on <a href=\"https://en.wikipedia.org/wiki/Bit_manipulation\">Bitwise Manipulation</a> as I never had a use for it until now.</p>\n\n<p>In this post, which should be pretty much straightforward (and probably longer too), I will be talking about Bitwise Manipulation and it's operators and also provide an alternate walkthrough for the first challenge of The Cryptopals Crypto Challenges.</p>\n\n<h2>What is Bitwise Manipulation?</h2>\n\n<p>Bitwise Manipulation is a low-level, algorithmic technique used to manipulate bits or data that are shorter than a word. This technique is mostly used on embedded controls, data compression, encryption algorithms and error-detection.</p>\n\n<p>As I mentioned above, most programmers don't get to use this technique a lot as most programming languages allows the programmer to work on abstractions directly instead of bits that represent those abstractions.</p>\n\n<p>A program that implements bitwise manipulation, makes use of the following operators:</p>\n\n<ul>\n<li>Bit Shifts (&lt;&lt; / &gt;&gt;)</li>\n<li>AND (&amp;)</li>\n<li>OR (|)</li>\n<li>NOT (!)</li>\n<li>XOR (\\^)</li>\n</ul>\n\n<h3>Bit Shift operations</h3>\n\n<p>Let's take a look at both the left <strong><em>&lt;&lt;</em></strong> and right <strong><em>&gt;&gt;</em></strong> shift operators. So if you use either of them, you would be shifting <strong><em>x</em></strong> number of bits to left or right in a variable.</p>\n\n<p>Let's say we have the number <strong><em>x = 4</em></strong>, and it's binary form is <strong><em>00000100</em></strong> and we wanted to shift by 4 bits to the left, we just have to call <strong><em>x &lt;&lt; 4</em></strong>, the result would be <strong><em>00100000</em></strong>, which means <strong><em>x = 64</em></strong>. Shifting to the left is the equivalent of multiplication by the power of <strong><em>n</em></strong> because <strong><em>4x2^4^ = 64</em></strong>. Similarly, shifting to the right is the equivalent of division by the power of <strong><em>n</em></strong> because <strong><em>4 / 2^4^ = 4</em></strong> and it's binary form would be <strong><em>00000100</em></strong>.</p>\n\n<h3>AND, OR and NOT operations</h3>\n\n<p>The bitwise operator <strong>AND</strong> is useful, when you want to check a bit is on or off i.e. <strong><em>0</em></strong> or <strong><em>1</em></strong>. Whereas for the bitwise operator <strong>OR</strong> is the exact opposite, if either bit is on, then the result will be <strong><em>1</em></strong>, else it will be <strong><em>0</em></strong>. Finally, the bitwise operator <strong>NOT</strong> is used for inverting the bits in a binary, for example, if you had a binary string of <strong><em>00101000</em></strong>, you'd get <strong><em>11010111</em></strong>, it is used best when you want to turn off a bit combined with the <strong>AND</strong> operator.</p>\n\n<h3>XOR operator</h3>\n\n<p>Relax, this ain't scary, this is also known as <strong>Exclusive-OR</strong>. This operator works when both bits that are compared are either <strong><em>0</em></strong> or <strong><em>1</em></strong>, then the result will be <strong><em>0</em></strong>, else it will be <strong><em>1</em></strong>. So if you perform an XOR on <strong><em>01001000</em></strong> and <strong><em>01000100</em></strong>, the result will be <strong><em>00001100</em></strong>.</p>\n\n<p>I hope that by now, you must have understood the basic concept of Bitwise Manipulation, if not, then spend some time reading about it before scrolling down to the next topic i.e. on how it's applied to encode and decode Hexadecimal strings to Base64 strings and vice-versa.</p>\n\n<h2>Base64 Encoding</h2>\n\n<p>Before you get started, please keep a couple of things in your mind:</p>\n\n<ul>\n<li>Each Hexadecimal character has 4 bits (Base 16)</li>\n<li>Each Base64 character has 6 bits (Base 32)</li>\n<li>We will be using the standard MIME-Base64 Encoding, thus we will have to use <strong><em>'+'</em></strong> and <strong><em>'/'</em></strong> characters as well</li>\n</ul>\n\n<p>Now that we have the facts, doing a simple math states that every 3 Hexadecimal characters is equal to 2 Base64 characters, since the least common multiple between 4 and 6 is 12. In order to do this, we are going to make use of our Bitwise Operators, let's have a look at the method:</p>\n\n<pre><code>//Base64 Encoder\nstring CryptoLib::b64_encode(string str)\n{\n    string newStr = \"\";\n    string ref = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n    //Number of bytes per 12 bits\n    int bytes = str.size() / 3;\n    int padding = str.size() % 3;\n\n    //Padding must be either 0 or 1\n    if(padding &gt; 1)\n    {\n        return newStr;\n    }\n\n    //Number of characters to be encoded is 3\n\n    int count = bytes * 3;\n\n    unsigned long long h = 0;\n\n    int i = 0;\n    for(i=0; i&lt;count; i+=3) //iterate every 3 chars\n    {\n        //Get every 3 chars\n        char a[2] = {str[i], 0};\n        char b[2] = {str[i+1], 0};\n        char c[2] = {str[i+2], 0};\n\n        //Now, convert each hex character (base 16) to it's equivalent decimal number\n        //and merge them into one variable\n        h = strtoull(a, nullptr, 16) &lt;&lt; 8; //shift left by 8 bits\n        h |= strtoull(b, nullptr, 16) &lt;&lt; 4; //shift left by 4 bits\n        h |= strtoull(c, nullptr, 16); //no shift required only the first 2 characters need\n\n        //HEX: 0x3F -&gt; DEC: 63 -&gt; ASCII: ?\n\n        newStr += ref[0x3F &amp; (h &gt;&gt; 6)]; //first b64 char; shift to right by 6 bits\n        newStr += ref[0x3F &amp; h]; //second b64 char\n    }\n\n    //if padding is required\n    //Follows the same pattern as the above.\n    if(padding == 1)\n    {\n        char a[2] = {str[i], 0};\n        h = strtoull(a, nullptr, 16) &lt;&lt; 8; // shift left by 8 bits\n        newStr += ref[0x3F &amp; (h &gt;&gt; 6)];\n        newStr += '='; //add this towards the end of the encoded string\n    }\n\n    return newStr;\n}\n</code></pre>\n\n<p>If you're wondering on how to convert an ASCII string, all you have to do is convert the ASCII string to a Hexadecimal string and then use this method to give you the Base64 encoded string.</p>\n\n<h2>Base64 Decoding</h2>\n\n<p>What if you wanted to get back to the original string? Well, that's what we are going to do next. Unlike the previous post, you might have noticed that I didn't use any Hashmaps for encoding the Base64 characters, I wanted to try a different approach and also thought of increasing speed and efficiency and of course, keeping it simple.</p>\n\n<p>Let's take a look at the method:</p>\n\n<pre><code>//Base64 Decoder\nstring CryptoLib::b64_decode(string str)\n{\n    string newStr = \"\";\n    string ref = \"0123456789abcdef\";\n\n    //Check if this is a valid b64 string\n    if(str.size() % 2 != 0)\n    {\n        return newStr;\n    }\n\n    //Number of bytes for hexadecimals\n    int bytes = str.size() / 2;\n    int count = bytes build.sh content convert.sh make_entry.py output ssg.py ssg.pyc templates transfer.sh venv 2;\n\n    unsigned long long h = 0;\n    for(int i=0; i&lt;count; i+=2) //iterate every 2 chars\n    {\n        for(int j=0; j&lt;2; j++)\n        {\n            h &lt;&lt;= 6; //shift 6 bits to the left\n\n            //Check if the value is in the range of A-Z\n            if(str[i+j] &gt;= 0x41 &amp;&amp; str[i+j] &lt;= 0x5a)\n            {\n                h |= str[i+j] - 0x41;\n            }\n            //Check if the value is in the range of a-z\n            else if(str[i+j] &gt;= 0x61 &amp;&amp; str[i+j] &lt;= 0x7a)\n            {\n                h |= str[i+j] - 0x47;\n            }\n            //Check if the value is in the range of 0-9\n            else if(str[i+j] &gt;= 0x30 &amp;&amp; str[i+j] &lt;= 0x39)\n            {\n                h |= str[i+j] + 0x04;\n            }\n            //Check if the value is a '+'\n            else if(str[i+j] == 0x2b)\n            {\n                h |= 0x3e;\n            }\n            //Check if the value is a '/'\n            else if(str[i+j] == 0x2f)\n            {\n                h |= 0x3f;\n            }\n            //Check if the value is a '='\n            else if(str[i+j] == 0x3d)\n            {\n                if(count - (i+j) == 1)\n                {\n                    newStr += ref[0xf &amp; (h &gt;&gt; 8)];\n                }\n            }\n        }\n        //Shift to the right by 8 bits\n        newStr += ref[0xf &amp; (h &gt;&gt; 8)];\n        //Shift to the right by 4 bits\n        newStr += ref[0xf &amp; (h &gt;&gt; 4)];\n        newStr += ref[0xf &amp; h];\n    }\n\n    return newStr;\n}\n</code></pre>\n\n<p>In the final code, I just converted an ASCII string to Base64 string, let's have a look at it:</p>\n\n<p><strong>Methods to convert ASCII string to Hexadecimal string and vice-versa:</strong></p>\n\n<pre><code>//Convert ASCII to HEX\nstring CryptoLib::con_ascii_2_hex(string str)\n{\n    stringstream ss;\n    for(int i=0; i&lt;str.size(); i++)\n    {\n        ss &lt;&lt; std::hex &lt;&lt; (int)str[i];\n    }\n    return ss.str();\n}\n\n//Convert HEX to ASCII\nstring CryptoLib::con_hex_2_ascii(string str)\n{\n    string newStr = \"\";\n    str = add_spaces(con_hex_2_bin(str), 8);\n    vector v = con_bin_2_dec(str, 7.0);\n\n    for(int i=0; i&lt;v.size(); i++)\n    {\n        newStr += (char)v[i];\n    }\n    return newStr;\n}\n</code></pre>\n\n<p><strong>Final Code:</strong></p>\n\n<pre><code>//CryptoPals Set 1 Challenge 1\n#include \"crypto.h\"\n\nint main()\n{\n    CryptoLib crypt;\n\n    string str = crypt.con_ascii_2_hex(\"Hello World\");\n    string enc = crypt.b64_encode(str); \n    cout &lt;&lt; \"ENCODED: \" &lt;&lt; enc &lt;&lt; endl;\n\n    string dec = crypt.con_hex_2_ascii(crypt.b64_decode(enc));\n    cout &lt;&lt; \"DECODED: \" &lt;&lt; dec &lt;&lt; endl;\n    return 0;\n}\n</code></pre>\n\n<p><strong><em>Note: This solution and the library named <code>crypto.h</code> was built using the C++ programming language. The source code for this solution can be found on Github.</em></strong></p>\n\n<p>Hope you guys liked reading this article!</p>\n\n<p>Until next time, then!</p>\n", "index": 16}, {"section": "writings", "title": "The Cryptopals Crypto Challenges: Set 1 - Convert Hex to Base64", "link": "writings/posts/the-cryptopals-crypto-challenges-set-1--convert-hex-to-base64", "date": "December 6th, 2017", "date_alt": "06.12.2017", "year": "2017", "date_raw": "2017-12-06", "slug": "the-cryptopals-crypto-challenges-set-1--convert-hex-to-base64", "category": "Cryptography", "categories": [{"title": "Cryptography", "link": "/category/cryptography/"}], "summary": "Convert Hexadecimal strings to encoded Base64 strings.", "reading_time": "2 minutes read", "preview_image_url": "", "filename": "content/writings/15_2019_02_08_the-cryptopals-crypto-challenges-set-1--convert-hex-to-base64.md", "status": "active", "content": "<p>This is the <a href=\"http://cryptopals.com/sets/1/challenges/1\">first challenge</a> of Set 1 in The Cryptopals Crypto Challenges website. If you want to know more about these challenges, look at my <a href=\"/posts/the-cryptopals-crypto-challenges\">previous post</a>.</p>\n\n<p>For this challenge, you need to be able to convert Hexadecimal strings to encoded Base64 strings:</p>\n\n<p>The string:</p>\n\n<pre><code>49276d206b696c6c696e6720796f757220627261696e206c696b65206120706f69736f6e6f7573206d757368726f6f6d\n</code></pre>\n\n<p>Should produce:</p>\n\n<pre><code>SSdtIGtpbGxpbmcgeW91ciBicmFpbiBsaWtlIGEgcG9pc29ub3VzIG11c2hyb29t\n</code></pre>\n\n<p>Not only is this challenge just a warmup but it is also designed to make you feel comfortable in dealing with raw bytes as Base64 is used to encode binary information and Hexadecimal is used to view the raw bytes.</p>\n\n<h2>How to convert from Hexadecimal to Base64?</h2>\n\n<p>Well, it's simpler than you think! You will have to go through the following steps:</p>\n\n<ol>\n<li><a href=\"#step-1\">Convert hexadecimal string to binary string</a></li>\n<li><a href=\"#step-2\">Split the binary string into 4 pieces of 6 bits each</a></li>\n<li><a href=\"#step-3\">Convert the binary string to decimal</a></li>\n<li><a href=\"#step-4\">Compare each decimal against each character in a reference string of 64 characters</a></li>\n</ol>\n\n<h3><a id=\"step-1\"></a> Convert hexadecimal string to binary string</h3>\n\n<p>Before converting to binary, you should compare each character against a hashmap table of hardcoded hexadecimal keys and binary values.</p>\n\n<pre><code>//Hashmap that contain hex key and binary values\nmap&lt;char, string&gt; CryptoLib::gen_hex_table()\n{\n    map&lt;char, string&gt; map;\n\n    map['0'] = \"0000\";\n    map['1'] = \"0001\";\n    map['2'] = \"0010\";\n    map['3'] = \"0011\";\n    map['4'] = \"0100\";\n    map['5'] = \"0101\";\n    map['6'] = \"0110\";\n    map['7'] = \"0111\";\n    map['8'] = \"1000\";\n    map['9'] = \"1001\";\n    map['a'] = \"1010\";\n    map['b'] = \"1011\";\n    map['c'] = \"1100\";\n    map['d'] = \"1101\";\n    map['e'] = \"1110\";\n    map['f'] = \"1111\";\n\n    return map;\n}\n\n//Convert hex to string\nstring CryptoLib::con_hex_2_bin(string hexStr)\n{\n    map&lt;char,string&gt; m = gen_hex_table();\n\n    string newStr = \"\";\n    for(int i=0; i &lt;hexStr.size(); i++)\n    {\n        if(isdigit(hexStr[i]))\n        {\n            newStr += m.find(hexStr[i])-&gt;second;\n        }\n        else\n        {\n            newStr += m.find(hexStr[i])-&gt;second;\n        }\n        // newStr += m.find(hexStr[i])-&gt;second;\n    }\n    return newStr;\n}\n</code></pre>\n\n<h3><a id=\"step-2\"></a> Split the binary string into 4 pieces of 6 bits each</h3>\n\n<p>Base64 represents data in the form of ASCII format that follows a Radix-64 representation. Each character is picked from a set of 64 characters, which means that I'll only need 6 bits represent each character because <strong>2<sup>6</sup> = 64 characters</strong>.</p>\n\n<pre><code>//Add spaces between strings\nstring CryptoLib::add_spaces(string str, int spaces)\n{\n    string newStr = \"\";\n    int count = 0;\n\n    for(int i=0; i&lt;str.size(); i++)\n    {\n\n        // newStr += str[i];\n        if(count == spaces)\n        {\n            newStr += \" \";\n            i--;\n            count = 0;\n        }\n        else\n        {\n            newStr += str[i];\n            count++;\n        }\n    }\n\n    return newStr;\n}\n</code></pre>\n\n<h3><a id=\"step-3\"></a> Convert the binary string to decimal</h3>\n\n<p>Before converting, you should know that a decimal number is equal to the sum of binary digits (d~n~) times their power of 2 (2<sup>n</sup>).</p>\n\n<p>Let's say you have a binary string of <mark>111001</mark>, it's decimal\nwould be <mark>1x2<sup>5</sup> + 1x2<sup>4</sup> + 1x2<sup>3</sup> + 0x2<sup>2</sup> + 0x2<sup>1</sup> + 1x2<sup>0</sup> =\n57</mark></p>\n\n<pre><code>//Convert binary to decimal\nvector&lt;int&gt; CryptoLib::con_bin_2_dec(string str, double power)\n{\n    vector&lt;int&gt; v;\n    string newStr = \"\";\n    istringstream iss(str);\n    string x;\n\n    while(iss &gt;&gt; x)\n    {\n        double p = power;\n        double decimal = 0.0;\n\n        for(int i=0; i&lt;x.size(); i++)\n        {\n            if(x[i] == '1')\n            {\n                decimal += pow(2.0, p);\n            }\n            p--;\n        }\n        v.push_back((int)decimal);\n    }\n    return v;\n}\n</code></pre>\n\n<h3><a id=\"step-4\"></a> Compare each decimal against each character in a reference string of 64 characters</h3>\n\n<p>At this stage, all you have to do is find and concatenate each character (using the reference string) based on each decimal and return your encoded Base64 string as the final output.</p>\n\n<pre><code>//Convert HEX to Base 64\nstring CryptoLib::con_hex_2_b64(string str)\n{\n    string b64 = \"\";\n    string ref = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    string newStr = add_spaces(con_hex_2_bin(str), 6);\n\n    vector&lt;int&gt; v = con_bin_2_dec(newStr, 5.0);\n\n    for(int i=0; i&lt;v.size(); i++)\n    {\n        b64 += ref[v[i]];\n    }\n\n    return b64;\n}\n</code></pre>\n\n<p>Here's the final section of the code:</p>\n\n<pre><code>//CryptoPals Set 1 Challenge 1\n#include \"crypto.h\"\n\nint main()\n{\n    CryptoLib crypt;\n\n    //Test case provided from the site\n    string str = \"49276d206b696c6c696e6720796f757220627261696e206c696b65206120706f69736f6e6f7573206d757368726f6f6d\";\n    cout &lt;&lt; crypt.con_hex_2_b64(str) &lt;&lt; endl;\n    return 0;\n}\n</code></pre>\n\n<p><strong><em>Note: This solution and the library named <code>crypto.h</code> was built using the C++ programming language. The source code for this solution can be found on Github.</em></strong></p>\n\n<p>Stay tuned for the next challenge.</p>\n", "index": 15}, {"section": "writings", "title": "The Cryptopals Crypto Challenges", "link": "writings/posts/the-cryptopals-crypto-challenges", "date": "November 11th, 2017", "date_alt": "11.11.2017", "year": "2017", "date_raw": "2017-11-11", "slug": "the-cryptopals-crypto-challenges", "category": "Cryptography", "categories": [{"title": "Cryptography", "link": "/category/cryptography/"}], "summary": "Came across an interesting website that hosts cryptographic challenges based on real world cryptography.", "reading_time": "2 minutes read", "preview_image_url": "", "filename": "content/writings/14_2019_02_08_the-cryptopals-crypto-challenges.md", "status": "active", "content": "<p>Last week, I came across an interesting website named <a href=\"http://cryptopals.com/\">The Cryptopals\nCrypto Challenges</a> (also known as The Matasano\nCrypto Challenges) that hosts cryptographic challenges based on\nreal-world cryptography that makes use of various ciphers and secure\nprotocols.</p>\n\n<h2>What is it about?</h2>\n\n<p>These challenges were developed by a security team called <a href=\"https://www.nccgroup.trust/us/\">NCC\nSecurity</a>, which is developed as a tool\nfor teaching <a href=\"https://en.wikipedia.org/wiki/Cryptography\">Cryptography</a>.</p>\n\n<p>Currently, there are eight sets of problems in which each set gets\nprogressively harder as you solve them. As I'm writing this post, I'm\nsolving the <a href=\"http://cryptopals.com/sets/1\">first set</a> of problems, these\nproblems are designed in such a way that you get to build own\ncryptographic functions/utilities and exploit them. Most importantly,\nnot only do these challenges give you an overview on how to build secure\ncryptographic systems but also you'll get an understanding on how\nthey're being attacked.</p>\n\n<p>In the first few challenges, I was exposed to some crypto math but these\nconcepts weren't that hard as it was more practical and gentler:</p>\n\n<ul>\n<li><a href=\"http://en.wikipedia.org/wiki/Modular_arithmetic\">Modular arithmetic</a></li>\n<li>Working with different bases such as Base 2 and Base 16</li>\n<li><a href=\"http://en.wikipedia.org/wiki/Hamming_distance\">Hamming Distance</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Standard_deviation\">Standard Deviation and Variance</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Frequency_(statistics)\">Frequency</a></li>\n</ul>\n\n<p>Also, I found myself using different techniques to solve these\nchallenges such as:</p>\n\n<ul>\n<li>String manipulation</li>\n<li>Lookup tables / Hashmaps</li>\n<li>Conversion of string to integer and vice-versa</li>\n<li>Bitwise operators</li>\n</ul>\n\n<p>Like I had mentioned above, this is also designed as a tool to learn\ncryptography, which means you don't really need to have prior knowledge\nof cryptography and security. It's all about doing your own research on\nvarious algorithms, implementing the solution and then breaking your own\nsolution.</p>\n\n<h2>Why do I want to do this?</h2>\n\n<p>I found it as a good opportunity to sharpen my C++ programming skills\nand learn more about cryptographical theory and it's applications. If\nyou're curious and passionate enough to solve puzzles, this is your\nchance!</p>\n\n<h2>What's next?</h2>\n\n<p>I will be posting walkthroughs (on how I solved every problem in each\nset) on my blog and also provide solutions to those problems on my\n<a href=\"https://www.github.com/megacolorboy\">GitHub</a> repository.</p>\n\n<p>Stay tuned!</p>\n", "index": 14}, {"section": "writings", "title": "New feature: Share your reaction", "link": "writings/posts/new-feature-share-your-reaction", "date": "October 14th, 2017", "date_alt": "14.10.2017", "year": "2017", "date_raw": "2017-10-14", "slug": "new-feature-share-your-reaction", "category": "Update", "categories": [{"title": "Update", "link": "/category/update/"}], "summary": "Rolled out a new feature to collect emotional intelligence, which would help me to make better blog posts in the future.", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/writings/13_2019_01_25_new-feature-share-your-reaction.md", "status": "active", "content": "<p>Last night, I was thinking on how to improve my blog posts and post better articles. My head went through questions like:</p>\n\n<ul>\n<li>What do people feel when they read my articles?</li>\n<li>Do they find it interesting?</li>\n<li>Is it boring?</li>\n<li>Is it likeable?</li>\n</ul>\n\n<p>But, in order to do that, I'll require some simple analytics on how people react to my articles on my blog. Taking inspiration from web applications like Facebook, Instagram, Twitter and Medium, I decided to build a small feature named \"Share your reaction\", from scratch, that would contain six different emotions.</p>\n\n<figure style=\"text-align: center;\">\n    <div>\n        <img style=\"width: 32px; height:32px; display: inline-block; margin-left: 10px; margin-right: 10px;\" src=\"/static/images/new_emojis/like.png\"> \n        <img style=\"width: 32px; height:32px; display: inline-block; margin-left: 10px; margin-right: 10px;\" src=\"/static/images/new_emojis/love.png\"> \n        <img style=\"width: 32px; height:32px; display: inline-block; margin-left: 10px; margin-right: 10px;\" src=\"/static/images/new_emojis/haha.png\"> \n        <img style=\"width: 32px; height:32px; display: inline-block; margin-left: 10px; margin-right: 10px;\" src=\"/static/images/new_emojis/wow.png\"> \n        <img style=\"width: 32px; height:32px; display: inline-block; margin-left: 10px; margin-right: 10px;\" src=\"/static/images/new_emojis/sad.png\"> \n        <img style=\"width: 32px; height:32px; display: inline-block; margin-left: 10px; margin-right: 10px;\" src=\"/static/images/new_emojis/angry.png\">\n    </div>\n    <figcaption>The six different emotions used in this new feature</figcaption>\n</figure>\n\n<p>From today onwards, you can start reacting to my blog posts by clicking the <strong><em>\"React!\"</em></strong> button (which can be found below every article), select an emotion and help me improve and post better articles in my blog in the future.</p>\n\n<p>In case, you're wondering, the data that is collected is <strong><em>completely anonymous</em></strong> as I'm not collecting any IP address or any of your private and sensitive information.</p>\n\n<p>Hope you guys like the new feature!</p>\n", "index": 13}, {"section": "writings", "title": "Leave me alone, I just want to write code!", "link": "writings/posts/leave-me-alone-i-just-want-to-write-code", "date": "October 7th, 2017", "date_alt": "07.10.2017", "year": "2017", "date_raw": "2017-10-07", "slug": "leave-me-alone-i-just-want-to-write-code", "category": "Essay", "categories": [{"title": "Essay", "link": "/category/essay/"}], "summary": "Do you think that programmers don't have to interact with people? This article will give you an insight.", "reading_time": "6 minutes read", "preview_image_url": "", "filename": "content/writings/12_2019_01_25_leave-me-alone-i-just-want-to-write-code.md", "status": "active", "content": "<p>The title of this post might be \"clickbait\" but there are some software developers who believe that they are supposed to just write code and not interact with people.</p>\n\n<p>There are a lot of books that deal with sort of topic but in today's article, I will be borrowing heavily from my career experience and a favorite book of mine named <a href=\"https://www.amazon.com/Soft-Skills-software-developers-manual/dp/1617292397\">Soft Skills: The Software Developer's Life Manual</a> to talk about how important it is for a software developer to interact with people.</p>\n\n<h2>I'm a software developer, why should I interact with people?</h2>\n\n<p>Earlier, I used to be under the impression that software developers are supposed to be glued in to their screens like a Hollywood hacker and just write code. But hey, I'm sure that I'm not the only one who had been thinking in that direction.</p>\n\n<p>In fact, a portion of our time is being spent on interacting with people because not only are we writing code-logic for the computer to understand but it is mainly written for humans to aid in solving their daily problems. If that's not the scenario that means we'd all be talking to computers in binary form or machine language.</p>\n\n<p>As time passed by, I learnt that in order to become a better software developer, you really should know how to deal with people (but I still like being glued to my two HD monitors!).</p>\n\n<figure>\n    <img src=\"/static/images/workspace.png\"/>\n    <figcaption>My current workspace</figcaption>\n</figure>\n\n<p>Think about it, where do the project requirements come from? Is it from computers? <strong><em>No, it's from people</em></strong>. Can your code send you an email to fix the new bug? <strong><em>No, people can</em></strong>.</p>\n\n<p>A few examples:</p>\n\n<ul>\n<li>Sitting down on weekly meetings with your boss or clients</li>\n<li>Communicating with team members about the problem that you're working on and strategizing a way to solve that problem</li>\n</ul>\n\n<p>If you still have the same mindset, you'd better rethink on that again because just like any other profession, you will have to interact with people.</p>\n\n<h2>How do I deal with people?</h2>\n\n<p>Like I had mentioned, at the very beginning of this article, there are a lot of books based on this topic but I'll try to keep it short and talk about a few points that might give you an idea on how to deal with people:</p>\n\n<ul>\n<li><a href=\"#tip-1\">Everybody needs to feel essential</a></li>\n<li><a href=\"#tip-2\">Try not to criticize</a></li>\n<li><a href=\"#tip-3\">Consider what the other person needs</a></li>\n<li><a href=\"#tip-4\">Stay away from arguments</a></li>\n</ul>\n\n<h3><a id=\"tip-1\"></a> Everybody needs to feel essential</h3>\n\n<p>Let's face it, everyone loves to take the spotlight and would like to make everyone listen to them but there's nothing wrong about it as it's one of humanity's most desperate and deepest desires that help motivate us to achieve some of our greatest goals in our career, life and society.</p>\n\n<p>Likewise, you're not the only one who has got amazing ideas, every individual does. It's very easy for you to discard one's idea, so that you can present yours instead but when you make this error, it might backfire on you i.e. you'll find others not listening to your ideas because you didn't value theirs in the first place.</p>\n\n<p>So, always make it a point, if you want people to accept your ideas and think it's valuable, you'll also have to do the same thing, in return, for everyone else.</p>\n\n<h3><a id=\"tip-2\"></a> Try not to criticize</h3>\n\n<p>Back in my university days, when I was working on my graduation project, I used to face a lot of criticism from a fellow Computer Science Professor, who thought negativity is an effective way to motivate an individual and responded to all faults with harsh criticism but I feel that's a wrong method to motivate an individual.</p>\n\n<p>If you want to inspire or motivate people to do their best, you should encourage them with positivity than harsh negativity, this could help boost their self esteem and performance as a software developer.</p>\n\n<p>On the contrary, a little bit of critical feedback to help improve one's problem solving skills is totally fine.</p>\n\n<h3><a id=\"tip-3\"></a> Consider what the other person needs</h3>\n\n<p>During my career, I learnt that I should think about what's important to the other individual and what they want than what's important to me and what I want.</p>\n\n<p>Whenever you enter in a conversation with your team member or boss, make sure you see things from their perspective. Try to understand their requirements and then when it's your turn, phrase the dialog in ways that your implementation matches their requirement.</p>\n\n<p>Having shifted your mindset to this direction, you'll be making the person feel more essential and be more open to their ideas. In return, you can use leverage it in ways where people would deal with you in a favorable manner and value your ideas and skillset.</p>\n\n<h3><a id=\"tip-4\"></a> Stay away from arguments</h3>\n\n<p>One of the most common things that most software developers do is that they falsely believe that pure solid reasoning is enough to make another person accept your style of thinking because they assume that the latter might think about things from a logical perspective. Believe me, even I did this when talking to a lot of people.</p>\n\n<p>But then, we all have this sort of nature in which we tend to pride ourselves on our own intellectual prowess but a slight difference in opinion, it hits us right in our ego and opens up a potential door for arguments.</p>\n\n<p>For this reason, at all costs, it's best to avoid arguments of any sorts because talking in terms of logic and pure reasoning would do little to convince a screaming toddler. Whenever you reach a point of disagreement on how things should be done, it is best to determine whether or not that particular direction is the right way to reach the top of the hill and especially, if it involves another individual, weigh the pros and cons of a decision.</p>\n\n<p>I'd like to share an interesting quote:</p>\n\n<blockquote>\n  <p>\"I have to come to the conclusion that there is only one way under high heaven to get the best of an argument &mdash; and that is to avoid it. Avoid it as you would avoid rattlesnakes and earthquakes.\" - Dale Carnegie, How to Win Friends and Influence People (1936)</p>\n</blockquote>\n\n<p>Probably, it wouldn't hurt much if you try to look for an opportunity to give up and admit that you're wrong on a small matter but, perhaps, it could be a big deal to the other person, which will help you build a good image and respect with them and can be leveraged in the future.</p>\n\n<h2>In conclusion</h2>\n\n<p>Being a good software developer isn't about being really skilled at coding (although, it's an imperative skillset!) but it's also about having good soft skills. If you ever thought that you have never worked on your soft skills, then this is time right for you to begin as you'll find your career much more enjoyable and accumulate a lot of skills and benefits in the future that will help you down the lane.</p>\n\n<p>Hope you liked reading this article!</p>\n\n<p>Au Revoir!</p>\n", "index": 12}, {"section": "writings", "title": "Building something out of nothing", "link": "writings/posts/building-something-out-of-nothing", "date": "September 16th, 2017", "date_alt": "16.09.2017", "year": "2017", "date_raw": "2017-09-16", "slug": "building-something-out-of-nothing", "category": "Essay", "categories": [{"title": "Essay", "link": "/category/essay/"}], "summary": "What does it feel like to transform an idea into reality?", "reading_time": "3 minutes read", "preview_image_url": "", "filename": "content/writings/11_2019_01_25_building-something-out-of-nothing.md", "status": "active", "content": "<p>I know, it's been a while since my last article and this time, I felt that I wanted to talk about something different. For a change, I was going through some folders of my old, unused projects and I thought of improvising them and mash all of those projects into a virtual smartwatch! So, start exploring it!</p>\n\n<p>I'd like to share one of my favorite quotes:</p>\n\n<blockquote>\n  <p>\"I'm personally convinced that computer science has a lot in common with physics. Both are about how the world works at a rather fundamental level. The difference, of course, is that while in physics you're supposed to figure out how the world is made up, in computer science you create the world. Within the confines of the computer, you're the creator. You get to ultimately control everything that happens. If you're good enough, you can be God. On a small scale.\" &mdash; <cite><a href=\"https://tildesites.bowdoin.edu/~ltoma/teaching/beautyOfProgramming.pdf\">Linus Torvalds in The Beauty of Programming</a></cite></p>\n</blockquote>\n\n<p>Sometimes when working with huge complex systems, useless error messages, unusually long SQL queries or an abominable APIs, I forget why I enjoy computer science. Every once in a while, reading a quote like the one above, would put me back in the right direction.</p>\n\n<p>I know this might sound a bit cheesy but back in my childhood days, I liked watching <a href=\"https://en.wikipedia.org/wiki/Dexter%27s_Laboratory\">Dexter's Laboratory</a> and the idea that Dexter had a secret lab and he was able to build robots and gadgets was one of those things that I found really fascinating as a child.</p>\n\n<p>The reason I chose Computer Science in the first place was to be able to build my own things from scratch. Whenever I had an \"itch to scratch\", I would require nothing but my mind, my favorite text editor (<a href=\"https://www.sublimetext.com/\">Sublime Text</a>), a Terminal and turn up some good classical music like <a href=\"https://en.wikipedia.org/wiki/Wolfgang_Amadeus_Mozart\">Mozart</a> or <a href=\"https://en.wikipedia.org/wiki/Ludwig_van_Beethoven\">Beethoven</a> and start building from scratch.</p>\n\n<p>The ability to start with an empty page in your text editor or IDE and wind up building something that works (despite, a lot of trial and error) is so gratifying in ways that's difficult to explain to anyone who's never built it.</p>\n\n<p><strong>Virtual Smartwatch:</strong></p>\n\n<ul>\n<li>Press the Power button to ON/OFF Device.</li>\n<li>Swipe left or right to switch between applications.</li>\n</ul>\n\n<figure>\n    <iframe width=\"500\" height=\"520\" src=\"/static/projects/smartwatch/\"></iframe>\n    <figcaption>Uhh yeah, it's somewhat identical to Apple Watch</figcaption>\n</figure>\n\n<p>For those of you who know how to program, you can understand that there's nothing like having a \"thrill\" of being able to build anything that your mind can think of. And for those who are learning or yet to learn, it will come out but you'll just have to explore further. Maybe it's that tiny feeling of accomplishment provided that you're able to explain to other people about how the whole thing works or perhaps, maybe I'm just too immature enough to work with other people's code.</p>\n\n<p>Although, sometimes, I've felt the need to spend more time working on solving \"useful\" problems during my free time as time passes by, building tiny projects like these allow me to refresh my knowledge. It also applies very well to projects that I did to learn something. My previous projects like <a href=\"/posts/i-built-a-sudoku-solver/\">Sudoku</a> and <a href=\"/posts/arcade-challenge-3-pong/\">Pong</a> are some of the examples. Small, self-contained, visually interactive projects that I built just for fun.</p>\n\n<p>Hope you guys liked reading this article!</p>\n\n<p>Adios Amigo!</p>\n", "index": 11}, {"section": "writings", "title": "Arcade Challenge 4: Tetris", "link": "writings/posts/arcade-challenge-4-tetris", "date": "August 12th, 2017", "date_alt": "12.08.2017", "year": "2017", "date_raw": "2017-08-12", "slug": "arcade-challenge-4-tetris", "category": "Arcade Challenge", "categories": [{"title": "Arcade Challenge", "link": "/category/arcade-challenge/"}], "summary": "This is the fourth article of the Arcade Challenge series. In this article, I'll be talking about Tetris, it's history and game mechanics, in short.", "reading_time": "4 minutes read", "preview_image_url": "", "filename": "content/writings/10_2019_01_09_arcade-challenge-4-tetris.md", "status": "active", "content": "<script defer type=\"text/javascript\" src=\"/static/projects/tetris/js/tetris.js\"></script>\n\n<script defer type=\"text/javascript\" src=\"/static/projects/tetris/js/render.js\"></script>\n\n<script defer type=\"text/javascript\" src=\"/static/projects/tetris/js/controller.js\"></script>\n\n<figure>\n    <canvas style=\"border-radius: 0px;background-color:#333;\" id=\"tetris_canvas\" width=\"300\" height=\"600\"></canvas>\n</figure>\n\n<p>Before you read more about this article, play with the above game. It's simple, control each block using <strong><em>WASD</em></strong> keys to rotate and move the block to the left, right and down of the canvas.</p>\n\n<p>This is part of the <a href=\"/posts/i-challenged-myself-to-build-4-arcade-games\">Arcade Challenge</a> series. If you haven't read the previous articles, here you go:</p>\n\n<ul>\n<li><a href=\"/posts/arcade-challenge-1-snake-game/\">Snake Game</a></li>\n<li><a href=\"/posts/arcade-challenge-2-breakout/\">Breakout</a></li>\n<li><a href=\"/posts/arcade-challenge-3-pong/\">Pong</a></li>\n</ul>\n\n<h2>Background</h2>\n\n<p>Tetris is a tile-matching puzzle game in which you have shapes called \"Tetrominoes\" (I'll be talking about it more in detail below.) falling down vertically from above into a matrix or \"the well\". The game's objective is to set a high score by manipulating the seven shapes (but I didn't set a scoring system for this implementation) by moving left, right, down or rotating the shape by 90 degree units. As the game progresses, the tetrominoes would fall faster in every level, thus, making it challenging to play.</p>\n\n<h2>History</h2>\n\n<p>In 1984, the game was invented, designed and programmed by an AI researcher named <a href=\"https://en.wikipedia.org/wiki/Alexey_Pajitnov\">Alexey Pajitnov</a>, who at the time worked for the <strong><em>Soviet Academy of Sciences</em></strong> in Moscow.</p>\n\n<figure>\n    <img src=\"https://upload.wikimedia.org/wikipedia/en/8/8d/NES_Tetris_Box_Front.jpg\"/>\n    <figcaption>Tetris cover art</figcaption>\n</figure>\n\n<p>Alexey Pajitnov was inspired by the classic Roman puzzle game called <a href=\"https://en.wikipedia.org/wiki/Pentomino\">Pentomino</a>. In 1985, the game was published for various game consoles.</p>\n\n<h2>Game mechanics</h2>\n\n<p>This game has quite some interesting mechanics, for those who don't know, here it is:</p>\n\n<ul>\n<li><a href=\"#generating-shapes\">Generating Shapes</a></li>\n<li><a href=\"#collision\">Collision</a></li>\n<li><a href=\"#freeze-the-line\">Freeze the Line</a></li>\n<li><a href=\"#rotating-shapes\">Rotating Shapes</a></li>\n<li><a href=\"#clearing-the-line\">Clearing the Line</a></li>\n</ul>\n\n<h3><a id=\"generating-shapes\"></a> Generating Shapes</h3>\n\n<p>These shapes are called <strong><em>\"tetrominoes\"</em></strong> i.e. a unique arrangement of 4 cells in a 4x4 grid. Mathematically, it is proven that there can only be seven tetrominoes on a <strong><em>two-dimensional space</em></strong>, which also means seven different ways to arrange 4 cells.</p>\n\n<figure>\n    <img src=\"http://oopsilon.com/06/texts/tetris-shapes.gif\"/>\n    <figcaption>The Seven Tetrominoes</figcaption>\n</figure>\n\n<p>I'm sure a lot of you know that Javascript doesn't have a special way of creating multi-dimensional arrays. So in order to draw a random shape, I had to convert a two-dimensional array index to a one-dimensional array index to fill each cell i.e. if it was a '1', it would be filled with color and if it's a '0', it would be empty.</p>\n\n<pre><code>//Generate new random shape\nfunction newShape()\n{\n    current = [];\n\n    var rand = Math.floor(Math.random() * shapes.length);\n    var shape = shapes[rand];\n\n    for(var y=0; y&lt;4; y++)\n    {\n        current[y] = [];\n        for(var x=0; x&lt;4; x++)\n        {\n            //convert 2D index to 1D index\n            var i = 4 * y + x;\n            if(shape[i])\n            {\n                current[y][x] = rand + 1;\n            }\n            else\n            {\n                current[y][x] = 0;\n            }\n        }\n    }\n\n    currentX = 5;\n    currentY = 0;\n}\n</code></pre>\n\n<h3><a id=\"collision\"></a> Collision</h3>\n\n<p>As I had mentioned in my <a href=\"/posts/arcade-challenge-3-pong/\">previous post</a>, I was inspired to use the <a href=\"https://en.wikipedia.org/wiki/Minimum_bounding_box#Axis-aligned_minimum_bounding_box\">AABB collision</a> algorithm to prevent the tetrominoes from going away from the canvas. Well, we all know that simple physics says that if an object is dropped from above, it should break the ones below but in this case, that doesn't happen. Instead, the tetrominoes are stacked on top of each other, which unlike real gravity, that contributes to the actual gameplay.</p>\n\n<pre><code>//Check if this shape's position is valid in the board\nfunction isValid(offsetX, offsetY, newCurrent)\n{\n    //if offsetX is not set, set it to 0\n    offsetX = offsetX || 0;\n    //if offsetY is not set, set it to 0\n    offsetY = offsetY || 0;\n\n    offsetX = currentX + offsetX;\n    offsetY = currentY + offsetY;\n\n    newCurrent = newCurrent || current;\n\n    for(var y=0; y&lt;4; y++)\n    {\n        for(var x=0; x&lt;4; x++)\n        {\n            if(newCurrent[y][x])\n            {\n                if(typeof board[y + offsetY] == 'undefined' ||\n                typeof board[y + offsetY][x + offsetX] == 'undefined' ||\n                board[y + offsetY][x + offsetX] ||\n                x + offsetX &lt; 0 ||\n                y + offsetY &gt;= rows ||\n                x + offsetX &gt;= cols)\n                {\n                    if(offsetY == 1){lose = true;}\n                    return false;\n                }\n            }\n        }\n    }\n    return true;\n} \n</code></pre>\n\n<h3><a id=\"freeze-the-line\"></a> Freeze the Line</h3>\n\n<p>Honestly, I could have come up with a better name but the method freeze() stops the shape at it's current position (i.e. after a collision has occurred) and saves it to the 2D canvas.</p>\n\n<pre><code>function freeze()\n{\n    for(var y=0; y&lt;4; y++)\n    {\n        for(var x=0; x&lt;4; x++)\n        {\n            if(current[y][x])\n            {\n                board[y+currentY][x+currentX] = current[y][x];\n            }\n        }\n    }\n}\n</code></pre>\n\n<h3><a id=\"rotating-shapes\"></a> Rotating Shapes</h3>\n\n<p>In order to rotate a shape perpendicularly anticlockwise, you have to perform an operation that flips the indices from bottom to top of the matrix, this operation is called <a href=\"https://en.wikipedia.org/wiki/Transpose\">Matrix Transpose</a>. Although I learnt this in my math classes, I implemented this operation in a Computer Graphics course that I took, as an elective, in my university on Spring 2016 for the first time.</p>\n\n<pre><code>//Rotate the current moving shape\nfunction rotate(current)\n{\n    var newCurrent = [];\n    for(var y=0; y&lt;4; y++)\n    {\n        newCurrent[y] = [];\n        for(var x=0; x&lt;4; x++)\n        {\n            newCurrent[y][x] = current[3-x][y];\n        }\n    }\n    return newCurrent;\n}\n</code></pre>\n\n<h3><a id=\"clearing-the-line\"></a> Clearing the Line</h3>\n\n<p>At every update, the method named <strong><em>clearLines()</em></strong> has to scan for any complete row(s), if it's complete, the cells in those rows must be replaced with the ones above it. This gives a sort of <strong><em>\"falling gravity\"</em></strong> effect, when the remaining cells are replaced with the row that has been cleared.</p>\n\n<pre><code>function clearLines()\n{\n    //Bottom up approach\n    for(var y = rows - 1; y&gt;=0; y--)\n    {\n        var isComplete = true;\n        for(var x=0; x &lt; cols; x++)\n        {\n            //if there's any empty cell in the row\n            if(board[y][x] == 0)\n            {\n                //Then the row isn't complete\n                isComplete = false;\n                break;\n            }\n        }\n\n        //This code is to remove the current completed line,\n        //and replace it with the line above it.\n        if(isComplete)\n        {\n            for(var i=y; i&gt;0; i--)\n            {\n                for(var j=0; j &lt; cols; j++)\n                {\n                    board[i][j] = board[i-1][j];\n                }\n            }\n            y++;\n        }\n    }\n}\n</code></pre>\n\n<p>The game was built using HTML5 Canvas and Javascript, so please feel free to read the source code to understand the logic of the game. </p>\n\n<h2>What's next?</h2>\n\n<p>I know that in my <a href=\"/posts/i-challenged-myself-to-build-4-arcade-games/\">first post</a>, I had mentioned that I'll do this whole challenge for a month but then I wasn't able to do everything in a month. So, I decided that I will be trying my best to remake more arcade games in the future and keep posting them on this blog. Hope you guys liked reading these articles!</p>\n\n<p>Sayonara!</p>\n\n<h2>References</h2>\n\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Tetris\">Tetris (1984)</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Alexey_Pajitnov\">Alexey Pajitnov</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Transpose\">Matrix Transpose</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Minimum_bounding_box#Axis-aligned_minimum_bounding_box\">Axis Aligned Bounding Collision</a></li>\n</ul>\n", "index": 10}, {"section": "writings", "title": "Arcade Challenge 3: Pong", "link": "writings/posts/arcade-challenge-3-pong", "date": "August 11th, 2017", "date_alt": "11.08.2017", "year": "2017", "date_raw": "2017-08-11", "slug": "arcade-challenge-3-pong", "category": "Arcade Challenge", "categories": [{"title": "Arcade Challenge", "link": "/category/arcade-challenge/"}], "summary": "This is the third article of the Arcade Challenge series. In this article, I'll be talking about Pong, it's history and game mechanics, in short.", "reading_time": "2 minutes read", "preview_image_url": "", "filename": "content/writings/09_2019_01_09_arcade-challenge-3-pong.md", "status": "active", "content": "<script defer type=\"text/javascript\" src=\"/static/projects/pong/js/pong.js\"></script>\n\n<figure>\n    <canvas style=\"border-radius: 0px;\" id=\"pong_canvas\" width=\"500\" height=\"500\"></canvas>\n</figure>\n\n<p>Before you read more about this article, play with the above game. The rules are simple, control the paddle using <kbd>W</kbd> and <kbd>S</kbd> keys.</p>\n\n<p>This is part of the <a href=\"/posts/i-challenged-myself-to-build-4-arcade-games/\">Arcade Challenge</a> series. If you haven't read the previous articles, here you go:</p>\n\n<ul>\n<li><a href=\"/posts/arcade-challenge-1-snake-game/\">Snake Game</a></li>\n<li><a href=\"/posts/arcade-challenge-2-breakout/\">Breakout</a></li>\n</ul>\n\n<h2>Background</h2>\n\n<p>It's a 2D <a href=\"https://en.wikipedia.org/wiki/Table_tennis\">table tennis</a> simulation game. The player controls a paddle that moves vertically up and down on the side of the screen and can compete against AI or a second player, who controls the second paddle on the opposite side. The aim of the game is to hit the ball back and forth and reach 11 points before the opponent (although, I didn't build a scoring system for my implementation as I felt it wasn't necessary).</p>\n\n<h2>History</h2>\n\n<p>Pong is one of the most popular and commercially successful arcade game built by <strong><em>Atari, Inc</em></strong> in 1972. It was the company's first game and was created by <a href=\"https://en.wikipedia.org/wiki/Allan_Alcorn\">Allan Alcorn</a>, who got it as a warm-up exercise from the founder of the company, <a href=\"https://en.wikipedia.org/wiki/Nolan_Bushnell\">Nolan Bushnell</a>.</p>\n\n<h2>Game mechanics</h2>\n\n<p>There are two important mechanics that made it challenging to build this game:</p>\n\n<ul>\n<li><a href=\"#gameai\">Game AI</a></li>\n<li><a href=\"#ballcollision\">Ball Collision</a></li>\n</ul>\n\n<h2><a id=\"gameai\"></a> Game AI</h2>\n\n<p>While I was building Pong, I thought of making it a 2 player game but later I decided to build a simple AI to make things interesting. Building the AI logic for this was simple, <strong><em>\"When the player paddle hits the ball, the AI should try it's best to position itself by tracking the ball's destination to hit the it's center\"</em></strong>.</p>\n\n<p><strong>Code snippet of the AI object:</strong></p>\n\n<pre><code>var ai = {\n    x: null,\n    y: null,\n    width: 10,\n    height:100,\n\n    //Update the AI paddle position based on the ball's direction\n    update: function(){\n        var dest_y = ball.y - (this.height - ball.side) * 0.5;\n        this.y += (dest_y - this.y) * 0.1;\n        this.y = Math.max(Math.min(this.y, height-this.height), 0);\n    },\n    draw: function(){\n        ctx.fillRect(this.x, this.y, this.width, this.height);\n    }\n};  \n</code></pre>\n\n<h2>Ball Collision</h2>\n\n<p>In this game, the collision works a little different than <a href=\"#\">Breakout</a>'s version. I came across an algorithm called <a href=\"https://en.wikipedia.org/wiki/Minimum_bounding_box#Axis-aligned_minimum_bounding_box\">Axis Aligned Bounding Box</a>, which is one of the simpler forms of detecting a collision between a set of objects that are axis aligned that means no rotation. This algorithm also inspired me to use it in my next game, Tetris. </p>\n\n<p><strong>Code snippet of the Axis Aligned Bounding Boxes collision:</strong></p>\n\n<pre><code>//AABB Collision function\nvar AABBCollision = function(px, py, pw, ph, bx, by, bw, bh)\n{\n    return px &lt; bx+bw &amp;&amp; py &lt; by+bh &amp;&amp; bx &lt; px+pw &amp;&amp; by &lt; py+ph;\n}\n\n//if the ball has -ve velocity, it's hit by AI paddle and it's the player's turn\n//if the ball has +ve velocity, it's hit by player paddle and it's the AI's turn\nvar paddle = this.velocity.x &lt; 0 ? player : ai;\n\nif(AABBCollision(paddle.x, paddle.y, paddle.width, paddle.height, this.x, this.y, this.side, this.side))\n{\n    this.x = (paddle == player ? player.x+player.width : ai.x - this.side);\n    var n = (this.y+this.side - paddle.y)/(paddle.height+this.side);\n    var phi = 0.25 * pi * (2 * n - 1);\n    var dir = (paddle == player ? 1 : -1);\n\n    var impact = Math.abs(phi) &gt; 0.2 * pi ? 1.5 : 1;\n\n    this.velocity.x = impact * dir * this.speed * Math.cos(phi);\n    this.velocity.y = impact * this.speed * Math.sin(phi);\n}\n</code></pre>\n\n<p>The game was built using HTML5 Canvas and Javascript, so please feel free to read the source code to understand the logic of the game.</p>\n\n<h2>What's next?</h2>\n\n<p>Building this game was fun as I built a simple AI and implemented a better collision detection algorithm. In my first post of this series, I had mentioned that I was working on Tetris and honestly, I finished building that game today as I didn't find the time to work on it. Now that it's ready, hence, my next post will be about <strong><em>Tetris</em></strong>. </p>\n\n<p>Stay Tuned! </p>\n\n<h2>References</h2>\n\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Pong\">Pong (1972)</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Minimum_bounding_box#Axis-aligned_minimum_bounding_box\">Axis Aligned Bounding Collision</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Allan_Alcorn\">Allan Alcorn</a></li>\n</ul>\n", "index": 9}, {"section": "writings", "title": "Arcade Challenge 2: Breakout", "link": "writings/posts/arcade-challenge-2-breakout", "date": "July 22nd, 2017", "date_alt": "22.07.2017", "year": "2017", "date_raw": "2017-07-22", "slug": "arcade-challenge-2-breakout", "category": "Arcade Challenge", "categories": [{"title": "Arcade Challenge", "link": "/category/arcade-challenge/"}], "summary": "This is the second post of this month's personal challenge. I'll be talking about Breakout, it's history and game mechanics, in short.", "reading_time": "3 minutes read", "preview_image_url": "", "filename": "content/writings/08_2019_01_09_arcade-challenge-2-breakout.md", "status": "active", "content": "<script defer type=\"text/javascript\" src=\"/static/projects/breakout/js/breakout.js\"></script>\n\n<script defer type=\"text/javascript\" src=\"/static/projects/breakout/js/ball_collision.js\"></script>\n\n<figure>\n    <canvas style=\"border-radius: 0px;\" id=\"breakout_canvas\" width=\"500\" height=\"500\"></canvas>\n</figure>\n\n<p>Before you read more about this article, play with the above game. You can control the paddle using the mouse or left-right arrow keys. Press <kbd>P</kbd> to pause the game. Press <kbd>S</kbd> to resume and <kbd>R</kbd> to restart the game.</p>\n\n<p>This is part of the <a href=\"/posts/i-challenged-myself-to-build-4-arcade-games/\">Arcade Challenge</a> series. In the previous post, I built a snake game, <a href=\"/posts/arcade-challenge-1-snake-game/\">click here</a> if you've not read the article.</p>\n\n<h2>Background</h2>\n\n<p>Breakout is a single player game where you have to break a layer of bricks with a ball that travels across the screen (in this case, it's a canvas) that bounces off the walls of the screen. When the ball hits a brick, the ball bounces back and of course, the brick gets destroyed or disappears. If the ball touches the bottom of the screen, the game is over. In order to prevent this from happening, the player is given a movable paddle to bounce the ball upwards, which ensures the game continues.</p>\n\n<h2>History</h2>\n\n<p>Breakout was one of the most popular arcade games developed by <strong><em>Atari, Inc.</em></strong> Inspired by the 1972's Pong, the game was developed and designed by <a href=\"https://en.wikipedia.org/wiki/Nolan_Bushnell\">Nolan Bushnell</a>, <a href=\"https://en.wikipedia.org/wiki/Steve_Wozniak\">Steve Wozniak</a>, Steve Bristow using the hardware built for Pong against it's competitors who built clones of Pong.</p>\n\n<figure>\n    <img src=\"http://68.media.tumblr.com/15f5cfe691599a10ad9ca9cf33f89ff9/tumblr_ntykhyjQXI1qjotzlo1_1280.jpg\"/>\n    <figcaption>Atari's Video Pinball console system</figcaption>\n</figure>\n\n<p>Most notably, the late <strong><em>Steve Jobs</em></strong> was also involved with the development of Breakout as he was approached by Nolan Bushnell to design a prototype that required 150 to 170 computer chips. Jobs brought in Wozniak to work with along with him on building the prototype, who built a version of Pong using 30 computer chips and they both had spent days and nights working on it and finally built the prototype that had 44 computer chips.</p>\n\n<p>However, Wozniak's design wasn't approved by Atari, Inc as they found the design to be complicated and infeasible to manufacture, so they ended up making their own version of the hardware which contained around 100 computer chips.</p>\n\n<h2>Game mechanics</h2>\n\n<p>Unlike the previous post, the game mechanics of this game are quite simple to understand and it makes use of <a href=\"https://en.wikipedia.org/wiki/Two-dimensional_space\">2D Mathematics</a>.</p>\n\n<p>Using 2D Mathematics, I was able to program the ball-brick collision, movement and bounciness of the ball and the movement of the paddle (which can only move on the x-axis).</p>\n\n<h3>Collision Detection</h3>\n\n<p>To check for ball collision, the program must check if the ball has touched / collided with the wall, if so, then the ball's direction will be changed accordingly. The ball can only bounce off from the top, left and right side of the walls and the paddle, if it touches the bottom of the canvas, it's game over.</p>\n\n<p><strong>Ball Movement and Collision Detection:</strong></p>\n\n<p>If the distance between the ball radius and the wall's edge is the same, it will change the ball direction. This would allow a proper ball collision to bounce off the walls.</p>\n\n<figure>\n    <canvas style=\"border-radius: 0px;\" id=\"ball_collision_canvas\" width=\"500\" height=\"300\"></canvas>\n</figure>\n\n<p><strong>Code for Ball Movement and Collision Detection:</strong></p>\n\n<pre><code>$(document).ready(function(){\n    //Canvas stuff\n    var canvas = document.getElementById(\"ball_collision_canvas\");\n    var height = canvas.height;\n    var width = canvas.width;\n    var ctx = canvas.getContext(\"2d\");\n\n    //coordinates of the ball\n    var x = canvas.width / 2;\n    var y = canvas.height - 30;\n    var dir_x = 2;\n    var dir_y = 4;\n    var ball_r = 10;\n\n    //Draw a circle\n    function circle(x,y,r)\n    {\n        ctx.fillStyle = \"#FF6D6D\";\n        ctx.beginPath();\n        ctx.arc(x,y,r,0,Math.PI*2, true);\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    //Draw canvas\n    function draw()\n    {\n        ctx.clearRect(0, 0, width, height);\n        circle(x,y,ball_r);\n\n        /*\n            If the distance between the ball radius and the wall's edge is the same,\n            it will change the ball direction. This would allow a proper ball collision\n            to bounce off the walls.\n        */\n        if(x + dir_x &gt; width - ball_r || x + dir_x &lt; ball_r)\n        {\n            dir_x = -dir_x;\n        }\n\n        if(y + dir_y &gt; height - ball_r || y + dir_y &lt; ball_r)\n        {\n            dir_y = -dir_y;\n        }\n\n        x += dir_x;\n        y += dir_y;\n    }\n\n    setInterval(draw, 10);\n});\n</code></pre>\n\n<p>The game was built using HTML5 Canvas and Javascript, so please feel free to read the source code to understand the logic of the game.</p>\n\n<h2>What's next?</h2>\n\n<p>In my next post, I'll be talking about the third game that I built in this challenge, Pong. Well, that's it for today, hope you guys have found this post interesting and yes, have fun playing the game!</p>\n\n<p>Peace Out!</p>\n\n<h2>References</h2>\n\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Pong\">Pong</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Two-dimensional_space\">2D Dimensional Space</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Atari\">Atari, Inc</a></li>\n</ul>\n", "index": 8}, {"section": "writings", "title": "Arcade Challenge 1: Snake Game", "link": "writings/posts/arcade-challenge-1-snake-game", "date": "July 14th, 2017", "date_alt": "14.07.2017", "year": "2017", "date_raw": "2017-07-14", "slug": "arcade-challenge-1-snake-game", "category": "Arcade Challenge", "categories": [{"title": "Arcade Challenge", "link": "/category/arcade-challenge/"}], "summary": "This is the first post of this month's personal challenge. I'll be talking about Snake Game, it's history and game mechanics, in short.", "reading_time": "2 minutes read", "preview_image_url": "", "filename": "content/writings/07_2019_01_08_arcade-challenge-1-snake-game.md", "status": "active", "content": "<script defer type=\"text/javascript\" src=\"/static/projects/snake/js/snake.js\"></script>\n\n<figure>\n    <canvas style=\"border-radius: 5px;\" id=\"snake_canvas\" width=\"500\" height=\"500\"></canvas>\n</figure>\n\n<p>Before you read more about this article, play with the above game. You can control the snake using <kbd>W</kbd><kbd>A</kbd><kbd>S</kbd><kbd>D</kbd> or the <kbd>&larr;</kbd> <kbd>&uarr;</kbd> <kbd>&darr;</kbd> <kbd>&rarr;</kbd> keys. Orange block is for food, it'll increase your score. Yellow block is for poison, if eaten, it'll reduce your score. Press <kbd>Space</kbd> to pause the game. Press <kbd>P</kbd> to resume and <kbd>R</kbd> to restart the game. Oh and avoid hitting the white walls!</p>\n\n<h2>Background</h2>\n\n<p>Snake is a game of simple concept where the player manuevers the snake in all 4 straight directions (reverse movement is not possible i.e. UP, DOWN, LEFT, RIGHT only) to eat the fruit and as a result, the length of the snake increases, making the game difficult for the player. The player will have to prevent the snake to hit the walls or from eating the poison, which will decrease the snake's length, and also prevent it from hitting itself.</p>\n\n<h2>History</h2>\n\n<p>I remember playing this game, for the first time, on my father's monochrome <strong><em>Nokia 3310</em></strong> mobile phone (which can still break walls, I guess!) and every 90's kid I knew played this game a lot.</p>\n\n<figure>\n    <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/31/Nokia_3310_blue.jpg/320px-Nokia_3310_blue.jpg\"/>\n    <figcaption>Nokia 3310 (in case, if you've never heard about it!)</figcaption>\n</figure>\n\n<p>The game was published by <strong><em>Nokia</em></strong> and it was programmed by a Nokia Design Engineer named Taneli Armanto in 1997 for <strong><em>Nokia 6110</em></strong>. The original concept of this game was derived from an arcade game called <a href=\"https://en.wikipedia.org/wiki/Blockade_(video_game)\">Blockade</a>, which was published in 1976 by <strong><em>Gremlin Industries</em></strong>. Ever since, there have been so many variations and clones of this game, in fact, there are over 300+ variations of this game for iOS devices alone.</p>\n\n<h2>Game mechanics</h2>\n\n<p>The game makes use of <a href=\"https://en.wikipedia.org/wiki/Linked_list\">Linked Lists</a>, which is a simple and dynamic data structure used to store and control the movement of the snake. Below is the pseudocode for each of the game's behaviour:</p>\n\n<p><strong>Movement of the Snake:</strong></p>\n\n<pre><code>for node in the list (always starts from the end of the list):\n    if node is not equal to head node:\n        shift the snake's position to node+1 (by making it closer to the snake)\n    set head node to new position\nendfor\n</code></pre>\n\n<p><strong>Length of the Snake:</strong></p>\n\n<pre><code>nx: current x coordinate of the snake head\nny: current y coordinate of the snake head\n\nfx: x coordinate of the food\nfy: y coordinate of the food\n\npx: x coordinate of the poison\npy: y coordinate of the poison\n\nif [nx] matches with [fx] and if [ny] matches with [fy]:\n    push the new cell to the snake's tail node\n    shift the new cell from tail node to the head node\n    increment score + 1\n\nif [nx] matches with [px] and if [ny] matches with [py]:\n    pop the cell from the tail node\n    shift cell from tail node to head node\n    decrement life - 1\n</code></pre>\n\n<p><strong>Collision of the Snake:</strong></p>\n\n<pre><code>nx: current x coordinate of the snake head\nny: current y coordinate of the snake head\n\nsx: x coordinate of the snake cell\nsy: y coordinate of the snake cell\n\nwx: x coordinate of the wall cell\nwy: y coordinate of the wall cell\n\nfor cell in the wall array:\n    if [nx] matches with [wx] and if [ny] matches with [wy]:\n        display \"game over\" message\n\nfor cell in the snake list:\n    if [nx] matches with [sx] and if [ny] matches with [sy]:\n        display \"game over\" message\n</code></pre>\n\n<p>Oh yeah, please feel free to study the source code of this game in order to understand how this game was implemented on Javascript.</p>\n\n<h2>What's next?</h2>\n\n<p>In my next post, I'll be talking about, the second game that I built in this challenge, <strong><em>Breakout</em></strong>. I hope you've found this article interactive and interesting and yes, have fun playing this game! </p>\n\n<p>Adios Amigo!</p>\n\n<h2>References</h2>\n\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Snake_(video_game)\">Snake</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Nokia_3310\">Nokia 3310</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Blockade_(video_game)\">Blockade (1976)</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Linked_list\">Linked List</a></li>\n</ul>\n", "index": 7}, {"section": "writings", "title": "I challenged myself to build 4 arcade games!", "link": "writings/posts/i-challenged-myself-to-build-4-arcade-games", "date": "July 8th, 2017", "date_alt": "08.07.2017", "year": "2017", "date_raw": "2017-07-08", "slug": "i-challenged-myself-to-build-4-arcade-games", "category": "Personal Challenge", "categories": [{"title": "Personal Challenge", "link": "/category/personal-challenge/"}], "summary": "I challenged myself to build four arcade games during this month. Hope you'll enjoy reading this article.", "reading_time": "2 minutes read", "preview_image_url": "", "filename": "content/writings/06_2019_01_06_i-challenged-myself-to-build-4-arcade-games.md", "status": "active", "content": "<p>Alas! It has been a long time since my last blog post.</p>\n\n<p>Last month was the Holy Month of Ramadan, so I kept myself busy with my religious duties and it also kind of ruined my sleeping pattern, thus I was tired to post anything. Since I was pretty exhausted after that, I decided to take a week off from work to spend some time with my family and also thought of working on my side projects and then I realized that I need to set a personal challenge to get myself motivated for the month.</p>\n\n<h2>What's the challenge?</h2>\n\n<p>When I was building this blog, I had the intention of remaking arcade games and posting them over here for the visitors to come and play them! So since I had a week off from work, I challenged myself to build four arcade games this month and create a separate blog post for each game, where I would be talking about how it was built, it's history and it's game mechanics.</p>\n\n<p>These are the list of games that I had planned to build/already built during this month:</p>\n\n<ul>\n<li>Snake</li>\n<li>Breakout</li>\n<li>Pong</li>\n<li>Tetris</li>\n</ul>\n\n<h2>How did the challenge feel?</h2>\n\n<p>Honestly, it was really refreshing and felt like a mini-hackathon. I was able to learn new things about <strong><em>Game Programming</em></strong> and <strong><em>2D Mathematics</em></strong> and as a result, I have upgraded my knowledge on <strong><em>Javascript</em></strong> as well. Although I told myself that I would build all of these games in a month, during my time off, I was able to build everything except <strong><em>Tetris</em></strong> as I'm still working on it. </p>\n\n<h2>What's next?</h2>\n\n<p>I know this is a short post but I'm working on the content for each blog post, so that it doesn't feel rushed! Once I have posted all of them, I'd like to know your views on each of them and it would be also nice if you could suggest any arcade games that I could remake!</p>\n\n<p>Until next time, then!</p>\n", "index": 6}, {"section": "writings", "title": "Programming Productivity", "link": "writings/posts/programming-productivity", "date": "May 20th, 2017", "date_alt": "20.05.2017", "year": "2017", "date_raw": "2017-05-20", "slug": "programming-productivity", "category": "Essay", "categories": [{"title": "Essay", "link": "/category/essay/"}], "summary": "A blog post on how to become a productive, efficient and competent programmer.", "reading_time": "8 minutes read", "preview_image_url": "", "filename": "content/writings/05_2019_01_06_programming-productivity.md", "status": "active", "content": "<p>Have you ever felt unproductive, bored, burnt out or stuck in a block? Yes, I've gone through that during my earlier days of programming and sometimes, even now, especially when working on large projects (side projects or work related).</p>\n\n<h2>How did I overcome it?</h2>\n\n<p>As time passed by, one day, I asked myself: <strong><em>\"How do I become productive?\"</em></strong> and <strong><em>\"How do I overcome this negative barrier and become much more competent and efficient at solving problems?\"</em></strong>. If you've ever questioned yourself about this, then this blog post is for you.</p>\n\n<p>I have developed and learnt some strategies and techniques to overcome this negative barrier such as:</p>\n\n<ul>\n<li><a href=\"#tip1\">Design - Code - Test - Repeat</a></li>\n<li><a href=\"#tip2\">Write clean code and refactor it</a></li>\n<li><a href=\"#tip3\">DRY i.e. Don't Repeat Yourself</a></li>\n<li><a href=\"#tip4\">Prioritize your tasks</a></li>\n<li><a href=\"#tip5\">Use the right tools for your project</a></li>\n<li><a href=\"#tip6\">Read other people's code</a></li>\n<li><a href=\"#tip7\">Work on side projects</a></li>\n<li><a href=\"#tip8\">Read more books</a></li>\n</ul>\n\n<h3><a href=\"tip1\"></a> Design - Code - Test - Repeat</h3>\n\n<p>During my earlier days of programming, I would give very less thought to the design or the structure of the project and dive straight into coding it. Thus, I produced a lot of errors, dirty code and a buggy mess. It would be okay for a small project but what if you are asked to build a software that is used in the Wall Street Stock Exchange to monitor real-time trading which involves 99.9% of accuracy and correctness and handles millions of transactions per second? Yeah, that's not going to turn out really well for you and your client.</p>\n\n<p><strong>Suggestions:</strong></p>\n\n<ul>\n<li>Gather your requirements and analyze them</li>\n<li>Design it using a pen and paper and brainstorm different strategies on how to solve the problem</li>\n<li>Build a prototype</li>\n<li>Try to make your program fail earlier as it is much easier to fix than later</li>\n<li>Document your work</li>\n<li>Repeat</li>\n</ul>\n\n<p>It's like building a house, if there's no requirement analysis and design before building the project, you're more likely going to end up with a overly coupled and high cohesion software that also means your code will be harder to debug, harder to write and add new features and put it on production and very unlikely, it wouldn't perform really well.</p>\n\n<h3><a id=\"tip2\"></a> Write clean code and refactor it</h3>\n\n<p>We have all been there, when we are trying to figure out:</p>\n\n<ul>\n<li>\"What does this method do?\"</li>\n<li>Why you wrote a huge class with methods that contain 100+ lines of code and that is hard to debug or understand it's original logic?</li>\n<li>That variable name that doesn't make any sense at all.</li>\n</ul>\n\n<p><strong>Suggestions:</strong></p>\n\n<ul>\n<li>Write clean and short blocks of code</li>\n<li>Write meaningful variable names, methods and classes</li>\n<li>Follow a Singleton Pattern</li>\n<li>Try to write methods that are less than 100 lines of code</li>\n</ul>\n\n<p>These suggestions should help you as our minds can't really handle a lot of complex logic especially if you have a piece of code that's unneccessary long and complex which could be harder to debug. Good luck on that!</p>\n\n<h3><a id=\"tip3\"></a> DRY i.e. Don't Repeat Yourself</h3>\n\n<p>Whenever you have tasks that are too mundane, repetitive or time consuming, consider automating that process which could save your time and help you focus your energy on solving the actual problem.</p>\n\n<p><strong>Examples:</strong></p>\n\n<ul>\n<li>You could build a Code Generator to speed up your process of building classes, objects, variables, methods and so on.</li>\n<li>You could write a script to create your project file structure with all the necessary folders and boilerplate code using Powershell (Windows) or Bash (Linux).</li>\n<li>You could build a dynamic webpage to display different content instead of building hundreds of static pages which might have the same way of displaying content as a dynamic one.</li>\n<li>You could write an automated test to look out for bugs and errors in your code and fix them quickly.</li>\n</ul>\n\n<p>There are so many ways to automate your work and all you have to do is look for a specific pattern, especially if it's repetitive, in the problem that you are trying to solve..</p>\n\n<h3><a id=\"tip4\"></a> Prioritize your tasks</h3>\n\n<p>We all need to prioritze our tasks in order to feel more productive every day.</p>\n\n<p><strong>Suggestions:</strong></p>\n\n<ul>\n<li>Keep a checklist and keep track of your tasks for the day.</li>\n<li>Solve problems that you feel is the most important as majority of the time is usually spent on solving the wrong problems.</li>\n<li>Try to refrain from multitasking as it could be inefficient.</li>\n<li>Step away from the keyboard and take a break every few minutes.</li>\n</ul>\n\n<p>But please use these tips at work, don't ever take work to home, unless it's really urgent, as it could be a sign of bad management skills and which means you might need to restrategize the way you work in order to be more efficient.</p>\n\n<h3><a id=\"tip5\"></a> Use the right tools for your project</h3>\n\n<p>Today, due to the proliferation of various technologies, there are so many tools out there but it can get confusing to choose the right one, so choose the tools that you feel most comfortable with and master it. I know that there are a bunch of programmers who'd debate VIM over Emacs, Microsoft Visual Studio over NetBeans, MySQL over NoSQL or C++ over Javascript but does this mean that one of them is better than the other? </p>\n\n<p>No, it doesn't even matter because each of them has it's own pros and cons and is used for specific purposes or tasks but it is you who has to choose the kind of tools that you would like to have at your disposal.</p>\n\n<h3><a id=\"tip6\"></a> Read other people's code</h3>\n\n<p>Seriously, it's one of the best ways to learn. As you read code, you might encounter:</p>\n\n<ul>\n<li>Different programming patterns</li>\n<li>New libraries or APIs</li>\n<li>New programming syntax or techniques</li>\n</ul>\n\n<p>Some of those encounters might be new or even unheard of, research about them using Google and try to implement it in one of your projects (not on your work-related projects).</p>\n\n<p>Reading code written by other programmers is very important as it will be helpful with code reviews, debugging and working on any open source project(s).</p>\n\n<h3><a id=\"tip7\"></a> Work on side projects</h3>\n\n<p>To some extent, the projects you work on during office hours might not keep you too busy or challenge you enough, so instead, you'll have to spend some time working on side projects.</p>\n\n<p>Now, for some people, they would enjoy their weekend and stay away from code after a long week of programming until next Sunday, I totally agree and yes it's fine to take a break as most of us might not have the luxury of free time but for those who do, by working on side projects, it doesn't necessarily mean that you should spend a lot of time on it, you can work on them for about 2-3 hours a week.</p>\n\n<p><strong>Suggestions:</strong></p>\n\n<ul>\n<li>You could learn how to use that new tool, library, API</li>\n<li>Build a small game</li>\n<li>Implement an existing algorithm</li>\n<li>Solve a math equation (for those who love math)</li>\n<li>Study on how to use Regular Expressions (very useful)</li>\n<li>Learn and experiment a new programming language or technique</li>\n</ul>\n\n<p>By working on side projects, you'll be adding new skills to your existing skillset and that could help improve your career.</p>\n\n<h3><a id=\"tip8\"></a> Read more books</h3>\n\n<p>Yes, you can find a lot of learning material in the form of tutorials, YouTube videos and online courses but nothing beats reading a book that is written by a good yet experienced developer as the author would tend to go deep and give a lot of insights as to why he/she chose to solve a problem in a specific/particular manner.</p>\n\n<p><strong>Recommended books:</strong></p>\n\n<ul>\n<li><a href=\"https://www.amazon.com/Passionate-Programmer-Remarkable-Development-Pragmatic/dp/1934356344\">The Passionate Programmer: Creating a Remarkable Career in Software Development</a></li>\n<li><a href=\"https://www.amazon.com/Code-Complete-Practical-Handbook-Construction/dp/0735619670\">Code Complete: A Practical Handbook of Software Construction</a></li>\n<li><a href=\"https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882\">Clean Code: A Handbook of Agile Software Craftsmanship</a></li>\n<li><a href=\"https://www.amazon.com/Design-UNIX-Operating-System/dp/0132017997\">The Design of the UNIX Operating System</a></li>\n</ul>\n\n<p>Also, it talks about the journey of the developer as to how they succeeded, made mistakes and learnt from it during their career.</p>\n\n<h2>What's next?</h2>\n\n<p>Hopefully, these tips and suggestions should have given you an idea on how to make yourself feel more productive, efficient and competent at programming.</p>\n\n<p>Happy productivity everyone!</p>\n\n<h2>Extras</h2>\n\n<ul>\n<li><a href=\"http://wiki.c2.com/?MakeItWorkMakeItRightMakeItFast\">Make It Work, Make It Right, Make It Fast</a></li>\n<li><a href=\"http://wiki.c2.com/?DesignBeforeCoding\">Design Before Coding</a></li>\n<li><a href=\"http://wiki.c2.com/?TestFirstDesign\">Test First Design</a></li>\n</ul>\n", "index": 5}, {"section": "writings", "title": "Let's Cipher This: Monoalphabetic Substitution Cipher", "link": "writings/posts/lets-cipher-this-monoalphabetic-substitution-cipher", "date": "May 13th, 2017", "date_alt": "13.05.2017", "year": "2017", "date_raw": "2017-05-13", "slug": "lets-cipher-this-monoalphabetic-substitution-cipher", "category": "Cryptography", "categories": [{"title": "Cryptography", "link": "/category/cryptography/"}], "summary": "An article about monoalphabetic substitution ciphers, it's applications and variations.", "reading_time": "7 minutes read", "preview_image_url": "", "filename": "content/writings/04_2019_01_06_lets-cipher-this-monoalphabetic-substitution-cipher.md", "status": "active", "content": "<p><link rel=\"stylesheet\" href=\"/static/projects/cipher/css/style.css\" type=\"text/css\"/></p>\n\n<script defer type=\"text/javascript\" src=\"/static/projects/cipher/js/script.js\"></script>\n\n<p>This is the first post in the <strong><em>\"Let's Cipher This!\"</em></strong> series and in this post, I'll be talking about the various versions of <a href=\"https://en.wikipedia.org/wiki/Substitution_cipher\">Monoalphabetic Substitution Ciphers</a> such as:</p>\n\n<ul>\n<li><a href=\"#atbash\">Atbash Cipher</a></li>\n<li><a href=\"#caesar\">Caesar Cipher</a></li>\n<li><a href=\"#affine\">Affine Cipher</a></li>\n</ul>\n\n<p>This post will be a bit longer than my previous ones as I had been occupied with a lot of work and other commitments. But I do feel the need to post something atleast once a month with good content, as it keeps me productive (especially during weekends), so hope you'll find this information useful!</p>\n\n<h2>What's a Monoalphabetic Substitution Cipher?</h2>\n\n<p>It's a type of substitution cipher that is used to replace each letter of a plaintext with another letter using a fixed number or replacement structure, which makes up the ciphertext. There are many variations of these, but today, I have decided to talk about a few that I have mentioned, in the beginning.</p>\n\n<hr />\n\n<h2><a id=\"atbash\"></a> Atbash Cipher</h2>\n\n<div id=\"atbash_cipher_div\" class=\"box\"></div>\n\n<p>Atbash Cipher is a monoalphabetic substitution cipher which is used, originally, to encode Hebrew Alphabets but when modified, it can also be used with any alphabets.</p>\n\n<h3>Algorithm</h3>\n\n<p>The algorithm is pretty straight-forward, if you have a plaintext of <strong><em>\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"</em></strong>, then the ciphertext would be the exact reverse of the plaintext: <strong><em>\"ZYXWVUTSRQPONMLKJIHGFEDCBA\"</em></strong>.</p>\n\n<pre><code>original: ABCDEFGHIJKLMNOPQRSTUVWXYZ\nreversed: ZYXWVUTSRQPONMLKJIHGFEDCBA\n</code></pre>\n\n<h3>Encryption</h3>\n\n<p>Encrypting the message is very simple, you just have to replace every letter of the plaintext with the ciphertext, for example, <strong><em>'A'</em></strong> would become <strong><em>'Z'</em></strong> and <strong><em>'T'</em></strong> would become <strong><em>'G'</em></strong> and the whole message would be encrypted in this manner.</p>\n\n<pre><code>plaintext:  ATTACKONTITAN\nciphertext: ZGGZXPLMGRGZM\n</code></pre>\n\n<h3>Decryption</h3>\n\n<p>Decrypting the Atbash Cipher is the opposite of it's encryption process, for example, <strong><em>'Z'</em></strong> would become <strong><em>'A'</em></strong> and <strong><em>'G'</em></strong> would become <strong><em>'T'</em></strong> and the whole message would be decrypted in this manner.</p>\n\n<pre><code>ciphertext: ZGGZXPLMGRGZM\nplaintext:  ATTACKONTITAN\n</code></pre>\n\n<h3>Cryptanalysis</h3>\n\n<p>As you might have understood, this is not a secure cipher and in fact, can be broken very easily, assuming, that the ciphertext has been enciphered using Substitution Cipher or by determining the key by trying out each and every letter i.e. using hill-climbing technique.</p>\n\n<p>However, it can be a bit secure if you add some numbers and punctuation to the plaintext alphabets:</p>\n\n<pre><code>original:  .,?!ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\nreversed: 9876543210ZYXWVUTSRQPONMLKJIHGFEDCBA!?,.\n</code></pre>\n\n<hr />\n\n<h2><a id=\"caesar\"></a> Caesar Cipher</h2>\n\n<div id=\"caesar_cipher_div\" class=\"box\"></div>\n\n<p>Caesar Cipher is one of the most widely known and simplest substitution ciphers (you probably heard about it or were introduced to it in one of your earlier computer science classes by your ingenious professor!), in which each letter from the plaintext is replaced with another letter that is determined by a fixed number of positions or <strong><em>\"shifts\"</em></strong>. This is named after <a href=\"https://en.wikipedia.org/wiki/Julius_Caesar\">Julius Caesar</a>, who used it to send private messages that are related to military intelligence with a shift of 3. This is also used in modern <a href=\"https://en.wikipedia.org/wiki/ROT13\">ROT-13</a> system with a shift of 13.</p>\n\n<h3>Algorithm</h3>\n\n<p>The ciphertext is made by aligning two alphabets, so in this case, I will be using a shift of 15 i.e. letter <strong><em>'A'</em></strong> would be letter <strong><em>'P'</em></strong> and letter <strong><em>'B'</em></strong> would be letter <strong><em>'Q'</em></strong> and so on.</p>\n\n<pre><code>plaintext:  ABCDEFGHIJKLMNOPQRSTUVWXYZ\nciphertext: PQRSTUVWXYZABCDEFGHIJKLMNO\n</code></pre>\n\n<h3>Encryption</h3>\n\n<p>The encryption process is represented using <a href=\"https://en.wikipedia.org/wiki/Modular_arithmetic\">Modular Artihmetic</a> by transforming the letters into it's positions and the mathematical formula is:</p>\n\n<pre><code>E(x) = (x + n) mod 26\n</code></pre>\n\n<p>By using this formula, we can encrypt our plaintext with a shift of 15:</p>\n\n<pre><code>shifts(n): 15\n\nplaintext:               H  E  L  L  O  W  O  R  L  D\nintegers(x):             7  4  11 11 14 22 14 17 11 3\nE(x) = (x + 15) % 26:    22 19 0  0  3  11 3  6  0  18\nciphertext:              W  T  A  A  D  L  D  G  A  S\n</code></pre>\n\n<h3>Decryption</h3>\n\n<p>The decryption, again, is done is reverse with a shift of 15 using Modular Arithmetic i.e. letter <strong><em>'P'</em></strong> would be letter <strong><em>'A'</em></strong> and letter <strong><em>'Q'</em></strong> would be letter <strong><em>'B'</em></strong> and so on. The mathematical formula for deciphering the text is:</p>\n\n<pre><code>D(x) = (x - n) mod 26\n</code></pre>\n\n<p>We can use this formula to decrypt the ciphertext:</p>\n\n<pre><code>shifts(n): 15\n\nciphertext:              W  T  A  A  D  L  D  G  A  S    \nintegers(x):             22 19 0  0  3  11 3  6  0  18\nD(x) = (x - 15) % 26:    7  4  11 11 14 22 14 17 11 3\nplaintext:               H  E  L  L  O  W  O  R  L  D\n</code></pre>\n\n<h3>Cryptanalysis</h3>\n\n<p>Caesar Cipher is insecure and can be easily broken in two scenarios:</p>\n\n<ul>\n<li>If the cryptanalyst deduces that it's a Caesar Cipher but doesn't know the shift key.</li>\n<li>If the cryptanalyst figures out that some sort of substitution cipher is used but doesn't know that it's Caesar Cipher.</li>\n</ul>\n\n<p>In the first scenario, it's more straightforward as there are only a limited number of possible shifts (e.g. 26 in English) and can use a <a href=\"https://en.wikipedia.org/wiki/Brute-force_attack\">Brute Force</a> atack to crack the ciphertext. For the second one, it can be broken using techniques like <a href=\"https://en.wikipedia.org/wiki/Frequency_analysis\">Frequency analysis</a> or looking for patterns.</p>\n\n<hr />\n\n<h2><a id=\"affine\"></a> Affine Cipher</h2>\n\n<div id=\"affine_cipher_div\" class=\"box\"></div>\n\n<p>Affine Cipher is a type of monoalphabetic substitution cipher but it's different compared to Atbash Cipher but similar to Caesar Cipher, where each alphabet is mapped to it's numerical equivalent and then it is encrypted using a simple mathematical function.</p>\n\n<h3>Algorithm</h3>\n\n<p>The letters are first mapped to the integers in the range of <strong><em>0, 1, ..., m-1(m = the length of the alphabets used)</em></strong>, which then uses a <a href=\"https://en.wikipedia.org/wiki/Modular_arithmetic\">Modular Arithmetic</a> method to convert the integers to it's corresponding letter.</p>\n\n<pre><code>alphabets: A  B  C  D  E  F  G  H  I  J  K  L  M  N  O  P  Q  R  S  T  U  V  W  X  Y  Z\nintegers:  0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n</code></pre>\n\n<h3>Encryption</h3>\n\n<p>The mathematical formula for encrytion is:</p>\n\n<pre><code>E(x) = (ax + b) mod m    \n</code></pre>\n\n<p>In this formula, <strong><em>a</em></strong> and <strong><em>b</em></strong> are the keys of the cipher and <strong><em>m</em></strong> is the size of the alphabet. The key <strong><em>a</em></strong> must be chosen in such a way that <strong><em>a</em></strong> and <strong><em>m</em></strong> are <a href=\"https://en.wikipedia.org/wiki/Coprime_integers\">coprime</a> i.e. \"<strong><em>a</em></strong> should not have any common factors with <strong><em>m</em></strong>.\"</p>\n\n<h3>Decryption</h3>\n\n<p>Unlike the encryption formula, the decryption process of the ciphertext is performed inversely to retrieve the plaintext:</p>\n\n<pre><code>D(x) = c(y - b) mod m\n</code></pre>\n\n<p>In this formula, <strong><em>c</em></strong> is the <a href=\"https://en.wikipedia.org/wiki/Modular_multiplicative_inverse\">Modular Multiplicative Inverse</a> of <strong><em>a</em></strong>. In order to find the multiplicative inverse of <strong><em>a</em></strong>, you need to find a number <strong><em>x</em></strong> in such a way that it satisfies the following equation:</p>\n\n<pre><code>ax = 1 (mod m)    \n</code></pre>\n\n<h3>Explanation</h3>\n\n<p>Let's say you want to encrypt a plaintext that says \"HELLOWORLD\" with <strong><em>a = 5</em></strong> and <strong><em>b = 8</em></strong>. The reason I chose \"5\" for <strong><em>a</em></strong> is because it has to be relatively prime with 26.</p>\n\n<pre><code>plaintext:    H  E  L  L  O  W  O  R  L  D\nintegers(x):  7  4  11 11 14 22 14 17 11 3\n</code></pre>\n\n<p>Now, you have to take each value of x and convert it to a different letter using the encryption formula mentioned above:</p>\n\n<pre><code>key a = 5\nkey b = 8\n\nplaintext:               H  E  L  L  O  W  O  R  L  D\nintegers(x):             7  4  11 11 14 22 14 17 11 3\nE(x) = 5(x) + 8 % 26:    17 2  11 11 0  14 0  15 11 23\nciphertext:              R  C  L  L  A  O  A  P  L  X        \n</code></pre>\n\n<p>Okay, let's decrypt the ciphertext that says \"RCLLAOAPLX\" to \"HELLOWORLD\" using the same keys <strong><em>(a = 5, b = 8)</em></strong>:</p>\n\n<pre><code>ciphertext:   R  C  L  L  A  O  A  P  L  X    \nintegers(y):  17 2  11 11 0  14 0  15 11 23       \n</code></pre>\n\n<p>Before we proceed, we need to find the modular inverse of <strong><em>a</em></strong>, in this case, it would be 21. You can find the modular inverse using the <a href=\"https://en.wikipedia.org/wiki/Extended_Euclidean_algorithm\">Extended Euclidean</a> algorithm, which uses <a href=\"https://en.wikipedia.org/wiki/Greatest_common_divisor\">Greatest Common Divisor</a> <strong><em>(GCD)</em></strong> of both <strong><em>a</em></strong> and <strong><em>m</em></strong>. If <strong><em>a</em></strong> has a modular inverse modulo <strong><em>m</em></strong>, then the GCD must be 1.</p>\n\n<p>Once you find <strong><em>a</em></strong>, we can start decrypting the ciphertext:</p>\n\n<pre><code>key a = 5\nkey b = 8\n\nciphertext:              R  C  L  L  A  O  A  P  L  X    \nintegers(y):             17 2  11 11 0  14 0  15 11 23\nD(y) = a(y - 8) % 26:    7  4  11 11 14 22 14 17 11 3\nplaintext:               H  E  L  L  O  W  O  R  L  D\n</code></pre>\n\n<h3>Cryptanalysis</h3>\n\n<p>Affine Cipher is known to be a very insecure cipher as it's just another version of Caesar Cipher, which is due to it being a monoalphabetic substitution cipher. If a cryptanalyst is able to discover 2 or more common characters using techniques like <a href=\"https://en.wikipedia.org/wiki/Brute-force_attack\">Brute Force</a>, <a href=\"https://en.wikipedia.org/wiki/Frequency_analysis\">Frequency Analysis</a> or maybe even guessing, the key can then be obtained via solving a <a href=\"https://en.wikipedia.org/wiki/Simultaneous_equations\">Simultaneous Equation</a>, since <strong><em>a</em></strong> and <strong><em>m</em></strong> are coprime, it can discard any wrong keys easily in an automated program.</p>\n\n<hr />\n\n<h2>What's next?</h2>\n\n<p>So I hope you have understood what's a <a href=\"https://en.wikipedia.org/wiki/Substitution_cipher\">monoalphabetic substitution</a> cipher and it's applications and variations. You can play around with the encryption tools above or experiment with your own messages to see how it works and prank your friends with it! </p>\n\n<h2>References</h2>\n\n<ul>\n<li><a href=\"http://practicalcryptography.com/ciphers/caesar-cipher\">Practical Cryptography: Caesar Cipher</a></li>\n<li><a href=\"http://practicalcryptography.com/ciphers/atbash-cipher-cipher\">Practical Cryptography: Atbash Cipher</a></li>\n<li><a href=\"http://practicalcryptography.com/ciphers/affine-cipher\">Practical Cryptography: Affine Cipher</a></li>\n</ul>\n", "index": 4}, {"section": "writings", "title": "Let's Cipher This: A series about Cryptography", "link": "writings/posts/lets-cipher-this-a-series-about-cryptography", "date": "May 5th, 2017", "date_alt": "05.05.2017", "year": "2017", "date_raw": "2017-05-05", "slug": "lets-cipher-this-a-series-about-cryptography", "category": "Cryptography", "categories": [{"title": "Cryptography", "link": "/category/cryptography/"}], "summary": "A blog post about codes and ciphers.", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/writings/03_2019_01_05_lets-cipher-this-a-series-about-cryptography.md", "status": "active", "content": "<p>During this week, I was thinking about writing a very long blog post about Cryptography but then it would be too long for the readers that it might get them to feel bored. So, for starters, I thought about making a series of short blog posts called <strong><em>\"Let's Cipher This\"</em></strong> that would focus on the areas of <a href=\"https://en.wikipedia.org/wiki/Cryptography\">Cryptography</a>.</p>\n\n<h2>What is it about?</h2>\n\n<p>Well, the aim of this series is that I want to talk about Codes (I meant secret <strong><em>\"codes\"</em></strong>) and <a href=\"https://en.wikipedia.org/wiki/Cipher\">Ciphers</a>, such as:</p>\n\n<ul>\n<li>How they both work</li>\n<li>How can they both be used to encrypt/decrypt messages</li>\n<li>How to use different methods/strategies to break intercepted code</li>\n</ul>\n\n<h2>What's next?</h2>\n\n<p>I know that there are a lot of simple and complex ciphers/crypto algorithmic techniques out there and I wanted to make each post as informative and interactive as possible i.e. by giving a detailed description about the cipher/technique, it's history, how it works and it's implementation, which can also be used as a tool for encrypting/decrypting your own messages.</p>\n\n<p>The series is going to be a <strong><em>\"Work in Progress\"</em></strong>, so there won't be an ending to it as the field of the Cryptography is quite vast, deep and complex. I will be updating this series as often as I can, so watch out for new posts that are related to it!</p>\n", "index": 3}, {"section": "writings", "title": "I built a Sudoku Solver!", "link": "writings/posts/i-built-a-sudoku-solver", "date": "April 29th, 2017", "date_alt": "29.04.2017", "year": "2017", "date_raw": "2017-04-29", "slug": "i-built-a-sudoku-solver", "category": "Algorithms + Data Structures", "categories": [{"title": "Algorithms", "link": "/category/algorithms/"}, {"title": "Data Structures", "link": "/category/data-structures/"}], "summary": "I built a sudoku solver using Javascript by implementing the Exhaustive Recursion and Backtracking algorithms.", "reading_time": "4 minutes read", "preview_image_url": "", "filename": "content/writings/02_2019_01_05_i-built-a-sudoku-solver.md", "status": "active", "content": "<p><link rel=\"stylesheet\" href=\"/static/projects/sudoku/css/style.css\" type=\"text/css\"/></p>\n\n<script defer type=\"text/javascript\" src=\"/static/projects/sudoku/js/script.js\"></script>\n\n<figure>\n    <div id=\"sudokusolver\"></div>\n</figure>\n\n<p>Before you read about this article, try playing the Sudoku Solver above. You can only insert numbers ranging from 1 to 9 in any empty cell. Press <kbd>Random Level</kbd> to generate a random sudoku puzzle. Made a mistake? Press <kbd>Reset</kbd> to clear the board. To test the algorithm, Press <kbd>Solve</kbd> to complete the entire puzzle.</p>\n\n<p>As for the source code, you can view it in my <a href=\"https://www.github.com/megacolorboy\">GitHub repository</a> or can be found near the end of this article.</p>\n\n<h2>What is Sudoku?</h2>\n\n<p>Sudoku stems from the two Japanese words: \"Su\" and \"doku\", when translated to English, it means \"single numbers only\". Although, many people feel that Sudoku was invented by the Japanese, it was actually invented by an American named <a href=\"https://en.wikipedia.org/wiki/Howard_Garns\">Howard Garns</a> in 1979 under the name \"Number Place\" but died in 1989 before a Japanese publisher named <a href=\"https://en.wikipedia.org/wiki/Nikoli_(publisher)\">Nikoli</a> made it popular, renamed it as \"Sudoku\" and which of course, became mainstream in 1986.</p>\n\n<h2>What is it about?</h2>\n\n<p>Sudoku is a logic-based, combinatorial, 9x9 number grid puzzle. The puzzles are usually a partially completed grid, thus allows the puzzle solver to come up with a single solution to the puzzle. The objective of this game is to fill the empty spaces in the partially completed 9x9 grid in such a way that each row, column and 3x3 subgrids (that compose the grid) contains all digits from 1 to 9.</p>\n\n<h2>Why did I build it?</h2>\n\n<p>Well, one day, I downloaded a Sudoku game on my iPhone and I got hooked to it instantly. I would play the game, usually, during metro rides to my university or any long trips to not make myself feel bored. So one day, I thought <strong><em>\"What if I built a sudoku solver and see if it could solve all the puzzles from the game?\"</em></strong>, which made me even more curious to see how a computer would do it.</p>\n\n<h2>Implementation</h2>\n\n<p>Okay, I know this is the part that you must be waiting for: <strong><em>\"How to implement this?\"</em></strong>. As I was doing my research on how to implement it, I came across two algorithmic techniques:</p>\n\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Recursion_(computer_science)\">Recursion</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Backtracking\">Backtracking</a></li>\n</ul>\n\n<h3>Recursion</h3>\n\n<p>Recursion is an algorithmic technique used for breaking down larger problems into smaller instances of the same problem. This is also known as <a href=\"https://en.wikipedia.org/wiki/Divide_and_conquer_algorithm\">Divide-and-Conquer</a> method. This is usually used in binary search, reversing a file, generating large Fibonacci numbers and the list could go on.</p>\n\n<h3>Backtracking</h3>\n\n<p>Backtracking is an algorithmic technique used for searching every possible combination in order to solve a problem in an optimized way. You could be familiar with this technique in popular problems like Chess, the 8 Queen Puzzle or Crossword solvers.</p>\n\n<h3>Explanation</h3>\n\n<p>Imagine, you're playing chess with a friend and you've made a silly move, which prompts you to ask your friend: <em>\"Hey, I made a mistake! Can I go back to my old move?\"</em>, your friend (hopefully, a merciful one) would allow you to return back to your old move. So in this case, you'll return back to your old position and begin to restrategize your plans on how to take down the next pawn or maybe finally hatch your plot to trap your opponent's King (you evil person). If it fails, you can ask again but I don't think your friend would be dumb enough to give you another chance!</p>\n\n<p><strong>Here's a pseudocode on how this strategy would work:</strong></p>\n\n<pre><code>Find [row,col] of an unassigned cell\nIf there is none, then return true\n\nFor digits from 1 to 9\n    If there is no conflict for digit at [row,col]\n        Assign digit to [row,col] and recursively try to fill in the rest of the grid\n        If this recursion is successful, return true\n        Otherwise, remove this digit and try another one\n    If all digits have been tried for this cell and nothing worked out\n        return false, trigger backtracking and try again\n</code></pre>\n\n<p><strong>Javascript implementation:</strong></p>\n\n<pre><code>//Sudoku solver \nfunction solveSudoku(grid, row, col) {\n    var cell = findUnassignedLocation(grid, row, col);\n    row = cell[0];\n    col = cell[1];\n\n    // base case: if there's no empty cell  \n    if (row == -1) {\n        return true;\n    }\n\n    for (var num = 1; num &lt;= 9; num++) {\n\n        if (noConflicts(grid, row, col, num)) {   \n            grid[row][col] = num;\n\n            if (solveSudoku(grid, row, col)) {                \n                return true;\n            }\n\n            // mark cell as empty (with 0)    \n            grid[row][col] = 0;\n        }\n    }\n\n    // trigger back tracking\n    return false;\n}\n\n//Find an empty cell\nfunction findUnassignedLocation(grid, row, col) {\n    var done = false;\n    var res = [-1, -1];\n\n    while (!done) {\n        if (row == 9) {\n            done = true;\n        }\n        else {\n            if (grid[row][col] == 0) {\n                res[0] = row;\n                res[1] = col;\n                done = true;\n            }\n            else {\n                if (col &lt; 8) {\n                    col++;\n                }\n                else {\n                    row++;\n                    col = 0;\n                }\n            }\n        }\n    }\n\n    return res;\n}\n\n//Check if there are any conflicts in row, column or 3x3 subgrid\nfunction noConflicts(grid, row, col, num) {\n    return isRowOk(grid, row, num) &amp;&amp; isColOk(grid, col, num) &amp;&amp; isBoxOk(grid, row, col, num);\n}\n\n//Check if this number is valid in this row\nfunction isRowOk(grid, row, num) {\n    for (var col = 0; col &lt; 9; col++)\n        if (grid[row][col] == num)\n            return false;\n\n    return true;\n}\n\n//Check if this number is valid in this column\nfunction isColOk(grid, col, num) {\n    for (var row = 0; row &lt; 9; row++)\n    if (grid[row][col] == num)\n        return false;\n\n    return true;    \n}\n\n//check if this number is valid in 3x3 subgrid\nfunction isBoxOk(grid, row, col, num) {\n    row = Math.floor(row / 3) * 3;\n    col = Math.floor(col / 3) * 3;\n\n    for (var r = 0; r &lt; 3; r++)\n        for (var c = 0; c &lt; 3; c++)\n            if (grid[row + r][col + c] == num)\n                return false;\n\n    return true;\n}\n</code></pre>\n\n<h2>What's next?</h2>\n\n<p>So now that you have understood the rough concept of how it works, combining and applying these two techniques in a Sudoku puzzle i.e. trying out every possible number to fill an empty square in the 9x9 grid would allow the computer to solve Sudoku puzzles more efficiently and quickly than using a plain <a href=\"https://en.wikipedia.org/wiki/Brute-force_search\">Brute Force</a> technique on puzzle that has around 4 x 1038 possibilities (which means, you'll probably require next-gen hardware to compute one puzzle that could take billions of years!)</p>\n\n<p>Oh, you can play around with the Sudoku Solver above by trying out a Sudoku puzzle or generate a random one and solve it. Or best, if you'd like to challenge yourself, you could try to implement this solution on Project Euler's <a href=\"https://projecteuler.net/problem=96\">Problem 96</a> by solving all 50 sudoku puzzles in a row!</p>\n\n<h2>References</h2>\n\n<ul>\n<li><a href=\"https://see.stanford.edu/materials/icspacs106b/H19-RecBacktrackExamples.pdf\">Stanford's Exhaustive Recursion and Backtracking</a></li>\n<li><a href=\"http://norvig.com/sudoku.html\">Solving Every Sudoku Puzzle</a></li>\n</ul>\n", "index": 2}, {"section": "writings", "title": "Hello World", "link": "writings/posts/hello-world", "date": "April 28th, 2017", "date_alt": "28.04.2017", "year": "2017", "date_raw": "2017-04-28", "slug": "hello-world", "category": "General", "categories": [{"title": "General", "link": "/category/general/"}], "summary": "Hello World. This is my first blog post. Hope you'll like my future blog posts!", "reading_time": "1 minute read", "preview_image_url": "", "filename": "content/writings/01_2019_01_05_hello-world.md", "status": "active", "content": "<p>Hello World! This is my first blog post.</p>\n\n<pre><code>#include &lt;iostream&gt;\nint main()\n{\n    cout &lt;&lt; \"Hello World\" &lt;&lt; endl;\n    return 0;\n}\n</code></pre>\n\n<p>I'm not a huge fan of open source CMS projects like Wordpress and Drupal, I decided to build my own custom blog engine for talking and discussing about my favorite topics.</p>\n\n<p>For this blog, I aimed for a minimalistic look, hence I decided not to use any templates or CSS frameworks to make it look bloated or fancy.</p>\n\n<p>On using this blogspace of mine, I intend to talk about technology, math, computer science, design, programming experience and a lot of positive stuff.</p>\n\n<p>Hopefully, I will try my best to update this blog as frequently as possible.</p>\n\n<p>Hope you guys will enjoy reading my future blog posts!</p>\n", "index": 1}]}